{"version":3,"sources":["connection.config.js","components/spinner/spinner-grow.js","client/index.js","components/navigation/Navigation-bar/navigation.js","pages/Home.js","pages/Error.js","components/Album/body.js","components/Album/header.js","components/Album/footer.js","components/Notification/Notification.js","pages/Album.js","components/Admin/textInput.js","components/Admin/newImageUpload.js","components/Admin/addNewModal.js","components/Admin/checkBoxInput.js","components/Admin/newMusicAdd.js","components/Tables/Genre-table.js","components/Tables/broadcast.js","components/Tables/artists-table.js","components/Tables/music-table.js","components/Tables/category-table.js","components/Tables/playlist-table.js","components/Warning/Warning.js","components/Admin/editImageUpload.js","components/Admin/editExistingMusic.js","components/Admin/editExistingModal.js","components/navigation/Navigation-bar/admin-navigation.js","pages/admin.js","components/Artist/body.js","components/Artist/header.js","components/Artist/footer.js","pages/Artist.js","components/Category/body.js","components/Category/header.js","components/Category/footer.js","pages/Category.js","pages/playlist.js","components/MusicPlayer/index.js","App.js","client/serviceWorker.js","reportWebVitals.js","index.js"],"names":["apiLinks","baseURL","broadcast","subscribe","unsubscribe","getBroadcast","deleteBroadcast","getBroadcastNotifications","status","getAudio","getAudioKey","getImage","getImageKey","getArtistImgKey","getPlaylistImgKey","getArtistImgFromName","getAllGenre","getAllAudio","getAllArtists","getAllCategory","getAllPlaylist","getAllAudioDetails","getAlbumDetails","getArtistDetails","getPlaylistById","getMusicIdNameAlbum","getCategoryByName","postSong","addGenre","addArtists","addCategory","createPlaylist","deleteMusic","deleteGenre","deleteArtist","deleteCategory","deletePlaylist","updateAdminData","updateAdminGenre","updateAdminArtist","updateAdminCategory","updateAdminPlaylist","updateAdminMusicFav","updateAdminGenreFav","updateAdminArtistFav","updateAdminCategoryFav","updateAdminPlaylistFav","updatePlaylistSongs","SpinnerRotate","props","color","size","SpinnerGrow","isOpen","autoFocus","scrollable","keyboard","contentClassName","backdrop","centered","fullscreen","className","type","urlBase64ToUint8Array","base64String","base64","repeat","length","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","Subscribe","a","navigator","serviceWorker","ready","registration","pushManager","userVisibleOnly","applicationServerKey","process","subscription","existingEndPoint","localStorage","getItem","today","Date","toISOString","axios","post","JSON","stringify","endpoint","headers","setItem","Unsubscribe","delete","data","removeItem","Broadcast","formData","MaterialUISwitch","styled","Switch","theme","width","height","padding","margin","transform","backgroundImage","encodeURIComponent","opacity","backgroundColor","palette","mode","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","Navigation","navigate","useNavigate","isDark","useContext","IsDark","setSearch","Search","setIsDark","SetIsDark","useState","notificationData","setNotificationData","createTheme","anchorEl","setAnchorEl","open","Boolean","getNotificationData","get","params","response","code","message","Notification","requestPermission","then","permission","catch","err","console","log","handleClick","event","currentTarget","handleClose","useEffect","dark","light","expand","onClick","Tooltip","title","IconButton","prev","sx","fontSize","marginRight","undefined","Badge","badgeContent","checked","Menu","id","onClose","PaperProps","elevation","filter","mt","ml","mr","display","right","bgcolor","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","map","notification","MenuItem","url","split","moveNavigate","src","image","alt","body","Divider","loaderSettings","arrows","dots","draggable","easing","infinite","lazyLoad","speed","slidesToShow","slidesToScroll","swipeToSlide","responsive","breakpoint","settings","Home","list","List","loader","Loader","playing","Playing","loadAudio","LoadAudio","playPauseState","PlayPause","currentSong","PlayerContext","mouseId","setMouseId","handleStateChange","e","preventDefault","document","Fragment","style","fluid","categoryList","Object","keys","catList","ll","sort","b","keyA","timeStamp","keyB","to","item","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","musicTitle","musicImageKey","cursor","albumTitle","Array","from","index","Skeleton","animation","variant","dummy","idx","artistList","artist","textAlign","Error","Body","paused","songList","SongList","currentPlayer","calculateTimeContext","CalculateTimeContext","playId","setPlayId","setPlaying","updatePlayId","value","updatePlayPause","song","artists","art","duration","Header","Artists","totalDuration","Duration","calculateTotalDuration","Footer","Success","autoClose","toast","success","hideProgressBar","closeOnClick","pauseOnFocusLoss","pauseOnHover","progress","error","transition","Bounce","React","createContext","Album","useParams","albumName","setLoader","setSongList","setArtists","setTotalDuration","abortController","AbortController","getAlbum","signal","Set","songs","flat","reduce","partial_sum","abort","Provider","time","Infinity","minutes","Math","floor","seconds","String","TextInput","xs","justifyContent","for","required","labelName","alignSelf","check","TextField","onChange","target","label","Checkbox","onCheckBoxChange","checkedValue","inputProps","icon","checkedIcon","NewImageUpload","musicImgPath","musicImgName","close","removeSelectedImage","accept","uploadMusicImage","ref","hiddenFileInput","outline","AddNewModal","useRef","setUrl","name","setName","setBody","checkBoxChecked","setCheckBoxChecked","artistImg","setArtistImg","artistImgName","setArtistImgName","artistImgPath","setArtistPath","setData","tabId","artistRows","push","rowData","genreRows","categoryRows","broadcastRows","playlistRows","addDetail","controller","names","nam","trim","FormData","append","types","show","constructor","toggle","header","files","URL","createObjectURL","current","click","CheckBoxInput","FormControl","InputLabel","Select","labelId","multiple","handleChange","input","OutlinedInput","renderValue","selected","join","MenuProps","indexOf","ListItemText","primary","random","maxHeight","ITEM_HEIGHT","NewMusicAdd","genreList","setGenreList","setArtistList","setCategoryList","genre","category","musicName","addMusicWidget","musicDuration","hiddenMusicInput","uploadMusic","saveUploadMusic","handleMusicClick","fav","setFav","handleGenreChange","removeMusicDetails","removeSelectedSong","updateAddMusicWidget","handleCategoryChange","setMusicTitle","setAlbumTitle","genreController","artistController","categoryController","getGenreList","getArtistList","getCategoryList","lg","calculateSongTime","columns","minWidth","align","maxWidth","GenreTable","setRows","rows","page","setPage","rowsPerPage","setRowsPerPage","updateFavState","put","state","row","ThemeProvider","Paper","overflow","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","hover","role","tabIndex","Edit","editGenre","Delete","toggleWarning","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","BroadcastTable","ArtistsTable","editArtist","StickyHeadTable","editRow","CategoryTable","editCategory","commands","Transition","Slide","direction","SimpleDialog","Dialog","DialogTitle","pt","command","ListItem","button","findIndex","ListItemAvatar","Avatar","blue","PlaylistTable","descriptionElementRef","setOpen","updateElement","setUpdateElement","openMusicList","setOpenMusicList","editMusicList","setEditMusicList","existingMusicList","setExistingMusicList","openAddMusicList","setOpenAddMusicList","addMusicList","setAddMusicList","setChecked","handleAddMusicOpen","handleAddMusicClose","saveAddMusic","songId","handleSongListClose","getSelectedPlaylistSongs","playlist","signalAborter","handleSongListSave","descriptionElement","focus","editPlaylist","fullScreen","TransitionComponent","AppBar","Toolbar","edge","Typography","flex","Button","dense","secondaryAction","music","newList","splice","deletePlaylistSong","secondary","DialogContentText","scroll","DialogContent","dividers","currentIndex","newChecked","handleToggle","disablePadding","ListItemButton","DialogActions","DeleteWarning","deleteRow","EditImageUpload","imageKey","flexDirection","EditExistingMusic","audioRef","load","setLoad","currentPaused","setCurrentPaused","musicKey","setMusicKey","musicImgKey","setMusicImgKey","editMusicWidget","editId","updateRow","musicPath","updateEditMusicWidget","closeWidget","pauseSong","play","pause","updateSongState","onended","oncanplaythrough","readyState","saveEditFile","imgFileController","audioFileController","getImageFileKey","getAudioFileKey","currentTime","EditExistingModal","editedRow","artistImgFileController","playlistImgFileController","getArtistImageFileKey","artistImgKey","getPlaylistImageFileKey","AdminNavigation","sticky","musicRows","Admin","audioDurationRef","setTabId","setEditId","setHeader","modalId","setModalId","deleteId","setDeleteId","warning","setWarning","catGenValue","setCatGenValue","deleteItemName","setDeleteItemName","setGenre","setArtist","setCategory","showBroadCast","setShowBroadCast","setAddMusicWidget","setCreatePlaylist","addGenreWidget","setAddGenreWidget","setEditMusicWidget","addArtistWidget","setAddArtistWidget","addCategoryWidget","setAddCategoryWidget","editExistingWidget","setEditExistingWidget","setMusic","setMusicName","setMusicPath","setMusicDuration","musicImg","setMusicImg","setMusicImgName","setMusicImgPath","updateTabId","defaultProps","options","getOptionLabel","option","playlist_name","parseInt","musicController","broadCastController","playlistController","getMusicData","getArtistsData","getGenreData","getCategoryData","getBroadCastData","getPlaylistData","getSearchedRow","searchedData","toLowerCase","includes","self","entry","webkitURL","createElement","preload","onloadedmetadata","revokeObjectURL","remove","editArtistGenreCategoryPlaylist","domain","editTableRow","actions","tabs","Autocomplete","evt","val","getSearchedAutoCompleteRow","autoComplete","includeInputInList","renderInput","activeTab","editableRow","Box","flexGrow","bottom","Backdrop","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","action","SpeedDialAction","tooltipTitle","tooltipOpen","albumList","AlbumList","album","Artist","artistName","setAlbumList","Category","Playlist","MusicPlayer","forwardRef","useTheme","borderRef","volumeRef","setStyle","loading","setLoading","setPlaylist","setCurrentSong","currentSongIdx","setCurrentSongIdx","volume","setVolume","setCurrentTime","endTime","setEndTime","updateBorderRef","useCallback","playPauseSong","prevSong","nextSong","useImperativeHandle","handlePlayPause","handleNextSong","handlePrevSong","handleVolumeInc","vol","parseFloat","toFixed","volumeInc","handleVolumeDec","volumeDec","loadMusic","playPromise","_","currentSongIndex","obj","Slider","default","step","max","boxShadow","min","orient","defaultValue","onTimeUpdate","musicList","reducer","allArtistData","artistData","genreData","categoryData","term","allArtistList","j","find","register","scope","addEventListener","installingWorker","installing","App","library","add","faHome","player","search","searchItem","setSearchItem","querySearch","setQuerySearch","useReducer","dispatch","handleKeyPress","removeEventListener","getAudioData","prevData","parse","toggleSearch","alignItems","searchMusicList","searchAlbumList","searchArtistList","my","textDecoration","marginTop","exact","path","element","newestOnTop","rtl","Flip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b7187b88.chunk.js","sourcesContent":["export const apiLinks = {\r\n    // baseURL: \"http://localhost:5000/\" // local Development\r\n    // baseURL: \"http://localhost:8000/\" // local Development\r\n    // baseURL : \"http://3.109.59.110/\" // testing\r\n    baseURL: \"https://sangeetbackend.tech/\" // Production\r\n};\r\n\r\n// serviceWorker subscription\r\napiLinks.broadcast = apiLinks.baseURL+\"broadcast\";\r\napiLinks.subscribe = apiLinks.baseURL+\"subscription\";\r\napiLinks.unsubscribe = apiLinks.baseURL+\"unsubcription\";\r\napiLinks.getBroadcast = apiLinks.baseURL+\"getAllBroadCast\";\r\napiLinks.deleteBroadcast = apiLinks.baseURL+\"deleteBroadcast/\";\r\napiLinks.getBroadcastNotifications = apiLinks.baseURL+\"getAllBroadcastNotification\";\r\n\r\n// get Links\r\napiLinks.status = apiLinks.baseURL+\"status\";\r\n\r\napiLinks.getAudio = apiLinks.baseURL+\"audio/\";\r\napiLinks.getAudioKey = apiLinks.baseURL+\"audioKey/\";\r\n\r\napiLinks.getImage = apiLinks.baseURL+\"image/\";\r\napiLinks.getImageKey = apiLinks.baseURL+\"imageKey/\";\r\napiLinks.getArtistImgKey = apiLinks.baseURL+\"artistImageKey/\";\r\napiLinks.getPlaylistImgKey = apiLinks.baseURL+\"playlistImageKey/\";\r\napiLinks.getArtistImgFromName = apiLinks.baseURL+\"getImageByArtistName/\";\r\n\r\napiLinks.getAllGenre = apiLinks.baseURL+\"getAllGenre\";\r\napiLinks.getAllAudio = apiLinks.baseURL+\"getAllMusic\";\r\napiLinks.getAllArtists = apiLinks.baseURL+\"getAllArtists\";\r\napiLinks.getAllCategory = apiLinks.baseURL+\"getAllCategory\";\r\napiLinks.getAllPlaylist = apiLinks.baseURL+\"getAllPlaylist\";\r\napiLinks.getAllAudioDetails = apiLinks.baseURL+\"getAllMusicDetails\";\r\n\r\napiLinks.getAlbumDetails = apiLinks.baseURL+\"album/\";\r\napiLinks.getArtistDetails = apiLinks.baseURL+\"artist/\";\r\napiLinks.getPlaylistById = apiLinks.baseURL+\"getPlaylistById/\";\r\napiLinks.getMusicIdNameAlbum = apiLinks.baseURL+\"getMusicIdNameAlbum\";\r\napiLinks.getCategoryByName = apiLinks.baseURL+\"getCategoryByName/\";\r\n\r\n// post Links\r\napiLinks.postSong = apiLinks.baseURL+\"addNewSong\";\r\napiLinks.addGenre = apiLinks.baseURL+\"postNewGenre\";\r\napiLinks.addArtists = apiLinks.baseURL+\"postNewArtists\";\r\napiLinks.addCategory = apiLinks.baseURL+\"postNewCategory\";\r\napiLinks.createPlaylist = apiLinks.baseURL+\"postNewPlaylist\";\r\n\r\n// delete Links\r\napiLinks.deleteMusic = apiLinks.baseURL+\"admin/musicDelete/\";\r\napiLinks.deleteGenre = apiLinks.baseURL+\"admin/genreDelete/\";\r\napiLinks.deleteArtist = apiLinks.baseURL+\"admin/artistDelete/\";\r\napiLinks.deleteCategory = apiLinks.baseURL+\"admin/categoryDelete/\"\r\napiLinks.deletePlaylist = apiLinks.baseURL+\"admin/playlistDelete/\";\r\n\r\n// put Links\r\napiLinks.updateAdminData = apiLinks.baseURL+\"admin/updateData/\";\r\napiLinks.updateAdminGenre = apiLinks.baseURL+\"admin/updateGenre/\";\r\napiLinks.updateAdminArtist = apiLinks.baseURL+\"admin/updateArtist/\";\r\napiLinks.updateAdminCategory = apiLinks.baseURL+\"admin/updateCategory/\";\r\napiLinks.updateAdminPlaylist = apiLinks.baseURL+\"admin/updatePlaylist/\";  \r\n\r\napiLinks.updateAdminMusicFav = apiLinks.baseURL+\"admin/updateMusicFav/\";\r\napiLinks.updateAdminGenreFav = apiLinks.baseURL+\"admin/updateGenreFav/\";\r\napiLinks.updateAdminArtistFav = apiLinks.baseURL+\"admin/updateArtistFav/\";\r\napiLinks.updateAdminCategoryFav = apiLinks.baseURL+\"admin/updateCategoryFav/\";\r\napiLinks.updateAdminPlaylistFav = apiLinks.baseURL+\"admin/updatePlaylistFav/\";  \r\napiLinks.updatePlaylistSongs = apiLinks.baseURL+\"admin/updatePlaylistSong/\";","import React from 'react';\r\nimport { Modal, ModalBody, Spinner } from 'reactstrap';\r\n\r\nimport \"./spinner-grow.css\";\r\n\r\nconst SpinnerGrow = (props) => {\r\n\r\n    return(\r\n        <Modal \r\n            isOpen={true}\r\n            autoFocus={true}\r\n            scrollable={false}\r\n            keyboard={false}\r\n            contentClassName='loader-modal-class'\r\n            backdrop='static'\r\n            centered\r\n            fullscreen=\"md\"\r\n            size='sm'\r\n        >\r\n            <ModalBody>\r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    className='first-dot-spinner'\r\n                    type=\"grow\"\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n                \r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    type=\"grow\"\r\n                    className='second-dot-spinner'\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n                    \r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    className='third-dot-spinner'\r\n                    type=\"grow\"\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst SpinnerRotate = (props) => {\r\n\r\n    return(\r\n        <Spinner\r\n            color={props.color || \"success\"}\r\n            size={props.size || \"\"}\r\n        >\r\n            Loading...\r\n        </Spinner>\r\n    );\r\n\r\n};\r\n\r\nexport default SpinnerGrow;\r\n\r\nexport {\r\n    SpinnerRotate\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { apiLinks } from \"../connection.config\";\r\n\r\nconst publicVapidKey = process.env.REACT_APP_PUBLIC_VAPID_KEY;\r\n\r\nconst urlBase64ToUint8Array = (base64String) => {\r\n    // console.log(base64String);\r\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/-/g, '+')\r\n      .replace(/_/g, '/');\r\n  \r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n  \r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n};\r\n\r\nexport const Subscribe = async () => {\r\n    if (!('serviceWorker' in navigator)) return;\r\n  \r\n    const registration = await navigator.serviceWorker.ready;\r\n  \r\n    // Subscribe to push notifications\r\n    const subscription = await registration.pushManager.subscribe({\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\r\n    });\r\n    \r\n    const existingEndPoint = window?.localStorage?.getItem(\"endpoint\");\r\n\r\n    const today = new Date().toISOString();\r\n    \r\n    await axios.post(apiLinks.subscribe, \r\n        JSON.stringify({subscription: subscription, today: today, endpoint: existingEndPoint}), {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        });\r\n        \r\n    if(window.localStorage){\r\n        window.localStorage.setItem(\"endpoint\", subscription.endpoint);\r\n    }\r\n};\r\n\r\nexport const Unsubscribe = async () => {\r\n    if(window.localStorage){\r\n\r\n        const endpoint = window.localStorage.getItem(\"endpoint\");\r\n        if(endpoint){\r\n            await axios.delete(apiLinks.unsubscribe, {\r\n                data: {\r\n                    endpoint: endpoint\r\n                }\r\n            });\r\n\r\n            window.localStorage.removeItem(\"endpoint\");\r\n        }\r\n    }\r\n};\r\n\r\nexport const Broadcast = async (formData) => {\r\n    return await axios.post(apiLinks.broadcast, formData);\r\n};\r\n\r\n","import axios from \"axios\";\r\nimport Menu from '@mui/material/Menu';\r\nimport Badge from '@mui/material/Badge';\r\nimport Switch from '@mui/material/Switch';\r\nimport { createTheme } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\n// import { Navbar, NavItem, Nav, NavbarToggler, NavbarBrand, NavLink,\r\n//         Offcanvas, OffcanvasHeader, OffcanvasBody } from \"reactstrap\";\r\n// import { faHome, faMusic, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Subscribe } from \"../../../client\";\r\nimport { IsDark, SetIsDark, Search } from \"../../../App\";\r\nimport { apiLinks } from \"../../../connection.config.js\";\r\n\r\nimport \"./navigation.css\";\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n    width: 62,\r\n    height: 34,\r\n    padding: 7,\r\n    '& .MuiSwitch-switchBase': {\r\n      margin: 1,\r\n      padding: 0,\r\n      transform: 'translateX(6px)',\r\n      '&.Mui-checked': {\r\n        color: '#fff',\r\n        transform: 'translateX(22px)',\r\n        '& .MuiSwitch-thumb:before': {\r\n          backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n            '#fff',\r\n          )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n        },\r\n        '& + .MuiSwitch-track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n        },\r\n      },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#ffc107',\r\n      width: 32,\r\n      height: 32,\r\n      '&:before': {\r\n        content: \"''\",\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        left: 0,\r\n        top: 0,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          '#111',\r\n        )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n      },\r\n    },\r\n    '& .MuiSwitch-track': {\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n      borderRadius: 20 / 2,\r\n    },\r\n}));\r\n\r\nconst Navigation = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const isDark = useContext(IsDark);\r\n    const setSearch = useContext(Search);\r\n    const setIsDark = useContext(SetIsDark);\r\n\r\n    // const [isOpen, setIsOpen] = useState(false);\r\n    const [notificationData, setNotificationData] = useState([]);\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: isDark ? \"dark\" : \"light\"\r\n        }\r\n    });\r\n\r\n    // const updateNavClick = () => {\r\n    //     setIsOpen(prev => !prev);\r\n    // };\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const getNotificationData = async () => {\r\n        if(window?.localStorage?.getItem(\"endpoint\")){\r\n            const endpoint = window.localStorage.getItem(\"endpoint\");\r\n            const response = await axios.get(apiLinks.getBroadcastNotifications, {\r\n                params: {\r\n                    endpoint: endpoint\r\n                }\r\n            });\r\n            if(response.data.code === 200){\r\n                setNotificationData(response.data.message);\r\n            }\r\n            else{\r\n                setNotificationData([]);\r\n            }\r\n        }\r\n        else{\r\n            Notification.requestPermission().then(permission => {\r\n                if(permission === \"granted\"){\r\n                    Subscribe();\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleClick = async (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        await getNotificationData();\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const moveNavigate = (notification) => {\r\n        const url = notification.url.split('https://sangeet.tech/');\r\n        navigate(\"../\"+url[1]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNotificationData();\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n\r\n            <div className=\"navigation-container\">\r\n                <Navbar \r\n                    color={isDark ? \"dark\" : \"light\"}\r\n                    dark={isDark}\r\n                    light={!isDark}\r\n                    expand=\"false\"\r\n                    className=\"one-row\"\r\n                >\r\n                    <NavbarBrand className=\"me-auto\">\r\n                        <div className=\"navbarHead\" onClick={() => navigate('/')}>\r\n                            SANGEET\r\n                        </div>\r\n                    </NavbarBrand>\r\n\r\n                    <Tooltip title=\"Search\">\r\n                        <IconButton\r\n                            onClick={() => setSearch(prev => !prev)}\r\n                        >\r\n                            <SearchIcon \r\n                                sx={{ fontSize: 30, color: isDark ? \"rgb(0, 255, 0)\" : \"rgb(0, 0, 0)\" }} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title=\"Notifications\">\r\n                        <IconButton\r\n                            sx={{\r\n                                marginRight: \"5px\"\r\n                            }}\r\n                            onClick={handleClick}\r\n                            size=\"small\"\r\n                            aria-controls={open ? 'account-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                        >\r\n                            <Badge badgeContent={notificationData.length || '0'} className=\"notification-count\" >\r\n                                <NotificationsIcon sx={{ fontSize: 30, color: isDark ? \"rgb(0, 255, 0)\" : \"rgb(0, 0, 0)\" }} />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title=\"Toggle Theme\">\r\n                        <MaterialUISwitch theme={theme} checked={isDark} onClick={setIsDark} />\r\n                    </Tooltip>\r\n\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        id=\"account-menu\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        onClick={handleClose}\r\n                        PaperProps={{\r\n                            elevation: 0,\r\n                            className: `notification-message-container ${isDark ? \"dark\" : \"light\"}`,\r\n                            sx: {\r\n                                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                                mt: 1.5,\r\n                                '& .MuiAvatar-root': {\r\n                                    width: 32,\r\n                                    height: 32,\r\n                                    ml: -0.5,\r\n                                    mr: 1,\r\n                                },\r\n                                '&:before': {\r\n                                    content: '\"\"',\r\n                                    display: 'block',\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    right: 0,\r\n                                    width: 10,\r\n                                    height: 10,\r\n                                    bgcolor: `${isDark ? \"#0A0F18\" : \"#eee\"}`,\r\n                                    transform: 'translateY(-50%) rotate(45deg)',\r\n                                    zIndex: 0,\r\n                                },\r\n                            },\r\n                        }}\r\n                        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                    >\r\n                        {\r\n                            notificationData.length > 0 ?\r\n                                notificationData.map(notification => \r\n                                    <MenuItem key={notification.id} onClick={() => moveNavigate(notification)}>\r\n                                        <div>\r\n                                            <div className=\"notification-row mb-2\">\r\n                                                <div className=\"notification-image-container\">\r\n                                                    <img className=\"notification-image\"\r\n                                                        src={apiLinks.getImage + notification.image} alt={notification.title} />\r\n                                                </div>\r\n                                                <div className=\"notification-text-container\">\r\n                                                    <div className=\"notification-title\">\r\n                                                        {notification.title}\r\n                                                    </div>\r\n                                                    <div className=\"notification-body\">\r\n                                                        {notification.body}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Divider />\r\n                                        </div>\r\n                                    </MenuItem>\r\n                                ) : \r\n                                <div className=\"no-notifications-container\">\r\n                                    <h5 className=\"no-notifications\">\r\n                                        No Notifications Available\r\n                                    </h5>\r\n                                </div>\r\n                        }\r\n                    </Menu>\r\n\r\n                    {/* <NavbarToggler className=\"me-2\" onClick={updateNavClick} />\r\n                    \r\n                    <Offcanvas isOpen={isOpen} className=\"offcanvas-tag\" scrollable={false}\r\n                        toggle={updateNavClick} direction=\"end\">\r\n                        <OffcanvasHeader toggle={updateNavClick} className=\"custom-close-icon-canvas-header\" />\r\n                        <OffcanvasBody className=\"navbar-menu-links\">\r\n                            <Nav className=\"ms-auto\" navbar>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate(\"/\")}>\r\n                                        <FontAwesomeIcon icon={faHome} /> \r\n                                        <span className=\"extra-spacing\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item show-on-small\">\r\n                                    <div className=\"navbar-item-link\"\r\n                                        onClick={() => setSearch(prev => !prev)}\r\n                                    >\r\n                                        <SearchIcon \r\n                                            sx={{ fontSize: 30, color: isDark ? \"rgb(0, 255, 0)\" : \"rgb(0, 0, 0)\" }} />\r\n                                        <span className=\"extra-spacing\" /> Search\r\n                                    </div>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faMusic} /> \r\n                                        <span className=\"extra-spacing\" /> Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate('/admin')}>\r\n                                        <FontAwesomeIcon icon={faSignInAlt} /> \r\n                                        <span className=\"extra-spacing\" /> Login / SignUp \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </OffcanvasBody>\r\n                    </Offcanvas> */}\r\n                </Navbar>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import Slider from \"react-slick\";\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport React, { useState, useContext } from \"react\";\r\n\r\nimport { apiLinks } from '../connection.config';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\nimport { LoadAudio, PlayerContext, PlayPause, Playing, IsDark, List, Loader } from \"../App\";\r\n\r\nimport \"./Home.css\";\r\n\r\nconst loaderSettings = {\r\n    arrows: false,\r\n    dots: false,\r\n    draggable: false,\r\n    easing: \"linear\",\r\n    infinite: false,\r\n    lazyLoad: \"ondemand\",\r\n    speed: 500,\r\n    slidesToShow: 8,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: false,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1500,\r\n            settings: {\r\n              slidesToShow: 7,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1350,\r\n            settings: {\r\n              slidesToShow: 6,\r\n            }\r\n        },\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 850,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst settings = {\r\n    arrows: true,\r\n    dots: false,\r\n    draggable: true,\r\n    easing: \"linear\",\r\n    infinite: false,\r\n    lazyLoad: \"ondemand\",\r\n    speed: 500,\r\n    slidesToShow: 8,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1500,\r\n            settings: {\r\n              slidesToShow: 7,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1350,\r\n            settings: {\r\n              slidesToShow: 6,\r\n            }\r\n        },\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 850,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Home = (props) => {\r\n    const list = useContext(List);\r\n    const isDark = useContext(IsDark);\r\n    const loader = useContext(Loader);\r\n    const playing = useContext(Playing);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n    const [mouseId, setMouseId] = useState(0);\r\n\r\n    const handleStateChange = (e) => {\r\n        const event = {\r\n            ...e,\r\n            code: \"Space\",\r\n            preventDefault : () => {}\r\n        };\r\n        playPauseState(event);\r\n    };\r\n\r\n    document.title = 'Sangeet - Enjoy Ad Free Music';\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <div className={`page-content ${isDark ? \"dark\" : \"light\"}`}\r\n                style={currentSong.id ? {height: \"calc(100vh - 215px)\"} : {height: \"calc(100vh - 90px)\"}}> \r\n                <Container key='category-container' className=\"mt-3\" fluid>\r\n                    {list.categoryList ?  \r\n                        Object.keys(list.categoryList).map(catList => {\r\n                            let ll = [];\r\n                            if(catList === 'New Releases')\r\n                                ll = list.categoryList[catList].sort((a, b) => {\r\n                                    let keyA = new Date(a.timeStamp);\r\n                                    let keyB = new Date(b.timeStamp);\r\n                                    if(keyA < keyB) return 1;\r\n                                    else if(keyA > keyB) return -1;\r\n                                    else return 0;\r\n                                });\r\n                            else\r\n                                ll = list.categoryList[catList];\r\n\r\n                            return (\r\n                                <Container key={catList} className={`mt-3 slider-container ${isDark ? \"dark\" : \"light\"}`} fluid>\r\n                                    <h2 className={`category-list-heading ${isDark ? \"dark-heading\" : \"light-heading\"}`} \r\n                                        title={catList}>\r\n                                        <Link to={`/category/${catList}`} className={`category-title ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                            {catList}\r\n                                        </Link>\r\n                                    </h2>\r\n                                    <Slider {...settings}>\r\n                                        {ll.map(item => {\r\n                                            return (\r\n                                                <div key={item.id} className={`mt-3 mb-3 custom-card-items song-list-items ${isDark ? \"dark-card\" : \"light-card\"}`}\r\n                                                    onMouseEnter={() => setMouseId(item.id)}\r\n                                                    onMouseLeave={() => setMouseId(0)}\r\n                                                    onTouchStart={() => setMouseId(item.id)}                                                   \r\n                                                    onTouchEnd={() => setMouseId(item.id)}\r\n                                                >\r\n                                                    <div className=\"card-image-container\">\r\n                                                        \r\n                                                        <div className={`hide-hover-play-icon ${mouseId === item.id || item.id === currentSong.id ? \r\n                                                                                                    \"show\": null }`}\r\n                                                            title={`Play ${item.musicTitle}`}\r\n                                                        >\r\n                                                            {\r\n                                                                item.id === currentSong.id && playing ?\r\n                                                                <PauseIcon className=\"play-icon-image-overlay\" onClick={handleStateChange} /> :\r\n                                                                <PlayArrowIcon className=\"play-icon-image-overlay\" \r\n                                                                    onClick={(e) => item.id === currentSong.id ? handleStateChange(e): loadAudio(ll, item, e)}\r\n                                                                />  \r\n                                                            }\r\n                                                        </div>\r\n                                        \r\n                                                        <img \r\n                                                            src={apiLinks.getImage + item.musicImageKey} \r\n                                                            alt={item.musicTitle} \r\n                                                            className=\"card-image\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"card-text-container\">\r\n                                                        <div className=\"card-text\">\r\n                                                            <h5 className={`pt-3 song-name ${isDark ? \"hover-dark\" : \"hover-light\"}`} title={`Play ${item.musicTitle}`}>\r\n                                                                <span style={{cursor: \"pointer\"}} \r\n                                                                    onClick={(e) => loadAudio(ll, item, e)} >\r\n                                                                    {item.musicTitle}\r\n                                                                </span>\r\n                                                            </h5>\r\n                                                            <h6 title={`Watch ${item.albumTitle}`} className={`album-title ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                                                <Link to={`/album/${item.albumTitle}`} className={`album-title ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                                                    {item.albumTitle}\r\n                                                                </Link>\r\n                                                            </h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                    </Slider>\r\n                                </Container>\r\n                            );\r\n                        })\r\n                    : Array.from(new Array(3)).map((item, index) => {\r\n                        return (\r\n                            <Container key={index} className=\" mt-3 slider-container\" fluid>\r\n                                <Skeleton sx={isDark ? {bgcolor: '#ffffff29'}: null} animation='wave' variant=\"h1\" width=\"30%\" height=\"3rem\" className=\"mb-3 mt-3\" />\r\n                                <Slider {...loaderSettings}>\r\n                                    {\r\n                                        Array.from(new Array(10)).map((dummy, idx) => {\r\n                                            return (\r\n                                                <React.Fragment key={idx}>\r\n                                                    <div className=\"card-image-container\">\r\n                                                        <Skeleton sx={isDark ? {bgcolor: '#ffffff29'}: null} animation='wave' variant=\"rectangular\" height=\"100%\" className=\"card-image\" />\r\n                                                    </div>\r\n                                                    <div className=\"card-text-container\">\r\n                                                        <Skeleton sx={isDark ? {bgcolor: '#ffffff29'}: null} animation='wave' variant=\"text\" className=\"card-text\" />\r\n                                                    </div>\r\n                                                </React.Fragment>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </Slider>\r\n                            </Container>\r\n                        );\r\n                    })\r\n                    }\r\n                </Container>\r\n                <Container key=\"artist-container\" className=\"mt-5\" fluid>\r\n                    { list.artistList ? \r\n                        <Container className={`slider-container ${isDark ? \"dark\" : \"light\"}`} fluid>\r\n                            <h2 className={`category-list-heading ${isDark ? \"dark-heading\" : \"light-heading\"}`} title=\"Artists\">Artists</h2>\r\n                            <Slider {...settings}>\r\n                            { Object.keys(list.artistList).map((artist, id) => {\r\n                                return (\r\n                                    <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                        <Link to={`/artist/${artist}`} className={`artist-name ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                            <div className=\"artist-card-image-container d-flex\">\r\n                                                <img \r\n                                                    src={apiLinks.getArtistImgFromName + artist} \r\n                                                    alt={artist} \r\n                                                    className={`artist-card-image ${isDark ? \"dark\" : \"light\"}`}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"card-text-container mt-0\">\r\n                                                <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                                    <h4 className={`pt-3 pb-3 artist-name ${isDark ? \"hover-dark\" : \"hover-light\"}`} title={artist}>\r\n                                                            {artist}\r\n                                                    </h4>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                            </Slider>\r\n                        </Container>\r\n                    : Array.from(new Array(1)).map((item, index) => {\r\n                        return (\r\n                            <Container key={index} className=\" mt-3 slider-container\" fluid>\r\n                                <Skeleton sx={isDark ? {bgcolor: '#ffffff29'}: null} animation='wave' variant=\"h1\" width=\"30%\" height=\"3rem\" className=\"mb-3 mt-3\" />\r\n                                <Slider {...loaderSettings}>\r\n                                    {\r\n                                        Array.from(new Array(10)).map((dummy, idx) => {\r\n                                            return (\r\n                                                <React.Fragment key={idx}>\r\n                                                    <div className=\"card-image-container\">\r\n                                                        <Skeleton sx={isDark ? {bgcolor: '#ffffff29'}: null} animation='wave' variant=\"circular\" height=\"100px\" width=\"100px\" className=\"card-image\" />\r\n                                                    </div>\r\n                                                    <div className=\"card-text-container\">\r\n                                                        <Skeleton sx={isDark ? {bgcolor: '#ffffff29'}: null} animation='wave' variant=\"text\" className=\"card-text\" />\r\n                                                    </div>\r\n                                                </React.Fragment>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </Slider>\r\n                            </Container>\r\n                        );\r\n                    }) \r\n                    }\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { IsDark } from '../App';\r\nimport Navigation from '../components/navigation/Navigation-bar/navigation';\r\n\r\nimport \"./Error.css\";\r\n\r\nconst Error = () => {\r\n  const isDark = useContext(IsDark);\r\n\r\n  return(\r\n      <React.Fragment>\r\n      <Navigation />\r\n      <div className='error-page'>\r\n          <h1 style={isDark ? { color: \"#eee\" } : { color: \"#000\" }}>Error: 404</h1>\r\n          <h3 style={isDark ? { color: \"#eee\" } : { color: \"#000\" }}> Page Not Found</h3>\r\n      </div>\r\n      </React.Fragment>\r\n  );  \r\n};\r\n\r\nexport default Error;","// for song list\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useContext } from \"react\";\r\nimport PlayCircle from \"@mui/icons-material/PlayCircle\";\r\nimport PauseCircle from \"@mui/icons-material/PauseCircle\";\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\n\r\nimport { CalculateTimeContext, SongList } from \"../../pages/Album\";\r\nimport { PlayerContext, PlayPause, Playing, LoadAudio, IsDark } from \"../../App\";\r\n\r\nimport \"./body.css\";\r\n\r\nconst Body = (props) => {\r\n    \r\n    const isDark = useContext(IsDark);\r\n    const paused = useContext(Playing);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentPlayer = useContext(PlayerContext);\r\n    const calculateTimeContext = useContext(CalculateTimeContext);\r\n\r\n    const [playId, setPlayId] = useState(0);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const updatePlayId = (value) => {\r\n        setPlayId(value);\r\n    };\r\n\r\n    const updatePlayPause = (event) => {\r\n        const e = {\r\n            ...event, \r\n            code: \"Space\",\r\n            preventDefault: () => {}\r\n        };\r\n\r\n        playPauseState(e);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container> \r\n                <div className=\"song-list\">\r\n                    {\r\n                        songList.map((song, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className={`table-row-${isDark ? \"dark\" : \"light\"}`}\r\n                                        key={song.id}\r\n                                        style={currentPlayer.id && currentPlayer.id === song.id ? {color: isDark ? \"#eee\" : \"#111\"}: null}\r\n                                        onMouseEnter={() => {updatePlayId(song.id)}}\r\n                                        onMouseLeave={() => {updatePlayId(0)}}\r\n                                        onClick={e => loadAudio(songList, song, e)}\r\n                                    >\r\n                                        <div className=\"srno-title\">\r\n                                            <div className=\"srno\">\r\n                                                {\r\n                                                    currentPlayer.id && currentPlayer.id === song.id ?\r\n                                                    <span\r\n                                                        onMouseEnter={() => setPlaying(true)}\r\n                                                        onMouseLeave={() => setPlaying(false)}\r\n                                                    > \r\n                                                        {\r\n                                                            !paused ?\r\n                                                                <PlayCircle \r\n                                                                    onClick = {e => updatePlayPause(e)}\r\n                                                                /> :\r\n                                                                playing ?\r\n                                                                    <PauseCircle \r\n                                                                        onClick = {e => updatePlayPause(e)}\r\n                                                                    />:\r\n                                                                    <EqualizerIcon />\r\n                                                        }\r\n                                                    </span>:\r\n                                                    playId === song.id ? \r\n                                                        <PlayCircle /> :\r\n                                                        index+1\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"title\">\r\n                                                <div className=\"music-title\">\r\n                                                    {song.musicTitle}\r\n                                                </div>\r\n                                                <div className=\"d-flex custom-artists\">\r\n                                                    {\r\n                                                        song.artists?.map((art, index) => {\r\n                                                            return(\r\n                                                                <div className=\"\" key={index}>\r\n                                                                    <span className=\"song-list-artist\">\r\n                                                                        {\r\n                                                                            art === \"Various Artists\" ? \r\n                                                                                art : \r\n                                                                                <Link to={`/artist/${art}`}>\r\n                                                                                        {art}\r\n                                                                                </Link>\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                    <span className=\"song-list-artist-separation\">\r\n                                                                        {song.artists.length - 1 > index ? \",\": \"\"}&nbsp;\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"duration\">\r\n                                                {song.duration ? calculateTimeContext(song.duration) : '--:--'}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        index < songList.length - 1 ? (\r\n                                            <div className=\"custom-bottom-border\" key={index} />\r\n                                        ) : <React.Fragment />\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;","import { Container } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useContext } from \"react\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\nimport PlayCircleFilledIcon from '@mui/icons-material/PlayCircleFilled';\r\n\r\nimport { IsDark, LoadAudio } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\nimport { CalculateTimeContext, SongList, Artists, Duration } from \"../../pages/Album\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const artists = useContext(Artists);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const totalDuration = useContext(Duration);\r\n    const calculateTotalDuration = useContext(CalculateTimeContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className=\"mt-3\">\r\n                <div className=\"album-container\">\r\n                    <div className={`album-image-container ${isDark ? \"dark\" : \"light\"}`}>\r\n                        <img \r\n                            className=\"album-image\"\r\n                            src={apiLinks.getImage + songList[0]?.musicImageKey} \r\n                            alt={songList[0]?.albumTitle} />\r\n                    </div>\r\n                    <div className=\"album-details\">\r\n                        <div className=\"album-heading\">\r\n                            Album\r\n                        </div>\r\n                        <div className=\"album-name\">\r\n                            {songList[0]?.albumTitle}\r\n                        </div>\r\n                        <div className=\"album-artists\">\r\n                            {\r\n                                artists.length > 2 ? \r\n                                    \"Various Artists\" : \r\n                                    artists?.map((artist, idx) => {\r\n                                        return (\r\n                                            <span key={idx}>\r\n                                                <Link className={`artist-${isDark ? \"dark\" : \"light\"}`} to={`/artist/${artist}`}>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                                {idx < (artists.length - 1) ? \" , \" : \" \"}\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                            } &nbsp; <CircleIcon style={{ fontSize: '.5rem' }} />&nbsp; { calculateTotalDuration(totalDuration) }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <PlayCircleFilledIcon \r\n                        className={`album-play-button ${isDark ? \"dark\" : \"light\"}`} \r\n                        onClick={(e) => loadAudio(songList, songList[0], e)}\r\n                    />\r\n                    \r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","// for related artists\r\nimport Slider from 'react-slick';\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { IsDark } from '../../App';\r\nimport { Artists } from \"../../pages/Album\";\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./footer.css\";\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: true,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n          breakpoint: 1200,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 991,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Footer = (props) => {\r\n\r\n    const isDark = useContext(IsDark);\r\n    let artistList = useContext(Artists);\r\n\r\n    artistList = artistList?.filter(artist => artist !== \"Various Artists\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container key=\"artist-container\" className=\"mt-5\">\r\n                { artistList.length ? \r\n                    <Container className=\"slider-container\">\r\n                        <h2 className={`category-list-heading ${isDark ? \"dark\" : \"light\"}`} title=\"Artists\">Album Artists</h2>\r\n                        <Slider {...settings}>\r\n                        { artistList.map((artist, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container\">\r\n                                        <img \r\n                                            src={apiLinks.getArtistImgFromName + artist} \r\n                                            alt={artist} \r\n                                            className=\"artist-card-image\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className=\"pt-3 pb-3 artist-name\" title={artist}>\r\n                                                <Link to={`/artist/${artist}`} className={`artist-name ${isDark ? \"dark\" : \"light\"}`}>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3\" fluid />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import { Bounce, toast } from 'react-toastify';\r\n\r\nexport const Success = (message, autoClose=3000) => {\r\n\r\n    toast.success(message, {\r\n        position: \"top-right\",\r\n        autoClose: autoClose,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnFocusLoss: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined\r\n    });\r\n};\r\n\r\nexport const Error = (message, autoClose=5000) => {\r\n\r\n    toast.error(message, {\r\n        position: \"top-right\",\r\n        autoClose: autoClose,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnFocusLoss: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        transition: Bounce\r\n    });\r\n};\r\n\r\n","import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport Body from \"../components/Album/body\";\r\nimport Header from \"../components/Album/header\";\r\nimport Footer from \"../components/Album/footer\";\r\nimport { apiLinks } from \"../connection.config\";\r\nimport { Error } from \"../components/Notification/Notification\";\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\nimport { PlayerContext, IsDark } from \"../App\";\r\n\r\nimport \"./album.css\";\r\n\r\nexport const Artists = React.createContext();\r\nexport const SongList = React.createContext();\r\nexport const Duration = React.createContext();\r\nexport const CalculateTimeContext = React.createContext();\r\n\r\nconst Album = (props) => {\r\n    const params = useParams();\r\n    document.title = params.albumName;\r\n\r\n    const isDark = useContext(IsDark);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [songList, setSongList] = useState([]);\r\n    const [artists, setArtists] = useState([]); \r\n    const [totalDuration, setTotalDuration] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        const getAlbum = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAlbumDetails+params.albumName, {\r\n                    headers: {\r\n                        'content-type': \"application/json\"\r\n                    },\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const artist = [...new Set(response.data.message.map((songs) => songs.artists).flat())];\r\n                    const duration = response.data.message.reduce((partial_sum, a) => partial_sum + a.duration, 0);\r\n                    \r\n                    setArtists(artist);\r\n                    setTotalDuration(duration);\r\n                    setSongList(response.data.message);\r\n                    abortController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                // Error(err.message);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        getAlbum();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [params]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <div className={`page-content ${isDark ? \"dark\" : \"light\"}`}\r\n                style={currentSong.id ? {height: \"calc(100vh - 215px)\"} : {height: \"calc(100vh - 70px)\"}}> \r\n                <CalculateTimeContext.Provider value={calculateSongTime}>\r\n                    <SongList.Provider value={songList}>\r\n                        <Artists.Provider value={artists}>\r\n                            <Duration.Provider value={totalDuration}>\r\n                                <Header />\r\n                                <Body />\r\n                                <Footer />\r\n                            </Duration.Provider>\r\n                        </Artists.Provider>\r\n                    </SongList.Provider>\r\n                </CalculateTimeContext.Provider>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Album;\r\n","import React from 'react';\r\nimport { Row, Col, Label } from 'reactstrap';\r\nimport { TextField } from '@mui/material'\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\n\r\nconst TextInput = (props) => {\r\n\r\n    const label = {\r\n        inputProps: {\r\n            'aria-label': \"Favourite Check\"\r\n        }\r\n    };\r\n\r\n    const onCheckedChange = (event) => {\r\n        props.onCheckBoxChange(event.target.checked);\r\n    };\r\n\r\n    const onValueChange = (event) => {\r\n        // console.log(event);\r\n        props.onChange(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Row className='music-detail-fields'>\r\n            <Col className=\"mt-1 mb-1\" xs=\"5\">\r\n                <Label className=\"label-styling\" style={{justifyContent: \"flex-end\"}} for={props.id}>\r\n                    {\r\n                        props.required ? \r\n                        <>\r\n                            {props.labelName} <span style={{color: \"#f00\", alignSelf: \"flex-start\"}}>*</span>\r\n                        </> : \r\n                        props.labelName\r\n                    }\r\n                </Label>\r\n            </Col>\r\n            <Col className=\"mt-1 mb-1\" xs={props.check ? \"5\" : \"6\"}>\r\n                <TextField \r\n                    value={props.value}\r\n                    onChange={onValueChange}\r\n                    className=\"music-input-detail\"\r\n                    id={`standard-required ${props.id}`}\r\n                    label={props.label}\r\n                    variant=\"standard\"\r\n                />\r\n            </Col>\r\n            {\r\n                props.check ?\r\n                <Col className='mt-1 mb-1' xs=\"1\">\r\n                    <Checkbox onChange={onCheckedChange} checked={props.checkedValue} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                </Col> :\r\n                <React.Fragment />\r\n            }\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst NewImageUpload = (props) => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"image-preview\">\r\n                <img \r\n                    className='image-preview-img' \r\n                    src={props.musicImgPath} \r\n                    alt={props.musicImgName} \r\n                />\r\n            </div>\r\n            <div className='image-upload-button'>\r\n                <div className='music-upload-space d-flex justify-content-center align-items-center'>\r\n                    <span className='music-image-title'>\r\n                        \" {props.musicImgName === \"\" ? \"Select Image\" : props.musicImgName} \"\r\n                    </span>\r\n                    {\r\n                        props.musicImgName === \"\" ? <React.Fragment /> : \r\n                        <Button title='Remove Image' close onClick={props.removeSelectedImage} />\r\n                    }\r\n                </div>\r\n                <div className='music-upload-space'>\r\n                    <input \r\n                        accept='image/*'\r\n                        type=\"file\" \r\n                        onChange={props.uploadMusicImage} \r\n                        ref={props.hiddenFileInput}\r\n                        style={{display: \"none\"}}\r\n                    />\r\n                    <Button \r\n                        onClick={props.handleClick}\r\n                        color='dark'\r\n                        outline={true}\r\n                    >\r\n                        Upload Image\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewImageUpload;","import React, {useRef, useState} from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport NewImageUpload from './newImageUpload';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\nimport { apiLinks } from '../../connection.config';\r\nimport * as serviceWorker from \"../../client/index\";\r\nimport { Error, Success } from '../Notification/Notification';\r\n\r\nconst AddNewModal = (props) => {\r\n\r\n    const hiddenFileInput = useRef(null);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [url, setUrl] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [checkBoxChecked, setCheckBoxChecked] = useState(false);\r\n\r\n    const [artistImg, setArtistImg] = useState({});\r\n    const [artistImgName, setArtistImgName] = useState('');\r\n    const [artistImgPath, setArtistPath] = useState('/assets/images/artist-design.png');\r\n  \r\n    const handleClick = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n        \r\n    const uploadArtistImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setArtistImg(event.target.files);\r\n            setArtistImgName(event.target.files[0].name);\r\n            setArtistPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n\r\n    const removeSelectedImage = () => {\r\n        setArtistImg({});\r\n        setArtistImgName('');\r\n        setArtistPath('/assets/images/artist-design.png');\r\n    };\r\n\r\n    const setData = (response) => {\r\n        if( (props.tabId === 2 && props.id === '1') ||\r\n            (props.tabId === 3 && props.id === '2') ||\r\n            (props.tabId === 4 && props.id === '3') ||\r\n            (props.tabId === 5 && props.id === '4') ||\r\n            (props.tabId === 6 && props.id === '5')){\r\n                if(props.tabId === 2){\r\n                    props.artistRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 3){\r\n                    props.genreRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 4){\r\n                    props.categoryRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 5){\r\n                    props.broadcastRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 6){\r\n                    props.playlistRows.push(...(response.data.rowData));\r\n                }\r\n                else{\r\n                    Error(\"Unable to update search list by tabId\");\r\n                }\r\n            }\r\n    };\r\n\r\n    const addDetail = async () => {\r\n        let controller = new AbortController();\r\n\r\n        try{\r\n\r\n            setLoader(true);\r\n            const names = name.split(',').map(nam => nam.trim());\r\n            \r\n            const formData = new FormData();\r\n            formData.append('names', names);\r\n            formData.append(\"show\", checkBoxChecked);\r\n            let response = {};\r\n\r\n            if(props.id === '1'){\r\n                formData.append('artistImg', artistImg[0]);\r\n                response = await axios.post(apiLinks.addArtists, formData, {\r\n                    signal: controller.signal\r\n                });\r\n            }\r\n            else if(props.id === '2'){\r\n                response = await axios.post(apiLinks.addGenre, {\r\n                    types: names,\r\n                    show: checkBoxChecked,\r\n                }, {\r\n                    signal: controller.signal,\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === \"3\"){\r\n                response = await axios.post(apiLinks.addCategory, {\r\n                    types: names,\r\n                    show: checkBoxChecked,\r\n                }, {\r\n                    signal: controller.signal,\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === '4'){\r\n                formData.append(\"url\", url);\r\n                formData.append(\"body\", body);\r\n                formData.append(\"title\", name);\r\n                formData.append('image', artistImg[0]);\r\n\r\n                const today = new Date().toISOString();\r\n                formData.append(\"today\", today);\r\n                \r\n                response = await serviceWorker.Broadcast(formData);\r\n            }\r\n            else{\r\n                formData.append(\"name\", name);\r\n                formData.append('image', artistImg[0]);\r\n                response = await axios.post(apiLinks.createPlaylist, formData, {\r\n                    signal: controller.signal\r\n                });\r\n            }\r\n\r\n            if(Object.keys(response).length === 0 && response.constructor === Object){\r\n                const error = new Error();\r\n                error.message = \"Something went wrong, could add data now\";\r\n                throw error;\r\n            }\r\n            else{\r\n                if(response.data.code === 200){\r\n                    controller = null;\r\n                    Success(response.data.message);\r\n                    setData(response);\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err.message, err);\r\n        }\r\n        finally{\r\n            controller?.abort();\r\n            setLoader(false);\r\n            props.toggle(false);\r\n        }\r\n    };\r\n\r\n    const removeDetail = () => {\r\n        setName('');\r\n        setCheckBoxChecked(false);\r\n        removeSelectedImage();\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            \r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n\r\n            <Modal\r\n                isOpen={true}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='lg'\r\n                toggle={() => props.toggle(false)}\r\n            >\r\n                <ModalHeader toggle={() => props.toggle(false)}>\r\n                    <span className='modal-header-title'>\r\n                        {props.header}\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {props.id === '1' || props.id === \"4\" || props.id === \"5\" ? \r\n                        <NewImageUpload \r\n                            musicImgName={artistImgName}\r\n                            musicImgPath={artistImgPath}\r\n                            removeSelectedImage={removeSelectedImage}\r\n                            uploadMusicImage={uploadArtistImage}\r\n                            hiddenFileInput={hiddenFileInput}\r\n                            handleClick={handleClick}\r\n                        /> : \r\n                        <React.Fragment />\r\n                    }\r\n                    <TextInput \r\n                        id={props.id}\r\n                        required\r\n                        check={props.id === \"4\" ? false : true}\r\n                        labelName={props.id === \"5\" ? \"Add New Playlist\" : props.id === '4' ? \"Add BroadCast Title\" : \r\n                                    props.id === \"1\" ? \"Add New Name\" : \"Add New Type\"}\r\n                        label={props.id === \"5\" ? \"Add Playlist Name\" : props.id === '4' ? \"Add BroadCast Heading\" : \r\n                                    props.id === \"1\" ? \"Enter Artist Name\" : \"Enter Comma separated Types\"}\r\n                        value={name}\r\n                        onChange={setName}\r\n                        checkedValue={checkBoxChecked}\r\n                        onCheckBoxChange={setCheckBoxChecked}\r\n                    />\r\n                    {\r\n                        props.id === '4' ? \r\n                        <React.Fragment>\r\n                            <TextInput \r\n                                id={props.id}\r\n                                required\r\n                                check={false}\r\n                                labelName=\"Add Broadcast Body\"\r\n                                label=\"Add Broadcast Content\"\r\n                                value={body}\r\n                                onChange={setBody}\r\n                                checkedValue={checkBoxChecked}\r\n                                onCheckBoxChange={setCheckBoxChecked}\r\n                            />\r\n                            <TextInput \r\n                                id={props.id}\r\n                                required\r\n                                check={false}\r\n                                labelName=\"Add Broadcast Nav Link\"\r\n                                label=\"Add Relative Link\"\r\n                                value={url}\r\n                                onChange={setUrl}\r\n                                checkedValue={checkBoxChecked}\r\n                                onCheckBoxChange={setCheckBoxChecked}\r\n                            /> \r\n                        </React.Fragment>\r\n                        : \r\n                        <React.Fragment />\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={addDetail}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeDetail}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddNewModal;\r\n","import React from 'react';\r\nimport { Row, Col, Label } from 'reactstrap';\r\nimport { InputLabel, Select, OutlinedInput, MenuItem, \r\n        Checkbox, ListItemText, FormControl} from '@mui/material';\r\n\r\nconst CheckBoxInput = (props) => {\r\n    \r\n    return (\r\n        <FormControl sx={{width: '100%'}}>\r\n            <Row className='music-detail-fields'>\r\n                <Col className=\"mt-2 mb-3\" xs=\"5\">\r\n                    <Label className=\"label-styling-checkbox\" style={{ justifyContent: \"flex-end\" }}\r\n                        for={props.id}>\r\n                        {props.labelName}\r\n                    </Label>\r\n                </Col>\r\n                <Col className=\"mt-2 mb-3\" xs=\"7\">\r\n                    <InputLabel \r\n                        id={`demo-multiple-checkbox-label ${props.id}`}\r\n                        className=\"customized-form-label\"\r\n                    >\r\n                        {props.label}\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-multiple-checkbox-label\"\r\n                        id=\"demo-multiple-checkbox\"\r\n                        multiple\r\n                        className=\"music-input-detail\"\r\n                        value={props.type}\r\n                        onChange={props.handleChange}\r\n                        input={<OutlinedInput label=\"Tag\" />}\r\n                        renderValue={(selected) => {\r\n                            if(selected.length === 0){\r\n                                return <em>Select Artist</em>;\r\n                            }\r\n                            return selected.join(', ');\r\n                        }}\r\n                        MenuProps={props.MenuProps}\r\n                    >\r\n                    {props.names.map((name) => (\r\n                        <MenuItem key={Math.floor(Math.random() * 10000 + 1)} value={name.name || name.type || name}>\r\n                            <Checkbox checked={props.type.indexOf(name.name || name.type || name) > -1} />\r\n                            <ListItemText primary={name.name || name.type || name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default CheckBoxInput;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport CheckBoxInput from './checkBoxInput';\r\nimport NewImageUpload from './newImageUpload';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n    style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n    },\r\n    },\r\n};\r\n\r\nconst NewMusicAdd = (props) => {\r\n\r\n    const [genreList, setGenreList] = useState([]);\r\n    const [artistList, setArtistList] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n\r\n    const {genre, category, musicName, artist, musicImgPath, musicImgName, addMusicWidget, hiddenFileInput, musicDuration,\r\n        hiddenMusicInput, uploadMusic, handleClick, handleChange, saveUploadMusic, handleMusicClick, fav, setFav,\r\n        uploadMusicImage, handleGenreChange, removeMusicDetails, removeSelectedSong, removeSelectedImage,\r\n        updateAddMusicWidget, handleCategoryChange, musicTitle, albumTitle, setMusicTitle, setAlbumTitle} = props;\r\n\r\n    useEffect(() => {\r\n\r\n        let genreController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let categoryController = new AbortController();\r\n\r\n        const getGenreList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setGenreList(data);\r\n                    genreController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setGenreList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setGenreList([]);\r\n            }\r\n        };\r\n        \r\n        const getArtistList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setArtistList(data);\r\n                    artistController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setArtistList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setArtistList([]);\r\n            }\r\n        };\r\n\r\n        const getCategoryList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setCategoryList(data);\r\n                    categoryController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setCategoryList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setCategoryList([]);\r\n            }\r\n        };\r\n\r\n        getGenreList();\r\n        getArtistList();\r\n        getCategoryList();\r\n\r\n        return () => {\r\n            genreController?.abort();\r\n            artistController?.abort();\r\n            categoryController?.abort();\r\n        };\r\n\r\n    }, []);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Modal\r\n                isOpen={addMusicWidget}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='xl'\r\n                toggle={updateAddMusicWidget}\r\n            >\r\n                <ModalHeader toggle={updateAddMusicWidget}>\r\n                    <span className='modal-header-title'>\r\n                        Add New Song\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <div className='music-details'>\r\n                                \r\n\r\n                                <TextInput \r\n                                    required\r\n                                    id=\"song-name\"\r\n                                    labelName=\"Song Name\"\r\n                                    label=\"Enter Song Name\"\r\n                                    check={true}\r\n                                    value={musicTitle}\r\n                                    onChange={setMusicTitle}\r\n                                    checkedValue={fav}\r\n                                    onCheckBoxChange={setFav}\r\n                                />\r\n                                <TextInput \r\n                                    id=\"album-name\"\r\n                                    labelName=\"Album Name\"\r\n                                    label=\"Enter Album Name\"\r\n                                    value={albumTitle}\r\n                                    onChange={setAlbumTitle}\r\n                                />\r\n\r\n                                <CheckBoxInput \r\n                                    id=\"artist-name\" labelName=\"Artist Name\"\r\n                                    label=\"Select Artist\" type={artist}\r\n                                    handleChange={handleChange} MenuProps={MenuProps}\r\n                                    names={artistList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"genre-name\" labelName=\"Genre Name\"\r\n                                    label=\"Select Genre\" type={genre}\r\n                                    handleChange={handleGenreChange} MenuProps={MenuProps}\r\n                                    names={genreList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"category-name\" labelName=\"Category Name\"\r\n                                    label=\"Select Category\" type={category}\r\n                                    handleChange={handleCategoryChange} MenuProps={MenuProps}\r\n                                    names={categoryList}\r\n                                />\r\n\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n\r\n                            <Row>\r\n                                <div className='music-upload-button'>\r\n                                    <div className='music-upload-detail d-flex justify-content-center align-items-center'>\r\n                                        <span className='music-image-title' style={{textAlign: \"center\"}}>\r\n                                            <div>\r\n                                                \" {musicName.trim().length === 0 ? \"Select File\" : musicName} \"\r\n                                            </div>\r\n                                            <div>\r\n                                                Duration: {musicDuration !== 0 ? calculateSongTime(musicDuration) : '00:00'}\r\n                                            </div>\r\n                                        </span>\r\n                                        {musicName.trim().length === 0 ? \r\n                                            <React.Fragment /> : \r\n                                            <Button close title='Remove song' onClick={removeSelectedSong}/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className='music-upload-detail'>\r\n                                        <input \r\n                                            type=\"file\" \r\n                                            accept='audio/*'\r\n                                            onChange={uploadMusic} \r\n                                            ref={hiddenMusicInput}\r\n                                            style={{display: \"none\"}}\r\n                                        />\r\n                                        <Button \r\n                                            onClick={handleMusicClick}\r\n                                            color='dark'\r\n                                            outline={true}\r\n                                        >\r\n                                            Upload Song\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Row>\r\n\r\n                            <NewImageUpload \r\n                                musicImgName={musicImgName}\r\n                                musicImgPath={musicImgPath}\r\n                                removeSelectedImage={removeSelectedImage}\r\n                                uploadMusicImage={uploadMusicImage}\r\n                                hiddenFileInput={hiddenFileInput}\r\n                                handleClick={handleClick}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={saveUploadMusic}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeMusicDetails}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewMusicAdd;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'type', label: 'Genre Type', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst GenreTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n  \r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminGenreFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                              : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? (`${(rowsPerPage*page) + (index+1)}.`) : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editGenre(row.id, 'genre')} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default GenreTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'title', label: 'Title', minWidth: 100, align: \"left\" },\r\n  { id: 'body', label: 'Body', minWidth: 100, align: \"left\" },\r\n  { id: 'timestamp', label: 'Time', minWidth: 100, align: \"center\" },\r\n];\r\n\r\nconst BroadcastTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminCategoryFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default BroadcastTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'name', label: 'Artist Name', minWidth: 150, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst ArtistsTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminArtistFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editArtist(row.id, \"artist\")} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ArtistsTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: \"Sr. No.\", minWidth: 80, align: \"center\" },\r\n  { id: 'musicTitle', label: 'Music Name', minWidth: 170 },\r\n  { id: 'albumTitle', label: 'Album Name', minWidth: 130 },\r\n  { id: 'artists', label: 'Artists', minWidth: 70 },\r\n  { id: 'genre', label: 'Genre', minWidth: 70 },\r\n  { id: 'category', label: 'Category', minWidth: 70 },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nexport default function StickyHeadTable(props) {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminMusicFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className={`admin-table-content admin-table-heading ${isDark ? \"dark\" : \"light\"}`}\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell\r\n                  className={`admin-table-content admin-table-heading ${isDark ? \"dark\" : \"light\"}`}\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className={`admin-table-content admin-table-heading ${isDark ? \"dark\" : \"light\"}`}\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                        let value;\r\n                        if(column.id !== 'srno')\r\n                          value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div key={item} className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === \"srno\" ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.floor(Math.random() * 10000 + 1)} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editRow(row.id)} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.floor(Math.random() * 10000 + 1)} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'type', label: 'Category Type', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst CategoryTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminCategoryFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} \r\n                                  {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editCategory(row.id, 'category')} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default CategoryTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext, useRef } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { blue } from '@mui/material/colors';\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\nimport ViewListIcon from '@mui/icons-material/ViewList';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nimport Button from '@mui/material/Button';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from '../Notification/Notification';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'playlist_name', label: 'Playlist Title', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst commands = [  {name: 'Edit Playlist Name', icon: <DriveFileRenameOutlineIcon />}, \r\n                    {name: 'Add / Remove Songs', icon: <ViewListIcon />}];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst SimpleDialog = (props) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleClose = () => {\r\n        onClose(-1);\r\n    };\r\n\r\n    const handleListItemClick = (value) => {\r\n        onClose(commands.findIndex(command => command.name === value.name));\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <DialogTitle>Select Edit Type</DialogTitle>\r\n            <List sx={{ pt: 0 }}>\r\n                {commands.map((command) => (\r\n                    <ListItem button onClick={() => handleListItemClick(command)} key={command.name}>\r\n                        <ListItemAvatar>\r\n                            <Avatar sx={{ bgcolor: blue[100], color: blue[600] }}>\r\n                                {command.icon}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={command.name} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst PlaylistTable = (props) => {\r\n    const descriptionElementRef = useRef(null);\r\n\r\n    const { setRows } = props;\r\n\r\n    const isDark = useContext(IsDark);\r\n\r\n    const label = {\r\n        inputProps: {\r\n            'aria-label': \"Favourite Check\"\r\n        }\r\n    };\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const rows = props.rows || [];\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [updateElement, setUpdateElement] = useState(0);\r\n\r\n    const [openMusicList, setOpenMusicList] = useState(false);\r\n    const [editMusicList, setEditMusicList] = useState({});\r\n    const [existingMusicList, setExistingMusicList] = useState([]);\r\n\r\n    const [openAddMusicList, setOpenAddMusicList] = useState(false);\r\n    const [addMusicList, setAddMusicList] = useState([]);\r\n    const [checked, setChecked] = useState([]);\r\n\r\n    const handleAddMusicOpen = async () => {\r\n        try{\r\n            setLoader(true);\r\n            const response = await axios.get(apiLinks.getMusicIdNameAlbum);\r\n            if(response.data.code === 200){\r\n                setChecked([...existingMusicList]);\r\n                setAddMusicList(response.data.message);\r\n            }\r\n            else{\r\n                setAddMusicList([]);\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error while getting music list\", err);\r\n            setAddMusicList([]);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n        setOpenAddMusicList(true);\r\n    };\r\n\r\n    const handleAddMusicClose = () => {\r\n        setAddMusicList([]);\r\n        setChecked([]);\r\n        setOpenAddMusicList(false);\r\n    };\r\n\r\n    const saveAddMusic = async () => {\r\n        let abortController = new AbortController();\r\n        try{\r\n            setLoader(true);\r\n            const songId = checked.map(item => item.id);\r\n            const response = await axios.put(apiLinks.updatePlaylistSongs+editMusicList.id, \r\n                {\r\n                    data: songId,\r\n                }, \r\n                {\r\n                    signal: abortController.signal,\r\n                }\r\n            );\r\n            if(response.data.code === 200){\r\n                abortController = null;\r\n                Success(response.data.message);\r\n                handleAddMusicClose();\r\n                handleSongListClose();\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error Occured while saving playlist data\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n\r\n        abortController?.abort();\r\n    };\r\n\r\n    const handleClickOpen = (id) => {\r\n        setUpdateElement(id);\r\n        setOpen(true);\r\n    };\r\n\r\n    const getSelectedPlaylistSongs = async (playlist) => {\r\n        let signalAborter = new AbortController();\r\n\r\n        try{\r\n            setLoader(true);\r\n            const response = await axios.get(apiLinks.getPlaylistById+playlist.id, {\r\n                signal: signalAborter.signal\r\n            });\r\n\r\n            if(response.data.code === 200){\r\n                setExistingMusicList(response.data.message);\r\n                signalAborter = null;\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n                setExistingMusicList([]);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error while fetching playlist song list\", err);\r\n            Error(err.message);\r\n            setExistingMusicList([]);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n        signalAborter?.abort();\r\n    };\r\n\r\n    const handleClose = (index) => {\r\n        if(index === -1){\r\n            setUpdateElement(0);\r\n        }\r\n        else if(index === 0){\r\n            props.editPlaylist(updateElement, \"playlist\");\r\n        }\r\n        else if(index === 1){\r\n            const list = rows.filter(row => row.id === updateElement);\r\n            setEditMusicList(list[0]);\r\n            getSelectedPlaylistSongs(list[0]);\r\n            setOpenMusicList(prev => !prev);\r\n        }\r\n        else{\r\n            Error(\"Invalid Dialog Option Selected\");\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSongListClose = () => {\r\n        setExistingMusicList([]);\r\n        setOpenMusicList(false);\r\n    };\r\n\r\n    const handleSongListSave = async () => {\r\n        let abortController = new AbortController();\r\n        try{\r\n            setLoader(true);\r\n            const songId = existingMusicList.map(item => item.id);\r\n            const response = await axios.put(apiLinks.updatePlaylistSongs+editMusicList.id, \r\n                {\r\n                    data: songId,\r\n                },\r\n                {\r\n                    signal: abortController.signal,\r\n                }\r\n            );\r\n            if(response.data.code === 200){\r\n                abortController = null;\r\n                Success(response.data.message);\r\n                handleSongListClose();\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error Occured while saving playlist data\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n        abortController?.abort();\r\n    };\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n        mode: isDark ? \"dark\" : \"light\"\r\n        }\r\n    });\r\n\r\n    const handleToggle = (value) => {\r\n        const currentIndex = checked.findIndex(check => check.id === value.id);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } \r\n        else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const deletePlaylistSong = (item) => {\r\n        const index = existingMusicList.findIndex(music => music.id === item.id);\r\n        if(index === -1){\r\n            Error(\"Invalid Item\");\r\n        }\r\n        else{\r\n            const newList = [...existingMusicList];\r\n            newList.splice(index, 1);\r\n            setExistingMusicList(newList);\r\n        }\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [props.rows]);\r\n\r\n    const updateFavState = async (checked, id) => {\r\n        try{\r\n        const response = await axios.put(apiLinks.updateAdminPlaylistFav+id, {\r\n            state: !checked\r\n        }, {\r\n            headers: {\r\n            'content-type': \"application/json\"\r\n            }\r\n        });\r\n        if(response.data.code === 200){\r\n            const data = props.rows.filter(row => row.id === id);\r\n            data[0].show = !checked;\r\n            setRows(prev => prev.filter(row => {\r\n                if(row.id === id){\r\n                return data;\r\n                }\r\n                else{\r\n                return row;\r\n                }\r\n            }))\r\n            // Success(response.data.message);\r\n        }\r\n        else{\r\n            console.log(\"Error Occured\", response.data.message);\r\n            // Error(response.data.message);\r\n        }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            Error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n        \r\n        <SimpleDialog\r\n            open={open}\r\n            onClose={handleClose}\r\n        />\r\n\r\n        <Dialog\r\n            fullScreen\r\n            open={openMusicList}\r\n            onClose={handleSongListClose}\r\n            TransitionComponent={Transition}\r\n        >\r\n            <AppBar sx={{ position: 'relative' }}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={handleSongListClose}\r\n                        aria-label=\"close\"\r\n                    >\r\n                    <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                        Add / Remove Songs\r\n                    </Typography>\r\n                    <Button autoFocus color=\"inherit\" onClick={handleAddMusicOpen}>\r\n                        Add\r\n                    </Button>\r\n                    <Button autoFocus color=\"inherit\" onClick={handleSongListSave}>\r\n                        Save\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <List dense={false}>\r\n                {\r\n                    existingMusicList.length !== 0 ? \r\n                        existingMusicList.map(item => {\r\n                            return (\r\n                                <ListItem \r\n                                    key={item.id}\r\n                                    secondaryAction={\r\n                                        <IconButton edge=\"end\" aria-label=\"delete\" \r\n                                            onClick={() => deletePlaylistSong(item)}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                >\r\n                                    <ListItemAvatar>\r\n                                        <Avatar\r\n                                            alt={item.musicTitle}\r\n                                            src={apiLinks.getImage+item.musicImageKey}\r\n                                        />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={item.musicTitle}\r\n                                        secondary={item.albumTitle}\r\n                                    />\r\n                                </ListItem>\r\n                            )\r\n                        }) :\r\n                        <DialogContentText\r\n                            id=\"scroll-dialog-description\"\r\n                            ref={descriptionElementRef}\r\n                            tabIndex={-1}\r\n                        >\r\n                            <span style={{ textAlign: \"center\", display: \"block\", fontSize: \"1.5rem\" }}>\r\n                                'Songs are not available'\r\n                            </span>\r\n                        </DialogContentText>\r\n                }\r\n            </List>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n            open={openAddMusicList}\r\n            onClose={handleAddMusicClose}\r\n            scroll={'paper'}\r\n            aria-labelledby=\"scroll-dialog-title\"\r\n            aria-describedby=\"scroll-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"scroll-dialog-title\">Add Songs to \"{editMusicList['playlist_name']}\"</DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                    {\r\n                        addMusicList.length !== 0 ? \r\n                        <List dense sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                            {addMusicList.map((value) => {\r\n                                const labelId = `checkbox-list-secondary-label-${value.id}`;\r\n                                return (\r\n                                    <ListItem\r\n                                        key={value.id}\r\n                                        secondaryAction={\r\n                                            <Checkbox\r\n                                                edge=\"end\"\r\n                                                onChange={() => handleToggle(value)}\r\n                                                checked={checked.findIndex(music => music.id === value.id) !== -1}\r\n                                                inputProps={{ 'aria-labelledby': labelId }}\r\n                                            />\r\n                                        }\r\n                                        disablePadding\r\n                                    >\r\n                                        <ListItemButton>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar\r\n                                                alt={value.musicTitle}\r\n                                                src={apiLinks.getImage+value.musicImageKey}\r\n                                            />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText id={labelId} primary={value.musicTitle} secondary={value.albumTitle} />\r\n                                        </ListItemButton>\r\n                                    </ListItem>\r\n                                );\r\n                            })}\r\n                        </List> :\r\n                        <DialogContentText\r\n                            id=\"scroll-dialog-description\"\r\n                            ref={descriptionElementRef}\r\n                            tabIndex={-1}\r\n                        >\r\n                            <span style={{ textAlign: \"center\", display: \"block\" }}>\r\n                                'Songs are not available'\r\n                            </span>\r\n                        </DialogContentText>\r\n                    }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleAddMusicClose}>Cancel</Button>\r\n                <Button onClick={saveAddMusic}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        {\r\n            loader ?\r\n            <SpinnerGrow /> :\r\n            <React.Fragment />\r\n        }\r\n\r\n        <ThemeProvider theme={theme}>\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n            <TableContainer>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                <TableRow>\r\n\r\n                    {columns.map((column) => (\r\n                    <TableCell\r\n                        className=\"admin-table-content admin-table-heading\"\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                    > \r\n                        {column.label}\r\n                    </TableCell>\r\n                    ))}\r\n\r\n                    <TableCell\r\n                        className=\"admin-table-content admin-table-heading\"\r\n                        align='center'\r\n                        key=\"edit\"\r\n                        style={{ maxWidth: 60 }}\r\n                    >\r\n                        Edit\r\n                    </TableCell>\r\n\r\n                    <TableCell\r\n                        className=\"admin-table-content admin-table-heading\"\r\n                        align=\"center\"\r\n                        key=\"delete\"\r\n                        style={{ maxWidth: 100 }}\r\n                    >\r\n                        Delete\r\n                    </TableCell>\r\n\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {rows\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row, index) => {\r\n                    return (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                        {columns.map((column, idx) => {\r\n                            let value;\r\n                            if(column.id !== 'srno')\r\n                                value = row[column.id];\r\n                            return (\r\n                            <TableCell\r\n                                className=\"admin-table-content\" key={idx} align={column.align}>\r\n                                {typeof value === 'object' ? \r\n                                value.map((item) => {\r\n                                    return (\r\n                                    <div className=\"admin-table-array-setup\">\r\n                                        <ArrowRightIcon />\r\n                                        {item}\r\n                                    </div>\r\n                                    );\r\n                                })\r\n                                : column.id === 'show' ? \r\n                                <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                                : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                            </TableCell>\r\n                            );\r\n                        })}\r\n                        <TableCell\r\n                            className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                            <Edit className=\"table-edit-delete-button\" onClick={() => handleClickOpen(row.id)} />\r\n                        </TableCell>\r\n                        <TableCell\r\n                            className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                            <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                        </TableCell>\r\n                        </TableRow>\r\n                    );\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n            className=\"custom-table-pagination\"\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n        </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlaylistTable;\r\n","import React from 'react';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\nexport const DeleteWarning = (props) => {\r\n\r\n    return (\r\n        <Modal \r\n            centered={true}\r\n            scrollable={false}\r\n            backdrop\r\n            isOpen={true}\r\n            toggle={() => props.toggle()}\r\n        >   \r\n            <ModalHeader \r\n                toggle={() => props.toggle()}\r\n            >\r\n                Warning\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                Are you sure to delete \"{props.musicTitle}\" ?\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    outline\r\n                    onClick={() => props.deleteRow()}\r\n                    color=\"success\"\r\n                >\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                        Confirm <DoneIcon /> \r\n                    </div>\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport { apiLinks } from '../../connection.config';\r\n\r\nconst EditImageUpload = (props) => {\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"image-preview\">\r\n                <img \r\n                    className='image-preview-img' \r\n                    src={props.musicImgPath || (props.imageKey && (apiLinks.getImage + props.imageKey))} \r\n                    alt={props.artistImgName || props.musicImgName} \r\n                />\r\n            </div>\r\n            <div className='image-upload-button'>\r\n                <div className='music-upload-space'>\r\n                    <span className='music-image-title' style={{ flexDirection: \"row\" }}>\r\n                        \" {props.artistImgName !== \"\" ? props.artistImgName : props.imageKey} \" &nbsp;&nbsp;\r\n                        <input \r\n                            accept='image/*'\r\n                            type=\"file\" \r\n                            onChange={props.uploadMusicImage} \r\n                            ref={props.hiddenFileInput}\r\n                            style={{display: \"none\"}}\r\n                        />\r\n                        {\r\n                            props.musicImgName === \"\" ? \r\n                                <React.Fragment /> : \r\n                                <Button \r\n                                    onClick={props.handleClick}\r\n                                    color='dark'\r\n                                    outline={true}\r\n                                    style={{\r\n                                        padding: \"2px 6px\",\r\n                                        display: \"flex\",\r\n                                    }}\r\n                                >\r\n                                    <EditIcon title=\"Edit Image\" />\r\n                                </Button>\r\n                        }\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditImageUpload;","import axios from 'axios';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport PlayCircleIcon from '@mui/icons-material/PlayCircle';\r\nimport StopCircleIcon from '@mui/icons-material/StopCircle';\r\nimport PauseCircleIcon from '@mui/icons-material/PauseCircle';\r\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\r\n\r\nimport TextInput from './textInput';\r\nimport CheckBoxInput from './checkBoxInput';\r\nimport EditImageUpload from './editImageUpload';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from \"../Notification/Notification\";\r\nimport { SpinnerRotate } from \"../spinner/spinner-grow\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n    style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n    },\r\n    },\r\n};\r\n\r\nconst EditExistingMusic = (props) => {\r\n    \r\n    const audioRef = useRef();\r\n\r\n    const [load, setLoad] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [currentPaused, setCurrentPaused] = useState(false);\r\n\r\n    const [musicKey, setMusicKey] = useState(\"\");\r\n    const [musicImgKey, setMusicImgKey] = useState(\"\");\r\n\r\n    const {genre, category, artist, musicTitle, albumTitle, editMusicWidget, editId, hiddenMusicInput,\r\n            handleChange,  setMusicTitle, setLoader, updateRow, fav, setFav, uploadMusic, musicName, \r\n            setAlbumTitle, handleGenreChange, handleCategoryChange, handleMusicClick, musicPath, \r\n            updateEditMusicWidget, hiddenFileInput, musicDuration } = props;\r\n\r\n    const [genreList, setGenreList] = useState([]);\r\n    const [artistList, setArtistList] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    \r\n    const [artistImg, setArtistImg] = useState({});\r\n    const [artistImgPath, setArtistPath] = useState('');\r\n    const [artistImgName, setArtistImgName] = useState('');\r\n  \r\n    const closeWidget = () => {\r\n        updateEditMusicWidget();\r\n    };\r\n\r\n    const handleClick = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n\r\n    const uploadArtistImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setArtistImg(event.target.files);\r\n            setArtistImgName(event.target.files[0].name);\r\n            setArtistPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n\r\n    const stopSong = () => {\r\n        \r\n        audioRef.current.pause();\r\n        audioRef.current.currentTime = 0;\r\n        \r\n        setPlaying(prev => !prev);\r\n        if(currentPaused)\r\n            setCurrentPaused(prev => !prev);\r\n    };\r\n\r\n    const pauseSong = () => {\r\n        if(currentPaused)\r\n            audioRef.current.play();\r\n        else\r\n            audioRef.current.pause();\r\n        setCurrentPaused(prev => !prev);\r\n    };\r\n\r\n    const updateSongState = async () => {\r\n        if(musicPath.length){\r\n            audioRef.current.src = URL.createObjectURL(musicPath[0]);\r\n        }\r\n        setPlaying(prev => !prev);\r\n        if(playing === false){\r\n            try{\r\n                setLoad(true);\r\n                audioRef.current.play();\r\n                audioRef.current.onended = () => {\r\n                    setCurrentPaused(prev => !prev);\r\n                    setPlaying(prev => !prev);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured while fetching audio\", err);\r\n                Error(err.message);\r\n            }\r\n            finally{\r\n\r\n                if(audioRef.current){\r\n                    audioRef.current.oncanplaythrough  = () => {\r\n                        setLoad(false);\r\n                    }\r\n\r\n                    if(!(audioRef.current.paused) && audioRef.current.readyState > 0)\r\n                        setLoad(false);\r\n                }\r\n\r\n            }\r\n        }\r\n        else{\r\n            audioRef.current.pause();\r\n        }\r\n    };\r\n\r\n    const saveEditFile = async () => {\r\n\r\n        try{\r\n            setLoader(true);\r\n            \r\n            const today = new Date().toISOString();\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"show\", fav);\r\n            formData.append(\"date\", today);\r\n            formData.append(\"musicTitle\", musicTitle);\r\n            formData.append(\"albumTitle\", albumTitle);\r\n            formData.append(\"songImage\", artistImg[0]);\r\n            formData.append(\"musicFile\", musicPath[0]);\r\n            formData.append(\"duration\", musicDuration);\r\n            formData.append(\"genre\", JSON.stringify(genre));\r\n            formData.append(\"artist\", JSON.stringify(artist));\r\n            formData.append(\"category\", JSON.stringify(category));\r\n\r\n            const response = await axios.put(apiLinks.updateAdminData+editId, formData, {\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                }\r\n            });\r\n            \r\n            if(response.data.code === 200){\r\n                updateRow(response.data.data);\r\n                Success(response.data.message);\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error Occured while updating data\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n            closeWidget();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let imgFileController = new AbortController();\r\n        let audioFileController = new AbortController();\r\n\r\n        const getImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getImageKey+editId, {\r\n                    signal: imgFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.musicImageKey);\r\n                    imgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        getImageFileKey();\r\n\r\n        const getAudioFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAudioKey+editId, {\r\n                    signal: audioFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicKey(response.data.message.musicKey);\r\n                    audioFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        getAudioFileKey();\r\n\r\n        return () => {\r\n            imgFileController?.abort();\r\n            audioFileController?.abort();\r\n        }\r\n\r\n    }, [editId]);\r\n\r\n    useEffect(() => {\r\n\r\n        let genreController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let categoryController = new AbortController();\r\n\r\n        const getGenreList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.type);\r\n                    setGenreList(data);\r\n                    genreController =  null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setGenreList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setGenreList([]);\r\n            }\r\n        };\r\n        \r\n        const getArtistList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.name);\r\n                    setArtistList(data);\r\n                    artistController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setArtistList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setArtistList([]);\r\n            }\r\n        };\r\n\r\n        const getCategoryList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.type);\r\n                    setCategoryList(data);\r\n                    categoryController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setCategoryList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setCategoryList([]);\r\n            }\r\n        };\r\n\r\n        getGenreList();\r\n        getArtistList();\r\n        getCategoryList();\r\n\r\n        return () => {\r\n            genreController?.abort();\r\n            artistController?.abort();\r\n            categoryController?.abort();\r\n        };\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Modal\r\n                isOpen={editMusicWidget}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='xl'\r\n                toggle={closeWidget}\r\n            >\r\n                <ModalHeader toggle={closeWidget}>\r\n                    <span className='modal-header-title'>\r\n                        Edit Existing Song\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <div className='music-details'>\r\n                                \r\n                                <TextInput \r\n                                    required\r\n                                    id=\"song-name\"\r\n                                    labelName=\"Song Name\"\r\n                                    label=\"Enter Song Name\"\r\n                                    value={musicTitle}\r\n                                    onChange={setMusicTitle}\r\n                                    // check={true}\r\n                                    checkedValue={fav}\r\n                                    onCheckBoxChange={setFav}\r\n                                />\r\n                                <TextInput \r\n                                    id=\"album-name\"\r\n                                    labelName=\"Album Name\"\r\n                                    label=\"Enter Album Name\"\r\n                                    value={albumTitle}\r\n                                    onChange={setAlbumTitle}\r\n                                />\r\n\r\n                                <CheckBoxInput \r\n                                    id=\"artist-name\" labelName=\"Artist Name\"\r\n                                    label=\"Select Artist\" type={artist}\r\n                                    handleChange={handleChange} MenuProps={MenuProps}\r\n                                    names={artistList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"genre-name\" labelName=\"Genre Name\"\r\n                                    label=\"Select Genre\" type={genre}\r\n                                    handleChange={handleGenreChange} MenuProps={MenuProps}\r\n                                    names={genreList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"category-name\" labelName=\"Category Name\"\r\n                                    label=\"Select Category\" type={category}\r\n                                    handleChange={handleCategoryChange} MenuProps={MenuProps}\r\n                                    names={categoryList}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n\r\n                            <Row>\r\n                                <div className='music-upload-button'>\r\n                                    <div className='music-upload-detail'>\r\n                                        <span className='music-image-title' style={{textAlign: \"center\", flexDirection: \"row\"}}>\r\n                                            <LibraryMusicIcon /> &ensp; \" {musicName || musicTitle+\".mp3\"} \"\r\n                                            <span \r\n                                                className='pl-3 existing-music-play-container' \r\n                                            >\r\n                                                {\r\n                                                    playing ?\r\n                                                        (\r\n                                                            load ? \r\n                                                                <SpinnerRotate \r\n                                                                    size=\"sm\"\r\n                                                                    color=\"dark\"\r\n                                                                /> : \r\n                                                                <>\r\n                                                                    {\r\n                                                                        currentPaused ? \r\n                                                                        <PlayCircleIcon title=\"Resume Playing\" onClick={pauseSong} /> :\r\n                                                                        <PauseCircleIcon title=\"Pause Playing\" onClick={pauseSong} />\r\n                                                                    }\r\n                                                                    <StopCircleIcon title=\"Stop Playing\" onClick={stopSong} />\r\n                                                                </> \r\n                                                        )\r\n                                                        :\r\n                                                        <PlayCircleIcon title=\"Play this Song\" onClick={updateSongState} />\r\n                                                }\r\n                                            </span>\r\n                                            <div className='music-upload-button'>\r\n                                                <div className='music-upload-detail d-flex justify-content-center align-items-center'>\r\n                                                    <div className='music-upload-detail'>\r\n                                                        <input \r\n                                                            type=\"file\" \r\n                                                            accept='audio/*'\r\n                                                            onChange={uploadMusic} \r\n                                                            ref={hiddenMusicInput}\r\n                                                            style={{display: \"none\"}}\r\n                                                        />\r\n                                                        <Button \r\n                                                            onClick={handleMusicClick}\r\n                                                            color='dark'\r\n                                                            outline={true}\r\n                                                            style={{\r\n                                                                padding: \"2px 6px\",\r\n                                                                display: \"flex\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <EditIcon title=\"Edit Image\" />\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className='audio-duration'>\r\n                                        <audio ref={audioRef} \r\n                                            src={(musicKey && (apiLinks.getAudio + musicKey))}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </Row>\r\n\r\n                            <EditImageUpload \r\n                                imageKey = {musicImgKey}\r\n                                handleClick={handleClick}\r\n                                musicImgPath={artistImgPath}\r\n                                artistImgName={artistImgName}\r\n                                musicImgName={`${musicTitle}`}\r\n                                hiddenFileInput={hiddenFileInput}\r\n                                uploadMusicImage={uploadArtistImage}\r\n                            />\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={saveEditFile}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditExistingMusic;\r\n","import React, {useEffect, useState, useRef} from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport EditImageUpload from './editImageUpload';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from '../Notification/Notification';\r\n\r\nconst EditExistingModal = (props) => {\r\n\r\n    const hiddenFileInput = useRef(null);\r\n\r\n    const { editId, fav, setFav } = props;\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [name, setName] = useState(props.value || '');\r\n    const [musicImgKey, setMusicImgKey] = useState(\"\");\r\n    \r\n    const [artistImg, setArtistImg] = useState({});\r\n    const [artistImgPath, setArtistPath] = useState('');\r\n    const [artistImgName, setArtistImgName] = useState('');\r\n  \r\n    const handleClick = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n\r\n    const setData = () => {\r\n\r\n        const data = {\r\n            id: props.editId,\r\n            type: name,\r\n            name: name,\r\n            show: fav,\r\n            'playlist_name': name,\r\n        };\r\n\r\n        const editedRow = props.rows.filter(item => item.id !== props.editId);\r\n        props.setRows([data, ...editedRow]);\r\n\r\n    };\r\n\r\n    const addDetail = async () => {\r\n        try{\r\n            setLoader(true);\r\n            const names = name;\r\n            \r\n            const formData = {\r\n                'type': names,\r\n                'name': names,\r\n                'show': fav,\r\n                'old': props.value,\r\n            };\r\n\r\n            let response = {};\r\n\r\n            if(props.id === '1'){\r\n                const formData = new FormData();\r\n                formData.append(\"show\", fav);\r\n                formData.append(\"name\", name);\r\n                formData.append(\"old\", props.value);\r\n                formData.append(\"musicImgKey\", musicImgKey);\r\n                formData.append(\"artistImg\", artistImg[0]);\r\n\r\n                response = await axios.put(apiLinks.updateAdminArtist+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"multipart/form-data\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === '2'){\r\n                response = await axios.put(apiLinks.updateAdminGenre+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === '3'){\r\n                response = await axios.put(apiLinks.updateAdminCategory+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                response = await axios.put(apiLinks.updateAdminPlaylist+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n\r\n            if(Object.keys(response).length === 0 && response.constructor === Object){\r\n                const error = new Error();\r\n                error.message = \"Something went wrong, could add data now\";\r\n                throw error;\r\n            }\r\n            else{\r\n                if(response.data.code === 200){\r\n                    Success(response.data.message);\r\n                    setData();   \r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n                props.toggle(false);\r\n            }\r\n        \r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const uploadArtistImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setArtistImg(event.target.files);\r\n            setArtistImgName(event.target.files[0].name);\r\n            setArtistPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n\r\n    const removeDetail = () => {\r\n        props.toggle(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let artistImgFileController = new AbortController();\r\n        let playlistImgFileController = new AbortController();\r\n\r\n        const getArtistImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getArtistImgKey+editId, {\r\n                    signal: artistImgFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.artistImgKey);\r\n                    artistImgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n        \r\n        const getPlaylistImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getPlaylistImgKey+editId, {\r\n                    signal: playlistImgFileController.signal,\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.image);\r\n                    playlistImgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        if(props.id === \"1\"){\r\n            getArtistImageFileKey();\r\n        }\r\n\r\n        if(props.id === \"4\"){\r\n            getPlaylistImageFileKey();\r\n        }\r\n        \r\n        return () => {\r\n            artistImgFileController?.abort();\r\n            playlistImgFileController?.abort();\r\n        }\r\n\r\n    }, [editId, props.id]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            \r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n\r\n            <Modal\r\n                isOpen={true}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='lg'\r\n                toggle={() => props.toggle(false)}\r\n            >\r\n                <ModalHeader toggle={() => props.toggle(false)}>\r\n                    <span className='modal-header-title'>\r\n                        {props.header}\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {props.id === '1' || props.id === '4' ? \r\n                        <EditImageUpload \r\n                            imageKey = {musicImgKey}\r\n                            musicImgName={`${name}`}\r\n                            handleClick={handleClick}\r\n                            musicImgPath={artistImgPath}\r\n                            artistImgName={artistImgName}\r\n                            hiddenFileInput={hiddenFileInput}\r\n                            uploadMusicImage={uploadArtistImage}\r\n                        /> : \r\n                        <React.Fragment />\r\n                    }\r\n                    <TextInput \r\n                        id={props.id}\r\n                        required\r\n                        labelName={props.id === '4' ? \"Edit Playlist Name\" : '1' ? \"Edit Name\" : \"Edit Type\"}\r\n                        label={props.id === '4' ? \"Enter Playlist Name\" : '1' ? \"Enter Artist Name\" : \"Enter Type\"}\r\n                        value={name}\r\n                        onChange={setName}\r\n                        // check={true}\r\n                        checkedValue={fav}\r\n                        onCheckBoxChange={setFav}\r\n                    />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={addDetail}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeDetail}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditExistingModal;\r\n","import axios from 'axios';\r\nimport Menu from '@mui/material/Menu';\r\nimport Badge from '@mui/material/Badge';\r\nimport Switch from '@mui/material/Switch';\r\nimport { createTheme } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\n// import { Navbar, NavItem, Nav, NavbarToggler, NavbarBrand, NavLink,\r\n//         Offcanvas, OffcanvasHeader, OffcanvasBody, Container } from \"reactstrap\";\r\nimport { Navbar, NavbarBrand, Container } from 'reactstrap';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faHome, faMusic, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Subscribe } from \"../../../client\";\r\nimport { IsDark, SetIsDark, Search } from \"../../../App\";\r\nimport { apiLinks } from \"../../../connection.config.js\";\r\n\r\nimport \"./admin-navigation.css\";\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n    width: 62,\r\n    height: 34,\r\n    padding: 7,\r\n    '& .MuiSwitch-switchBase': {\r\n      margin: 1,\r\n      padding: 0,\r\n      transform: 'translateX(6px)',\r\n      '&.Mui-checked': {\r\n        color: '#fff',\r\n        transform: 'translateX(22px)',\r\n        '& .MuiSwitch-thumb:before': {\r\n          backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n            '#fff',\r\n          )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n        },\r\n        '& + .MuiSwitch-track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n        },\r\n      },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#ffc107',\r\n      width: 32,\r\n      height: 32,\r\n      '&:before': {\r\n        content: \"''\",\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        left: 0,\r\n        top: 0,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          '#111',\r\n        )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n      },\r\n    },\r\n    '& .MuiSwitch-track': {\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n      borderRadius: 20 / 2,\r\n    },\r\n}));\r\n\r\nconst AdminNavigation = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    const isDark = useContext(IsDark);\r\n    const setSearch = useContext(Search);\r\n    const setIsDark = useContext(SetIsDark);\r\n\r\n    // const [isOpen, setIsOpen] = useState(false);\r\n    const [notificationData, setNotificationData] = useState([]);\r\n\r\n    // const updateNavClick = () => {\r\n    //     setIsOpen(prev => !prev);\r\n    // };\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: isDark ? \"dark\" : \"light\"\r\n        }\r\n    });\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const getNotificationData = async () => {\r\n        if(window?.localStorage?.getItem(\"endpoint\")){\r\n            const endpoint = window.localStorage.getItem(\"endpoint\");\r\n            const response = await axios.get(apiLinks.getBroadcastNotifications, {\r\n                params: {\r\n                    endpoint: endpoint\r\n                }\r\n            });\r\n            if(response.data.code === 200){\r\n                setNotificationData(response.data.message);\r\n            }\r\n            else{\r\n                setNotificationData([]);\r\n            }\r\n        }\r\n        else{\r\n            Notification.requestPermission().then(permission => {\r\n                if(permission === \"granted\"){\r\n                    Subscribe();\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleClick = async (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        await getNotificationData();\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const moveNavigate = (notification) => {\r\n        const url = notification.url.split('https://sangeet.tech/');\r\n        navigate(\"../\"+url[1]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNotificationData();\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"admin-Navigation-container\">\r\n                <Navbar\r\n                    color={isDark ? \"dark\" : \"light\"}\r\n                    dark={isDark}\r\n                    light={!isDark}\r\n                    expand=\"true\"\r\n                    sticky=\"true\"\r\n                    className=\"one-row\"\r\n                >\r\n                    <NavbarBrand onClick={() => navigate('/')} className=\"me-auto\">\r\n                        <div className=\"navbarHead\">\r\n                            SANGEET\r\n                        </div>\r\n                    </NavbarBrand>\r\n\r\n                    <Tooltip title=\"Search\">\r\n                        <IconButton\r\n                            onClick={() => setSearch(prev => !prev)}\r\n                        >\r\n                            <SearchIcon \r\n                                sx={{ fontSize: 30, color: isDark ? \"rgb(0, 255, 0)\" : \"rgb(0, 0, 0)\" }} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n\r\n                    <Tooltip title=\"Notifications\">\r\n                        <IconButton\r\n                            sx={{\r\n                                marginRight: \"15px\"\r\n                            }}\r\n                            onClick={handleClick}\r\n                            size=\"small\"\r\n                            aria-controls={open ? 'account-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                        >\r\n                            <Badge badgeContent={notificationData.length || '0'} className=\"notification-count\" >\r\n                                <NotificationsIcon sx={{ fontSize: 30, color: isDark ? \"rgb(0, 255, 0)\" : \"rgb(0, 0, 0)\" }} />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title=\"Toggle Theme\">\r\n                        <MaterialUISwitch theme={theme} checked={isDark} onClick={setIsDark} />\r\n                    </Tooltip>\r\n\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        id=\"account-menu\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        onClick={handleClose}\r\n                        PaperProps={{\r\n                            elevation: 0,\r\n                            className: `notification-message-container ${isDark ? \"dark\" : \"light\"}`,\r\n                            sx: {\r\n                                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                                mt: 1.5,\r\n                                '& .MuiAvatar-root': {\r\n                                    width: 32,\r\n                                    height: 32,\r\n                                    ml: -0.5,\r\n                                    mr: 1,\r\n                                },\r\n                                '&:before': {\r\n                                    content: '\"\"',\r\n                                    display: 'block',\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    right: 0,\r\n                                    width: 10,\r\n                                    height: 10,\r\n                                    bgcolor: `${isDark ? \"#0A0F18\" : \"#eee\"}`,\r\n                                    transform: 'translateY(-50%) rotate(45deg)',\r\n                                    zIndex: 0,\r\n                                },\r\n                            },\r\n                        }}\r\n                        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                    >\r\n                        {\r\n                            notificationData.length > 0 ?\r\n                                notificationData.map(notification => \r\n                                    <MenuItem key={notification.id} onClick={() => moveNavigate(notification)}>\r\n                                        <div>\r\n                                            <div className=\"notification-row mb-2\">\r\n                                                <div className=\"notification-image-container\">\r\n                                                    <img className=\"notification-image\"\r\n                                                        src={apiLinks.getImage + notification.image} alt={notification.title} />\r\n                                                </div>\r\n                                                <div className=\"notification-text-container\">\r\n                                                    <div className=\"notification-title\">\r\n                                                        {notification.title}\r\n                                                    </div>\r\n                                                    <div className=\"notification-body\">\r\n                                                        {notification.body}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Divider />\r\n                                        </div>\r\n                                    </MenuItem>\r\n                                ) : \r\n                                <div className=\"no-notifications-container\">\r\n                                    <h5 className=\"no-notifications\">\r\n                                        No Notifications Available\r\n                                    </h5>\r\n                                </div>\r\n                        }\r\n                    </Menu>\r\n\r\n                    {/* <NavbarToggler className=\"me-2\" onClick={updateNavClick} />\r\n                    \r\n                    <Offcanvas isOpen={isOpen} className=\"offcanvas-tag\" scrollable={false}\r\n                        toggle={updateNavClick} direction=\"end\">\r\n                        <OffcanvasHeader toggle={updateNavClick} className=\"custom-close-icon-canvas-header\"/>\r\n                        <OffcanvasBody className=\"navbar-menu-links\">\r\n                            <Nav className=\"ms-auto\" navbar>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate('/')}>\r\n                                        <FontAwesomeIcon icon={faHome} /> \r\n                                            <span className=\"extra-spacing\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faMusic} /> \r\n                                            <span className=\"extra-spacing\" /> Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faBell} /> \r\n                                            <span className=\"extra-spacing\" /> Notifications\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate('/admin')}>\r\n                                        <FontAwesomeIcon icon={faSignInAlt} /> \r\n                                            <span className=\"extra-spacing\" /> Login / SignUp \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </OffcanvasBody>\r\n                    </Offcanvas> */}\r\n                </Navbar>\r\n            </div>\r\n            <Container className=\"pt-5 pb-5\"/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminNavigation;","import axios from 'axios';\r\nimport React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport {Container, Nav, NavItem, NavLink, TabContent, TabPane, Row, Col} from 'reactstrap';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { Backdrop } from '@mui/material';\r\nimport SpeedDial from '@mui/material/SpeedDial';\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport DomainIcon from '@mui/icons-material/Domain';\r\nimport PlaylistAddIcon from '@mui/icons-material/PlaylistAdd';\r\nimport CellTowerIcon from '@mui/icons-material/CellTower';\r\n\r\nimport AddNewModal from '../components/Admin/addNewModal';\r\nimport NewMusicAdd from '../components/Admin/newMusicAdd';\r\n\r\nimport GenreTable from '../components/Tables/Genre-table';\r\nimport BroadcastTable from '../components/Tables/broadcast';\r\nimport ArtistsTable from '../components/Tables/artists-table';\r\nimport StickyHeadTable from \"../components/Tables/music-table\";\r\nimport CategoryTable from '../components/Tables/category-table';\r\nimport PlaylistTable from '../components/Tables/playlist-table';\r\n\r\nimport { IsDark, PlayerContext } from \"../App\";\r\nimport { apiLinks } from '../connection.config';\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport { DeleteWarning } from '../components/Warning/Warning';\r\nimport EditExistingMusic from '../components/Admin/editExistingMusic';\r\nimport EditExistingModal from '../components/Admin/editExistingModal';\r\nimport { Success, Error } from '../components/Notification/Notification';\r\nimport AdminNavigation from '../components/navigation/Navigation-bar/admin-navigation';\r\n\r\n\r\nimport \"./admin.css\";\r\n\r\nlet genreRows = [], artistRows = [], categoryRows = [], \r\n    musicRows = [], broadcastRows = [], playlistRows = [];\r\n\r\nconst Admin = () => {\r\n    document.title = 'Admin';\r\n\r\n    const isDark = useContext(IsDark);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n    const hiddenFileInput = useRef(null);\r\n    const hiddenMusicInput = useRef(null);\r\n    const audioDurationRef = useRef(null);\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [tabId, setTabId] = useState(1);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    \r\n    const [rows, setRows] = useState([]);\r\n\r\n    const [editId, setEditId] = useState(0);\r\n    const [header, setHeader] = useState(\"\");\r\n    const [modalId, setModalId] = useState('0');\r\n    const [deleteId, setDeleteId] = useState(0);\r\n    const [warning, setWarning] = useState(false);\r\n    const [catGenValue, setCatGenValue] = useState('');\r\n    const [deleteItemName, setDeleteItemName] = useState('');\r\n\r\n    const [genre, setGenre] = useState([]);\r\n    const [artist, setArtist] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n\r\n    const [showBroadCast, setShowBroadCast] = useState(false);\r\n    const [addMusicWidget, setAddMusicWidget] = useState(false);\r\n    const [createPlaylist, setCreatePlaylist] = useState(false);\r\n    const [addGenreWidget, setAddGenreWidget] = useState(false);\r\n    const [editMusicWidget, setEditMusicWidget] = useState(false);\r\n    const [addArtistWidget, setAddArtistWidget] = useState(false);\r\n    const [addCategoryWidget, setAddCategoryWidget] = useState(false);\r\n    const [editExistingWidget, setEditExistingWidget] = useState(false);\r\n    \r\n    const [fav, setFav] = useState(false);\r\n    const [music, setMusic] = useState({});\r\n    const [musicName, setMusicName] = useState('');\r\n    const [musicPath, setMusicPath] = useState([]);\r\n    const [musicDuration, setMusicDuration] = useState(0);\r\n\r\n    const [musicTitle, setMusicTitle] = useState('');\r\n    const [albumTitle, setAlbumTitle] = useState('');\r\n    \r\n    const [musicImg, setMusicImg] = useState({});\r\n    const [musicImgName, setMusicImgName] = useState(\"\");\r\n    const [musicImgPath, setMusicImgPath] = useState('/assets/images/default-music-upload-image.png');\r\n\r\n    const updateTabId = (id) => {\r\n        setTabId(id);\r\n        window?.localStorage?.setItem(\"tabId\", id);\r\n    };\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    \r\n    const updateAddMusicWidget = () => {\r\n        removeMusicDetails();\r\n        setAddMusicWidget(prev => !prev);\r\n    };\r\n\r\n    const broadCast = () => setShowBroadCast(prev => !prev);\r\n    const updateCreatePlaylist = () => setCreatePlaylist(prev => !prev);\r\n    const updateAddGenreWidget = () => setAddGenreWidget(prev => !prev);\r\n    const updateAddArtistWidget = () => setAddArtistWidget(prev => !prev);\r\n    const updateAddCategoryWidget = () => setAddCategoryWidget(prev => !prev);\r\n    \r\n    const updateEditMusicWidget = () => {\r\n        setMusic({});\r\n        setMusicName('');\r\n        setEditMusicWidget(prev => !prev);\r\n    };\r\n\r\n    const defaultProps = {\r\n        options: rows,\r\n        getOptionLabel: (option) => (option.musicTitle && `${option.musicTitle} - ${option.albumTitle}`) || option.name || option.type || option.title || option.playlist_name,\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n        \r\n        if(window?.localStorage){\r\n            const id = window?.localStorage?.getItem(\"tabId\");\r\n            if(id && 0 < id < 7){\r\n                setTabId(parseInt(id));\r\n            }\r\n        }\r\n\r\n        let musicController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let genreController = new AbortController();\r\n        let categoryController = new AbortController();\r\n        let broadCastController = new AbortController();\r\n        let playlistController = new AbortController();\r\n        \r\n        const getMusicData = async () => {\r\n    \r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllAudio, {\r\n                    signal: musicController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  musicRows = response.data.message;\r\n                  musicController = null;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                // Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getArtistsData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  artistController = null;\r\n                  artistRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getGenreData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  genreController = null;\r\n                  genreRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getCategoryData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  categoryRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        const getBroadCastData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getBroadcast, {\r\n                    signal: broadCastController.signal,\r\n                });\r\n                if(response.data?.code === 200){\r\n                    setRows(response.data.message);\r\n                    broadcastRows = response.data.message;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                    setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        const getPlaylistData = async () => {\r\n            \r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllPlaylist, {\r\n                    signal: playlistController.signal,\r\n                });\r\n                if(response.data?.code === 200){\r\n                    setRows(response.data.message);\r\n                    playlistRows = response.data.message;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                    setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        if(tabId === 1) \r\n            getMusicData();\r\n        else if(tabId === 2) \r\n            getArtistsData();\r\n        else if(tabId === 3) \r\n            getGenreData();\r\n        else if(tabId === 4)\r\n            getCategoryData();\r\n        else if(tabId === 5)\r\n            getBroadCastData();\r\n        else\r\n            getPlaylistData();\r\n\r\n        return () => {\r\n            musicController?.abort();\r\n            artistController?.abort();\r\n            genreController?.abort();\r\n            categoryController?.abort();\r\n            setLoader(false);\r\n        }\r\n    \r\n    }, [tabId]);\r\n\r\n    const getSearchedAutoCompleteRow = (value) => {\r\n        if(value && value.id){\r\n            let searchedData = [];\r\n            if(tabId === 1){\r\n                searchedData = musicRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 2){\r\n                searchedData = artistRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 3){\r\n                searchedData = genreRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 4){\r\n                searchedData = categoryRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 5){\r\n                searchedData = broadcastRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 6){\r\n                searchedData = playlistRows.filter(row => row.id === value.id);\r\n            }\r\n            setRows(searchedData);\r\n        }\r\n        else{\r\n            if(tabId === 1){\r\n                setRows(musicRows);\r\n            }\r\n            else if(tabId === 2){\r\n                setRows(artistRows)\r\n            }\r\n            else if(tabId === 3){\r\n                setRows(genreRows);\r\n            }\r\n            else if(tabId === 4){\r\n                setRows(categoryRows);\r\n            }\r\n            else if(tabId === 5){\r\n                setRows(broadcastRows);\r\n            }\r\n            else if(tabId === 6){\r\n                setRows(playlistRows);\r\n            }\r\n        }\r\n    };\r\n\r\n    const getSearchedRow = (event) => {\r\n        if(event.target.value.length){\r\n            const data = event.target.value;\r\n            let searchedData = [];\r\n            if(tabId === 1){\r\n                searchedData = [...musicRows.filter(row => row.musicTitle.toLowerCase().includes(data.toLowerCase())), \r\n                                ...musicRows.filter(row => row.albumTitle.toLowerCase().includes(data.toLowerCase()))]\r\n                                .filter((item, index, self) => index === self.findIndex((entry) => entry.id === item.id));\r\n            }\r\n            else if(tabId === 2){\r\n                searchedData = artistRows.filter(row => row.name.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 3){\r\n                searchedData = genreRows.filter(row => row.type.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 4){\r\n                searchedData = categoryRows.filter(row => row.type.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 5){\r\n                searchedData = broadcastRows.filter(row => row.title.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 6){\r\n                searchedData = playlistRows.filter(row => row['playlist_name'].toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            setRows(searchedData);\r\n        }\r\n        else{\r\n            if(tabId === 1){\r\n                setRows(musicRows);\r\n            }\r\n            else if(tabId === 2){\r\n                setRows(artistRows)\r\n            }\r\n            else if(tabId === 3){\r\n                setRows(genreRows);\r\n            }\r\n            else if(tabId === 4){\r\n                setRows(categoryRows);\r\n            }\r\n            else if(tabId === 5){\r\n                setRows(broadcastRows);\r\n            }\r\n            else if(tabId === 6){\r\n                setRows(playlistRows);\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateRow = (data) => {\r\n        const rowData = rows.map(row => {\r\n            if(row.id === data.id){\r\n                return data;\r\n            }\r\n            else{\r\n                return row;\r\n            }\r\n        });\r\n\r\n        setRows(rowData);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        \r\n        setArtist(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleGenreChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setGenre(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleCategoryChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setCategory(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n    \r\n    const handleClick = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n\r\n    const handleMusicClick = () => {\r\n        hiddenMusicInput.current.click();\r\n    };\r\n    \r\n    const uploadMusicImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setMusicImg(event.target.files);\r\n            setMusicImgName(event.target.files[0].name);\r\n            setMusicImgPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n    \r\n    const uploadMusic = (event) => {\r\n        if(event.target.files[0]){\r\n            window.URL = window.URL || window.webkitURL;\r\n            audioDurationRef.current = document.createElement(\"audio\");\r\n            audioDurationRef.current.preload = 'metadata';\r\n\r\n            audioDurationRef.current.onloadedmetadata = () => {\r\n                window.URL.revokeObjectURL(audioDurationRef.current.src);\r\n                const duration = Math.floor(audioDurationRef.current.duration);\r\n                setMusicDuration(duration);\r\n            };\r\n\r\n            audioDurationRef.current.src = URL.createObjectURL(event.target.files[0]);\r\n\r\n            setMusic(event.target.files);\r\n            setMusicPath(event.target.files);\r\n            setMusicName(event.target.files[0].name);\r\n        }\r\n    };\r\n    \r\n    const removeSelectedSong = () => {\r\n        setMusic({});\r\n        setMusicName(\"\");\r\n        setMusicDuration(0);\r\n        audioDurationRef.current = null;\r\n        audioDurationRef?.current?.remove();\r\n    };\r\n    \r\n    const removeSelectedImage = () => {\r\n        setMusicImg({});\r\n        setMusicImgName('');\r\n        setMusicImgPath('/assets/images/default-music-upload-image.png');\r\n    };\r\n    \r\n    const removeMusicDetails = () => {\r\n        setFav(false);\r\n\r\n        setGenre([]);\r\n        setArtist([]);\r\n        setCategory([]);\r\n\r\n        removeSelectedSong();\r\n        \r\n        setMusicTitle(\"\");\r\n        setAlbumTitle(\"\");\r\n\r\n        removeSelectedImage();\r\n    };\r\n\r\n    const saveUploadMusic = async () => {\r\n        setLoader(true);\r\n        const today = new Date().toISOString();\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"show\", fav);\r\n        formData.append(\"date\", today);\r\n        formData.append(\"genre\", genre);\r\n        formData.append(\"artist\", artist);\r\n        formData.append(\"category\", category);\r\n        formData.append('musicFile', music[0]);\r\n        formData.append('musicTitle', musicTitle);\r\n        formData.append('albumTitle', albumTitle);\r\n        formData.append(\"duration\", musicDuration);\r\n        formData.append('musicImageFile', musicImg[0]);\r\n\r\n        try{\r\n            const response = await axios.post(apiLinks.postSong, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            if(response.data.code === 200){\r\n                if(tabId === 1){\r\n                    musicRows.push(...(response.data.rowData));\r\n                    // setRows(prevData => [...prevData, ...(response.data.rowData)]);\r\n                }\r\n                else{\r\n                    updateTabId(1);\r\n                }\r\n                \r\n                removeMusicDetails();\r\n                setAddMusicWidget(false);\r\n                Success(\"Uploaded Successfully\");\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error Occured - \", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const editRow = (id) => {\r\n        const editableRow = rows.filter(entry => entry.id === id);\r\n        // console.log(editableRow);\r\n\r\n        setFav(editableRow[0].show);\r\n        setEditId(id);\r\n        setGenre(editableRow[0].genre);\r\n        setArtist(editableRow[0].artists);\r\n        setCategory(editableRow[0].category);\r\n        setMusicTitle(editableRow[0].musicTitle);\r\n        setAlbumTitle(editableRow[0].albumTitle);\r\n        setEditMusicWidget(true);\r\n    };\r\n\r\n    const editArtistGenreCategoryPlaylist = (id, domain=\"\") => {\r\n\r\n        const editTableRow = rows.filter(entry => entry.id === id);\r\n\r\n        if(editTableRow.length){\r\n            setFav(editTableRow[0].show);\r\n            setEditId(id);\r\n            setEditExistingWidget(prev => !prev);\r\n            setCatGenValue(editTableRow[0].name || editTableRow[0].type || editTableRow[0].playlist_name);\r\n\r\n            if(domain === \"artist\"){\r\n                setHeader('Edit Artist');\r\n                setModalId('1');\r\n            }\r\n            else if(domain === 'genre'){\r\n                setHeader(\"Edit Genre\");\r\n                setModalId('2');\r\n            }\r\n            else if(domain === 'category'){\r\n                setHeader(\"Edit Category\");\r\n                setModalId('3');\r\n            }\r\n            else if(domain === 'playlist'){\r\n                setHeader(\"Edit Playlist\");\r\n                setModalId('4');\r\n            }\r\n            else{\r\n                Error(\"Domain Not Valid for Edit\");\r\n            }\r\n        }\r\n        else{\r\n            Error(\"No such row id found\");\r\n        }\r\n    };\r\n\r\n    const toggleWarning = (id = 0) => {\r\n        const name = rows.filter(row => row.id === id);\r\n\r\n        if(id && tabId === 1){\r\n            setDeleteItemName(name[0].musicTitle);\r\n        }\r\n        else if(id && tabId === 2){\r\n            setDeleteItemName(name[0].name);\r\n        }\r\n        else if(id && tabId === 3){\r\n            setDeleteItemName(name[0].type);\r\n        }\r\n        \r\n        else if(id && tabId === 4){\r\n            setDeleteItemName(name[0].type);\r\n        }\r\n        else if(id && tabId === 5){\r\n            setDeleteItemName(name[0].title);\r\n        }\r\n        else if(id && tabId === 6){\r\n            setDeleteItemName(name[0]['playlist_name'])\r\n        }\r\n\r\n        setDeleteId(id);\r\n        setWarning(prev => !prev);\r\n    };\r\n\r\n    const deleteRow = async () => {\r\n        const id = deleteId;\r\n\r\n        try{\r\n            setLoader(true);\r\n            let response = {};\r\n            if(tabId === 1){\r\n                response = await axios.delete(apiLinks.deleteMusic+id);\r\n            }\r\n            else if(tabId === 2){\r\n                response = await axios.delete(apiLinks.deleteArtist+id);\r\n            }\r\n            else if(tabId === 3){\r\n                response = await axios.delete(apiLinks.deleteGenre+id);\r\n            }\r\n            else if(tabId === 4){\r\n                response = await axios.delete(apiLinks.deleteCategory+id);\r\n            }\r\n            else if(tabId === 5){\r\n                response = await axios.delete(apiLinks.deleteBroadcast+id);\r\n            }\r\n            else if(tabId === 6){\r\n                response = await axios.delete(apiLinks.deletePlaylist+id);\r\n            }\r\n\r\n            if(response?.data?.code === 200){\r\n                // if(tabId === 1){\r\n                //     musicRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                // else if(tabId === 2){\r\n                //     artistRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                // else if(tabId === 3){\r\n                //     genreRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                // else if(tabId === 4){\r\n                //     categoryRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                // else if(tabId === 5){\r\n                //     broadcastRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                setRows(prev => prev.filter(row => row.id !== id));\r\n                Success(response.data.message);\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error occured while deleting\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n            toggleWarning();\r\n        }\r\n    };\r\n    \r\n    const actions = [\r\n        { icon: <CellTowerIcon />, name: \"BroadCast\", click: broadCast }, \r\n        { icon: <DomainIcon />, name: 'Add Genre', click: updateAddGenreWidget },\r\n        { icon: <MusicNoteIcon />, name: 'Add Song', click: updateAddMusicWidget },\r\n        { icon: <PersonAddIcon />, name: 'Add Artist', click: updateAddArtistWidget },\r\n        { icon: <CategoryIcon />, name: 'Add Category', click: updateAddCategoryWidget },\r\n        { icon: <PlaylistAddIcon />, name: \"Create Playlist\", click: updateCreatePlaylist },\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='admin-page'>\r\n                {loader ? \r\n                    <SpinnerGrow color=\"success\" />: \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    warning ?\r\n                    <DeleteWarning \r\n                        musicTitle={deleteItemName}\r\n                        toggle={toggleWarning}\r\n                        deleteRow={deleteRow}\r\n                    />: \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    editMusicWidget ? \r\n                    <EditExistingMusic\r\n                        fav={fav}\r\n                        genre={genre}\r\n                        artist={artist}\r\n                        editId={editId}\r\n                        loader={loader}\r\n                        category={category}\r\n                        musicName={musicName}\r\n                        musicPath={musicPath}\r\n                        musicTitle={musicTitle}\r\n                        albumTitle={albumTitle}\r\n                        musicDuration={musicDuration}\r\n                        editMusicWidget={editMusicWidget}\r\n                        hiddenFileInput={hiddenFileInput}\r\n                        hiddenMusicInput={hiddenMusicInput}\r\n\r\n                        setFav={setFav}\r\n                        updateRow={updateRow}\r\n                        setLoader={setLoader}\r\n                        uploadMusic={uploadMusic}\r\n                        handleChange={handleChange}\r\n                        setMusicTitle={setMusicTitle}\r\n                        setAlbumTitle={setAlbumTitle}\r\n                        handleMusicClick={handleMusicClick}\r\n                        handleGenreChange={handleGenreChange}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        updateEditMusicWidget={updateEditMusicWidget}\r\n\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    addMusicWidget ? \r\n                    <NewMusicAdd \r\n                        fav={fav}\r\n                        genre={genre}\r\n                        artist={artist}\r\n                        category={category}\r\n                        musicName={musicName}\r\n                        musicTitle={musicTitle}\r\n                        albumTitle={albumTitle}\r\n                        musicImgPath={musicImgPath}\r\n                        musicImgName={musicImgName}\r\n                        musicDuration={musicDuration}\r\n                        addMusicWidget={addMusicWidget}\r\n                        hiddenFileInput={hiddenFileInput}\r\n                        hiddenMusicInput={hiddenMusicInput}\r\n\r\n                        setFav={setFav}\r\n                        uploadMusic={uploadMusic}\r\n                        handleClick={handleClick}\r\n                        handleChange={handleChange}\r\n                        setMusicTitle={setMusicTitle}\r\n                        setAlbumTitle={setAlbumTitle}\r\n                        saveUploadMusic={saveUploadMusic}\r\n                        handleMusicClick={handleMusicClick}\r\n                        uploadMusicImage={uploadMusicImage}\r\n                        handleGenreChange={handleGenreChange}\r\n                        removeMusicDetails={removeMusicDetails}\r\n                        removeSelectedSong={removeSelectedSong}\r\n                        removeSelectedImage={removeSelectedImage}\r\n                        updateAddMusicWidget={updateAddMusicWidget}\r\n                        handleCategoryChange={handleCategoryChange}\r\n\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {editExistingWidget ? \r\n                    <EditExistingModal \r\n                        fav={fav}\r\n                        rows={rows}\r\n                        id={modalId}\r\n                        editId={editId}\r\n                        header={header}\r\n                        value={catGenValue}\r\n\r\n                        setFav={setFav}\r\n                        setRows={setRows}\r\n                        toggle={setEditExistingWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n\r\n                {addArtistWidget ? \r\n                    <AddNewModal \r\n                        id='1'\r\n                        tabId={tabId}\r\n                        header=\"Add New Artist\"\r\n                        artistRows={artistRows}\r\n                        toggle={setAddArtistWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n                \r\n                {addGenreWidget ? \r\n                    <AddNewModal \r\n                        id='2'\r\n                        tabId={tabId}\r\n                        genreRows={genreRows}\r\n                        header=\"Add New Genre\"\r\n                        toggle={setAddGenreWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n                \r\n                {addCategoryWidget ? \r\n                    <AddNewModal \r\n                        id='3'\r\n                        tabId={tabId}\r\n                        header=\"Add New Category\"\r\n                        categoryRows={categoryRows}\r\n                        toggle={setAddCategoryWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    showBroadCast ? \r\n                    <AddNewModal \r\n                        id='4'\r\n                        tabId={tabId}\r\n                        header=\"BroadCast News\"\r\n                        toggle={setShowBroadCast}\r\n                        broadcastRows={broadcastRows}\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    createPlaylist ? \r\n                    <AddNewModal \r\n                        id='5'\r\n                        tabId={tabId}\r\n                        header=\"Add New Playlist\"\r\n                        toggle={setCreatePlaylist}\r\n                        playlistRows={playlistRows}\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                <AdminNavigation />\r\n\r\n                {/* <Container fluid>\r\n                     */}\r\n                <Container className={`page-content ${isDark ? \"dark\" : \"light\"} mb-3`}\r\n                    style={currentSong.id ? {height: \"calc(100vh - 230px)\"} : {height: \"calc(100vh - 120px)\"}}\r\n                >\r\n                    <div>\r\n                        <div className=\"d-flex navtabs-autocomplete\">\r\n                            <Nav tabs className=\"align-bottom-flex\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 1 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(1)}\r\n                                    >\r\n                                        Music Data\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 2 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(2)}\r\n                                    >\r\n                                        Artists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 3 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(3)}\r\n                                    >\r\n                                        Genre\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 4 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(4)}\r\n                                    >\r\n                                        Category\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 6 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(6)}\r\n                                    >\r\n                                        Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 5 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(5)}\r\n                                    >\r\n                                        BroadCasts\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Autocomplete\r\n                                {...defaultProps}\r\n                                id={`auto-complete`}\r\n                                className={`autoComplete ${isDark ? \"dark\" : \"light\"}`}\r\n                                onChange={(evt, val) => getSearchedAutoCompleteRow(val)}\r\n                                autoComplete\r\n                                includeInputInList\r\n                                renderInput={(params) => (\r\n                                <TextField {...params} label={  tabId === 1 ? \"Search Music/Album\" : \r\n                                                                tabId === 2 ? \"Search Artist\" : \r\n                                                                tabId === 3 ? \"Search Genre\" : \r\n                                                                tabId === 4 ? \"Search Category\":\r\n                                                                tabId === 5 ? \"Search Title\" : \r\n                                                                \"Search Playlist\"} \r\n                                    className=\"input-div\" variant=\"standard\" \r\n                                    onChange={getSearchedRow}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <TabContent activeTab={tabId}>\r\n                            <TabPane tabId={1}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <StickyHeadTable \r\n                                            id=\"table\"\r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            editRow={editRow}\r\n                                            toggleWarning={toggleWarning}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={2}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ArtistsTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editArtist={editArtistGenreCategoryPlaylist}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={3}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <GenreTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editGenre={editArtistGenreCategoryPlaylist}\r\n                                        /> \r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={4}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <CategoryTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editCategory={editArtistGenreCategoryPlaylist}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane>\r\n                            <TabPane tabId={5}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <BroadcastTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane>\r\n                            <TabPane tabId={6}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <PlaylistTable \r\n                                            rows={rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editPlaylist={editArtistGenreCategoryPlaylist}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane>  \r\n                        </TabContent>\r\n                    </div>\r\n                </Container>\r\n                <Box className='add-button-speed-dial' sx={{ height: 300, transform: 'translateZ(0px)', \r\n                        flexGrow: 1, bottom: `${currentSong.id ? \"8rem\" : \".5rem\"}` }}>\r\n                    <Backdrop open={open} />\r\n                    <SpeedDial\r\n                        ariaLabel=\"SpeedDial tooltip example\"\r\n                        sx={{ position: 'absolute', bottom: 16, right: 16 }}\r\n                        icon={<SpeedDialIcon />}\r\n                        onClose={handleClose}\r\n                        onOpen={handleOpen}\r\n                        open={open}\r\n                        className=\"speed-dial-custom\"\r\n                    >\r\n                        {actions.map((action, index) => (\r\n                            <SpeedDialAction\r\n                                key={action.name}\r\n                                icon={action.icon}\r\n                                tooltipTitle={action.name}\r\n                                tooltipOpen\r\n                                onClick={action.click}\r\n                            />\r\n                        ))}\r\n                    </SpeedDial>\r\n                </Box>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n","// for song list\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useContext } from \"react\";\r\nimport PlayCircle from \"@mui/icons-material/PlayCircle\";\r\nimport PauseCircle from \"@mui/icons-material/PauseCircle\";\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\n\r\nimport { CalculateTimeContext, SongList } from \"../../pages/Artist\";\r\nimport { PlayerContext, PlayPause, Playing, LoadAudio, IsDark } from \"../../App\";\r\n\r\nimport \"./body.css\";\r\n\r\nconst Body = (props) => {\r\n    \r\n    const isDark = useContext(IsDark);\r\n    const paused = useContext(Playing);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentPlayer = useContext(PlayerContext);\r\n    const calculateTimeContext = useContext(CalculateTimeContext);\r\n\r\n    const [playId, setPlayId] = useState(0);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const updatePlayId = (value) => {\r\n        setPlayId(value);\r\n    };\r\n\r\n    const updatePlayPause = (event) => {\r\n        const e = {\r\n            ...event, \r\n            code: \"Space\",\r\n            preventDefault: () => {}\r\n        };\r\n\r\n        playPauseState(e);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container> \r\n                <div className=\"song-list\">\r\n                    {\r\n                        songList.map((song, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className={`table-row ${isDark ? \"dark\" : \"light\"}`}\r\n                                        key={song.id}\r\n                                        style={currentPlayer.id && currentPlayer.id === song.id ? {color: isDark ? \"#eee\" : \"#111\"}: null}\r\n                                        onMouseEnter={(e) => {updatePlayId(song.id)}}\r\n                                        onMouseLeave={(e) => {updatePlayId(0)}}\r\n                                        onClick={e => loadAudio(songList, song, e)}\r\n                                    >\r\n                                        <div className=\"srno-title\">\r\n                                            <div className=\"srno\">\r\n                                                {\r\n                                                    currentPlayer.id && currentPlayer.id === song.id ?\r\n                                                    <span\r\n                                                        onMouseEnter={() => setPlaying(true)}\r\n                                                        onMouseLeave={() => setPlaying(false)}\r\n                                                    > \r\n                                                        {\r\n                                                            !paused ?\r\n                                                                <PlayCircle \r\n                                                                    onClick = {e => updatePlayPause(e)}\r\n                                                                /> :\r\n                                                                playing ?\r\n                                                                    <PauseCircle \r\n                                                                        onClick = {e => updatePlayPause(e)}\r\n                                                                    />:\r\n                                                                    <EqualizerIcon />\r\n                                                        }\r\n                                                    </span>:\r\n                                                    playId === song.id ? \r\n                                                        <PlayCircle /> :\r\n                                                        index+1\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"title\">\r\n                                                <div className=\"music-title\">\r\n                                                    {song.musicTitle}\r\n                                                </div>\r\n                                                <div className=\"d-flex custom-artists\">\r\n                                                    {\r\n                                                        song.artists?.map((art, index) => {\r\n                                                            return (\r\n                                                                <div className=\"\" key={index}>\r\n                                                                    <span className=\"song-list-artist\">\r\n                                                                        <Link to={`/artist/${art}`}>\r\n                                                                                {art}\r\n                                                                        </Link>\r\n                                                                    </span>\r\n                                                                    <span className=\"song-list-artist-separation\">\r\n                                                                        {song.artists.length - 1 > index ? \",\": \"\"}&nbsp;\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"duration\">\r\n                                                {song.duration ? calculateTimeContext(song.duration) : '--:--'}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        index < songList.length - 1 ? (\r\n                                            <div className=\"custom-bottom-border\" key={index} />\r\n                                        ) : <React.Fragment />\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;","import { Container } from \"reactstrap\";\r\nimport React, { useContext } from \"react\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\nimport PlayCircleFilledIcon from '@mui/icons-material/PlayCircleFilled';\r\n\r\nimport { IsDark, LoadAudio } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\nimport { CalculateTimeContext, Duration, SongList } from \"../../pages/Artist\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const totalDuration = useContext(Duration);\r\n    const calculateTotalDuration = useContext(CalculateTimeContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className=\"mt-3\">\r\n                <div className=\"album-container\">\r\n                    <div className={`album-image-container ${isDark ? \"dark\" : \"light\"}`}>\r\n                        <img \r\n                            className=\"album-image\"\r\n                            src={apiLinks.getArtistImgFromName + props.artist} \r\n                            alt={props.artist} />\r\n                    </div>\r\n                    <div className=\"album-details\">\r\n                        <div className=\"album-heading\">\r\n                            Artist\r\n                        </div>\r\n                        <div className=\"album-name\">\r\n                            {props.artist}\r\n                        </div>\r\n                        <div className=\"album-duration\">\r\n                            Duration&nbsp;<CircleIcon style={{ fontSize: '.5rem' }} />&nbsp;{ calculateTotalDuration(totalDuration) }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <PlayCircleFilledIcon \r\n                        className={`artist-play-button ${isDark ? \"dark\" : \"light\"}`} \r\n                        onClick={(e) => loadAudio(songList, songList[0], e)}\r\n                    />\r\n\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","// for related artists\r\nimport Slider from 'react-slick';\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { IsDark } from '../../App';\r\nimport { AlbumList } from '../../pages/Artist';\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./footer.css\";\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: true,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n          breakpoint: 1200,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 991,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Footer = (props) => {\r\n\r\n    const isDark = useContext(IsDark);\r\n    const albumList = useContext(AlbumList);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Container key=\"artist-container\" className=\"mt-5\">\r\n                { albumList.length ? \r\n                    <Container className=\"slider-container\">\r\n                        <h2 className={`category-list-heading ${isDark ? \"dark\" : \"light\"}`} title=\"Artists\">Artist's Album</h2>\r\n                        <Slider {...settings}>\r\n                        { albumList.map((album, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container\">\r\n                                        <img \r\n                                            src={apiLinks.getImage + album.musicImageKey} \r\n                                            alt={album.albumTitle} \r\n                                            className=\"artist-card-image\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className=\"pt-3 pb-3 artist-name\" title={album.albumTitle}>\r\n                                                <Link to={`/album/${album.albumTitle}`} className={`artist-name ${isDark ? \"dark\" : \"light\"}`}>\r\n                                                    {album.albumTitle}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3\" fluid />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport Body from \"../components/Artist/body\";\r\nimport Header from \"../components/Artist/header\";\r\nimport Footer from \"../components/Artist/footer\";\r\nimport { apiLinks } from \"../connection.config\";\r\nimport { Error } from \"../components/Notification/Notification\";\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\nimport { PlayerContext, IsDark } from \"../App\";\r\n\r\nimport \"./artist.css\";\r\n\r\nexport const SongList = React.createContext();\r\nexport const Duration = React.createContext();\r\nexport const AlbumList = React.createContext();\r\nexport const CalculateTimeContext = React.createContext();\r\n\r\nconst Artist = (props) => {\r\n    const params = useParams();\r\n    document.title = params.artistName;\r\n\r\n    const isDark = useContext(IsDark);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [songList, setSongList] = useState([]);\r\n    const [albumList, setAlbumList] = useState([]);\r\n    const [totalDuration, setTotalDuration] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n\r\n        const getArtistDetails = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getArtistDetails + params.artistName, {\r\n                    headers: {\r\n                        'content-type': \"application/json\"\r\n                    },\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    // console.log(response.data.message);\r\n                    const duration = response.data.message.reduce((partial_sum, a) => partial_sum + a.duration, 0);\r\n                    const album = [];\r\n                    response.data.message.map(item => album.includes(item.albumTitle) ? null : album.push(item));\r\n\r\n                    setAlbumList(album);\r\n                    setTotalDuration(duration);\r\n                    setSongList(response.data.message);\r\n                    abortController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                // Error(err.message);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        getArtistDetails();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [params]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <div className={`page-content ${isDark ? \"dark\" : \"light\"}`}\r\n                style={currentSong.id ? {height: \"calc(100vh - 215px)\"} : {height: \"calc(100vh - 70px)\"}}> \r\n                <CalculateTimeContext.Provider value={calculateSongTime}>\r\n                    <SongList.Provider value={songList}>\r\n                        <Duration.Provider value={totalDuration}>\r\n                            <AlbumList.Provider value={albumList}>\r\n                                <Header artist={params.artistName} />\r\n                                <Body artist={params.artistName} />\r\n                                <Footer artist={params.artistName} />\r\n                            </AlbumList.Provider>\r\n                        </Duration.Provider>\r\n                    </SongList.Provider>\r\n                </CalculateTimeContext.Provider>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Artist;\r\n","// for song list\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useContext } from \"react\";\r\nimport PlayCircle from \"@mui/icons-material/PlayCircle\";\r\nimport PauseCircle from \"@mui/icons-material/PauseCircle\";\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\n\r\nimport { CalculateTimeContext, SongList } from \"../../pages/Category\";\r\nimport { PlayerContext, PlayPause, Playing, LoadAudio, IsDark } from \"../../App\";\r\n\r\nimport \"./body.css\";\r\n\r\nconst Body = (props) => {\r\n    \r\n    const isDark = useContext(IsDark);\r\n    const paused = useContext(Playing);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentPlayer = useContext(PlayerContext);\r\n    const calculateTimeContext = useContext(CalculateTimeContext);\r\n\r\n    const [playId, setPlayId] = useState(0);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const updatePlayId = (value) => {\r\n        setPlayId(value);\r\n    };\r\n\r\n    const updatePlayPause = (event) => {\r\n        const e = {\r\n            ...event, \r\n            code: \"Space\",\r\n            preventDefault: () => {}\r\n        };\r\n\r\n        playPauseState(e);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container> \r\n                <div className=\"song-list\">\r\n                    {\r\n                        songList.map((song, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className={`table-row-${isDark ? \"dark\" : \"light\"}`}\r\n                                        key={song.id}\r\n                                        style={currentPlayer.id && currentPlayer.id === song.id ? {color: isDark ? \"#eee\" : \"#111\"}: null}\r\n                                        onMouseEnter={() => {updatePlayId(song.id)}}\r\n                                        onMouseLeave={() => {updatePlayId(0)}}\r\n                                        onClick={e => loadAudio(songList, song, e)}\r\n                                    >\r\n                                        <div className=\"srno-title\">\r\n                                            <div className=\"srno\">\r\n                                                {\r\n                                                    currentPlayer.id && currentPlayer.id === song.id ?\r\n                                                    <span\r\n                                                        onMouseEnter={() => setPlaying(true)}\r\n                                                        onMouseLeave={() => setPlaying(false)}\r\n                                                    > \r\n                                                        {\r\n                                                            !paused ?\r\n                                                                <PlayCircle \r\n                                                                    onClick = {e => updatePlayPause(e)}\r\n                                                                /> :\r\n                                                                playing ?\r\n                                                                    <PauseCircle \r\n                                                                        onClick = {e => updatePlayPause(e)}\r\n                                                                    />:\r\n                                                                    <EqualizerIcon />\r\n                                                        }\r\n                                                    </span>:\r\n                                                    playId === song.id ? \r\n                                                        <PlayCircle /> :\r\n                                                        index+1\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"title\">\r\n                                                <div className=\"music-title\">\r\n                                                    {song.musicTitle}\r\n                                                </div>\r\n                                                <div className=\"d-flex custom-artists\">\r\n                                                    {\r\n                                                        song.artists?.map((art, index) => {\r\n                                                            return(\r\n                                                                <div className=\"\" key={index}>\r\n                                                                    <span className=\"song-list-artist\">\r\n                                                                        {\r\n                                                                            art === \"Various Artists\" ? \r\n                                                                                art : \r\n                                                                                <Link to={`/artist/${art}`}>\r\n                                                                                        {art}\r\n                                                                                </Link>\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                    <span className=\"song-list-artist-separation\">\r\n                                                                        {song.artists.length - 1 > index ? \",\": \"\"}&nbsp;\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"duration\">\r\n                                                {song.duration ? calculateTimeContext(song.duration) : '--:--'}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        index < songList.length - 1 ? (\r\n                                            <div className=\"custom-bottom-border\" key={index} />\r\n                                        ) : <React.Fragment />\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;","import { Container } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useContext } from \"react\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\nimport PlayCircleFilledIcon from '@mui/icons-material/PlayCircleFilled';\r\n\r\nimport { IsDark, LoadAudio } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\nimport { Artists, SongList, Duration, CalculateTimeContext } from '../../pages/Category';\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const artists = useContext(Artists);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const totalDuration = useContext(Duration);\r\n    const calculateTotalDuration = useContext(CalculateTimeContext);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Container className=\"mt-3\">\r\n                <div className=\"album-container\">\r\n                    <div className={`album-image-container ${isDark ? \"dark\" : \"light\"}`}>\r\n                        <img \r\n                            className=\"album-image\"\r\n                            src={apiLinks.getImage + songList[0]?.musicImageKey} \r\n                            alt={props.title} />\r\n                    </div>\r\n                    <div className=\"album-details\">\r\n                        <div className=\"album-heading\">\r\n                            Category\r\n                        </div>\r\n                        <div className=\"album-name\">\r\n                            {props.title}\r\n                        </div>\r\n                        <div className=\"album-artists\">\r\n                            {\r\n                                artists.length > 2 ? \r\n                                    \"Various Artists\" : \r\n                                    artists?.map((artist, idx) => {\r\n                                        return (\r\n                                            <span key={idx}>\r\n                                                <Link className={`artist-${isDark ? \"dark\" : \"light\"}`} to={`/artist/${artist}`}>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                                {idx < (artists.length - 1) ? \" , \" : \" \"}\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                            } &nbsp; <CircleIcon style={{ fontSize: '.5rem' }} />&nbsp; { calculateTotalDuration(totalDuration) }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <PlayCircleFilledIcon \r\n                        className={`album-play-button ${isDark ? \"dark\" : \"light\"}`} \r\n                        onClick={(e) => loadAudio(songList, songList[0], e)}\r\n                    />\r\n                    \r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","// for related artists\r\nimport Slider from 'react-slick';\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { IsDark } from '../../App';\r\nimport { Artists } from \"../../pages/Category\";\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./footer.css\";\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: true,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n          breakpoint: 1200,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 991,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Footer = (props) => {\r\n\r\n    const isDark = useContext(IsDark);\r\n    let artistList = useContext(Artists);\r\n\r\n    artistList = artistList?.filter(artist => artist !== \"Various Artists\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container key=\"artist-container\" className=\"mt-5\">\r\n                { artistList.length ? \r\n                    <Container className=\"slider-container\">\r\n                        <h2 className={`category-list-heading ${isDark ? \"dark\" : \"light\"}`} title=\"Artists\">Related Artists</h2>\r\n                        <Slider {...settings}>\r\n                        { artistList.map((artist, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container\">\r\n                                        <img \r\n                                            src={apiLinks.getArtistImgFromName + artist} \r\n                                            alt={artist} \r\n                                            className=\"artist-card-image\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className=\"pt-3 pb-3 artist-name\" title={artist}>\r\n                                                <Link to={`/artist/${artist}`} className={`artist-name ${isDark ? \"dark\" : \"light\"}`}>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3\" fluid />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport Body from \"../components/Category/body\";\r\nimport Header from \"../components/Category/header\";\r\nimport Footer from \"../components/Category/footer\";\r\nimport { apiLinks } from \"../connection.config\";\r\nimport { Error } from \"../components/Notification/Notification\";\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\nimport { PlayerContext, IsDark } from \"../App\";\r\n\r\nimport \"./Category.css\";\r\n\r\nexport const Artists = React.createContext();\r\nexport const SongList = React.createContext();\r\nexport const Duration = React.createContext();\r\nexport const CalculateTimeContext = React.createContext();\r\n\r\nconst Category = () => {\r\n    const params = useParams();\r\n    // document.title = params.category;\r\n\r\n    const isDark = useContext(IsDark);\r\n    const currentSong = useContext(PlayerContext);\r\n    \r\n    const [artists, setArtists] = useState([]); \r\n    const [loader, setLoader] = useState(false);\r\n    const [songList, setSongList] = useState([]);\r\n    const [totalDuration, setTotalDuration] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        const getCategoryData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getCategoryByName+params.category, {\r\n                    headers: {\r\n                        'content-type': \"application/json\"\r\n                    },\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const artist = [...new Set(response.data.message.map((songs) => songs.artists).flat())];\r\n                    const duration = response.data.message.reduce((partial_sum, a) => partial_sum + a.duration, 0);\r\n                    \r\n                    setArtists(artist);\r\n                    setTotalDuration(duration);\r\n                    setSongList(response.data.message);\r\n                    abortController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        getCategoryData();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [params]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <div className={`page-content ${isDark ? \"dark\" : \"light\"}`}\r\n                style={currentSong.id ? {height: \"calc(100vh - 215px)\"} : {height: \"calc(100vh - 70px)\"}}> \r\n                <CalculateTimeContext.Provider value={calculateSongTime}>\r\n                    <SongList.Provider value={songList}>\r\n                        <Artists.Provider value={artists}>\r\n                            <Duration.Provider value={totalDuration}>\r\n                                <Header title={params.category} />\r\n                                <Body />\r\n                                <Footer />\r\n                            </Duration.Provider>\r\n                        </Artists.Provider>\r\n                    </SongList.Provider>\r\n                </CalculateTimeContext.Provider>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Category;\r\n","import React from 'react';\r\n\r\nimport \"./playlist.css\";\r\n\r\nconst Playlist = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Playlist;\r\n","import React, { useState, useRef, useEffect, useCallback, \r\n        forwardRef, useImperativeHandle, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\r\nimport { SpinnerRotate } from \"../spinner/spinner-grow\";\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious';\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\r\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\r\nimport VolumeDownIcon from '@mui/icons-material/VolumeDown';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nimport { LoadAudio, IsDark } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst MusicPlayer = forwardRef((props, ref) => {\r\n    const theme = useTheme();\r\n    \r\n    const audioRef = useRef(null);\r\n    const borderRef = useRef(null);\r\n    const volumeRef = useRef(null);\r\n\r\n    const isDark = useContext(IsDark);\r\n    const loadAudio = useContext(LoadAudio);\r\n\r\n    const { playing, setPlaying } = props;\r\n\r\n    const [style, setStyle] = useState({display: 'none'});\r\n\r\n    // const [playing, setPlaying] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [playlist, setPlaylist] = useState([]);\r\n    const [currentSong, setCurrentSong] = useState({});\r\n    const [currentSongIdx, setCurrentSongIdx] = useState(0);\r\n    \r\n    const [volume, setVolume] = useState(1.0);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [endTime, setEndTime] = useState(0);\r\n    \r\n    document.title = currentSong.musicTitle || 'Sangeet - Enjoy Ad Free Music'; \r\n    \r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    const updateBorderRef = useCallback(() => {\r\n        setCurrentTime(audioRef.current.currentTime);\r\n    }, []);\r\n\r\n    const playPauseSong = () => {\r\n        if(playing){\r\n            audioRef.current.pause();\r\n        }\r\n        else{\r\n            audioRef.current.play();\r\n        }\r\n        setPlaying(prev => !prev);\r\n    };\r\n\r\n    const prevSong = useCallback(() => {\r\n        if(currentSongIdx > 0){\r\n            props.setCurrentSong(playlist[currentSongIdx - 1]);\r\n        }\r\n    }, [props, currentSongIdx, playlist]);\r\n\r\n    const nextSong = useCallback(() => {\r\n        if(currentSongIdx < (playlist.length - 1)){\r\n            audioRef.current.pause(); \r\n            props.setCurrentSong(playlist[currentSongIdx + 1]);\r\n        }\r\n    }, [currentSongIdx, playlist, props]);\r\n\r\n    const volumeInc = () => {\r\n        if(volume < 1){\r\n            const vol = parseFloat(volume.toFixed(1)) + 0.1;\r\n            volumeRef.current.value = vol;\r\n            audioRef.current.volume = vol;\r\n            setVolume(vol);\r\n        }\r\n    };\r\n\r\n    const volumeDec = () => {\r\n        if(volume > 0){\r\n            const vol = parseFloat(volume.toFixed(1)) - 0.1;\r\n            volumeRef.current.value = vol;\r\n            audioRef.current.volume = vol;\r\n            setVolume(vol);\r\n        }\r\n    };\r\n\r\n    const handleMute = (vol) => {\r\n        setVolume(vol);\r\n        audioRef.current.volume = vol;\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        handlePlayPause(){\r\n            playPauseSong();\r\n        },\r\n        handleNextSong(){\r\n            nextSong();\r\n        },\r\n        handlePrevSong(){\r\n            prevSong();\r\n        },\r\n        handleVolumeInc(){\r\n            volumeInc();\r\n        },\r\n        handleVolumeDec(){\r\n            volumeDec();\r\n        },\r\n        }),\r\n    )\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n\r\n        const loadMusic = async () => {\r\n            try{\r\n                setLoading(true);\r\n                audioRef.current.src = await (apiLinks.getAudio + props.currentSong.musicKey);\r\n                const playPromise = audioRef.current.play();\r\n                audioRef.current.volume = volume;\r\n\r\n                setEndTime(props.currentSong.duration);\r\n\r\n                if (playPromise !== undefined) {\r\n                    playPromise.then(_ => {\r\n                      abortController = null;\r\n                    })\r\n                    .catch(error => {\r\n                      setPlaying(false);\r\n                    });\r\n                }\r\n\r\n                const currentSongIndex = props.playlist?.findIndex(obj => obj.id === props.currentSong?.id);\r\n                setCurrentSongIdx(currentSongIndex);\r\n\r\n                audioRef.current.onended = () => {\r\n                    if(currentSongIndex < props.playlist?.length - 1){\r\n                        loadAudio(props.playlist, props.playlist[currentSongIndex + 1], null);\r\n                    }\r\n                    else{\r\n                        loadAudio([], {}, null);\r\n                    }\r\n                    setPlaying(false);\r\n                };\r\n            }\r\n            catch(err){\r\n                console.log(\"An Error occured while loading music\", err);\r\n                // Error(err.message);\r\n            }\r\n            finally{\r\n                audioRef.current.oncanplaythrough = () => {\r\n                    setLoading(false);\r\n                    setPlaying(true);\r\n                };\r\n                \r\n                if(!(audioRef.current.paused) && audioRef.current.readyState > 0)\r\n                setLoading(false);\r\n            }\r\n        };\r\n        \r\n        if(props.currentSong?.musicTitle !== currentSong.musicTitle){\r\n            setPlaylist(props.playlist);\r\n            setCurrentSong(props.currentSong);\r\n            loadMusic();\r\n        }\r\n\r\n        return () => {\r\n            abortController?.abort();\r\n        }\r\n        \r\n    }, \r\n    [   props.currentSong, props.playlist, props, currentSongIdx, playlist, ref, volume, setPlaying, \r\n        props?.currentSong?.musicTitle, currentSong?.musicTitle, nextSong, updateBorderRef, loadAudio\r\n    ]);\r\n\r\n    return(\r\n        <>\r\n            <div className={`mt-2 bottom-navigation-container ${isDark ? \"player-dark\" : \"player-light\"}`}>\r\n                {/* <div ref={borderRef} className=\"top-one-row\"/> */}\r\n                <Slider\r\n                    ref={borderRef}\r\n                    aria-label=\"time-indicator\"\r\n                    size=\"small\"\r\n                    default={0}\r\n                    step={1}\r\n                    max={endTime}\r\n                    value={currentTime}\r\n                    onChange={(e) => {\r\n                        audioRef.current.currentTime = parseFloat(e.target.value);\r\n                        setCurrentTime(e.target.value);\r\n                    }}\r\n                    sx={{\r\n                        color: 'rgb(64, 226, 0)',\r\n                        height: 4,\r\n                        padding: '0 !important',\r\n                        '& .MuiSlider-thumb': {\r\n                        width: 15,\r\n                        height: 15,\r\n                        transition: '0.3s cubic-bezier(.47,1.64,.41,.8)',\r\n                        '&:before': {\r\n                            boxShadow: '0 2px 12px 0 rgba(0,0,0,0.4)',\r\n                        },\r\n                        '&:hover, &.Mui-focusVisible': {\r\n                            boxShadow: `0px 0px 0px 8px ${\r\n                            theme.palette.mode === 'dark'\r\n                                ? 'rgb(255 255 255 / 16%)'\r\n                                : 'rgb(0 0 0 / 16%)'\r\n                            }`,\r\n                        },\r\n                        '&.Mui-active': {\r\n                            width: 25,\r\n                            height: 25,\r\n                        },\r\n                        },\r\n                        '& .MuiSlider-rail': {\r\n                        opacity: 0.28,\r\n                        },\r\n                    }}\r\n                />\r\n                <div className=\"custom-bottom-navigation\" >\r\n                    <div className={`timeline start ${isDark ? \"dark-time\" : \"light-time\"}`}>{calculateSongTime(currentTime)}</div>\r\n                    <div className={`timeline end ${isDark ? \"dark-time\" : \"light-time\"}`}>{endTime !== Infinity ? calculateSongTime(endTime): '--:--'}</div>\r\n                    <div className=\"musicDetails\">\r\n                        <div className=\"image-box\">\r\n                            <div className=\"navbarHead-img-container\">\r\n                                <img \r\n                                    className={`navbarHead-img ${!currentSong.musicImageKey && \"hover-img\"}`} \r\n                                    src={currentSong.musicImageKey ? apiLinks.getImage + currentSong.musicImageKey : \"/assets/svg/dvd.svg\"} \r\n                                    alt=\"player-img\" \r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"music-detail-box\">\r\n                            <h5 className=\"music-title\">\r\n                                {currentSong.musicTitle}\r\n                            </h5>\r\n                            <h6 className=\"music-album\">\r\n                                <Link className={`${isDark ? \"dark-link-hover\" : \"light-link-hover\"}`} to={`/album/${currentSong.albumTitle}`}>\r\n                                    {currentSong.albumTitle}\r\n                                </Link>\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"custom-button-group-container\">\r\n                        <div className={`custom-button-group ${isDark ? \"dark\" : \"light\"}`}>\r\n                            <SkipPreviousIcon \r\n                                onClick={currentSongIdx > 0 ? prevSong : null}\r\n                                className={currentSongIdx === 0 ? `disabled-svg ${isDark ? \"dark\" : \"light\"}`: ''}\r\n                                style={currentSongIdx > 0 ? \r\n                                    { cursor: 'pointer'} : { cursor: 'not-allowed' }} \r\n                            />\r\n                            {\r\n                                loading ?\r\n                                    <SpinnerRotate \r\n                                        size=\"\"\r\n                                        color=\"success\"\r\n                                    /> :\r\n                                    playing ?\r\n                                        <PauseIcon title=\"Pause Song\" onClick={playPauseSong} /> : \r\n                                        <PlayArrowIcon title=\"Play Song\" onClick={playPauseSong} />\r\n                            }\r\n                            <SkipNextIcon \r\n                                onClick={currentSongIdx < (playlist.length - 1) ? nextSong: null}\r\n                                className={currentSongIdx === (playlist.length - 1) ? `disabled-svg ${isDark ? \"dark\" : \"light\"}`: ''}\r\n                                style={\r\n                                        currentSongIdx < (playlist.length - 1) ? \r\n                                            { cursor: 'pointer'} : { cursor: 'not-allowed' }} \r\n                            />\r\n                            <span \r\n                                className=\"volume-range-slider\"\r\n\r\n                                onClick={e => {\r\n                                    setStyle(prev => {\r\n                                        return {\r\n                                            display: prev.display === 'block' ? 'none' : 'block'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                            >\r\n                                {\r\n                                    volume > 0.5 ?\r\n                                        <VolumeUpIcon className=\"volume-svg\" /> :\r\n                                        volume > 0 ?\r\n                                            <VolumeDownIcon className=\"volume-svg\" /> :\r\n                                            <VolumeOffIcon className=\"volume-svg\" />\r\n                                }\r\n                                <input style={style} min={0} max={1} step={0.1} onChange={e => handleMute(parseFloat(e.target.value))}\r\n                                    type=\"range\" orient=\"vertical\" className=\"volume-slider\" ref={volumeRef} defaultValue={volume} />\r\n                            </span>\r\n                        </div>\r\n                        <audio ref={audioRef} preload=\"auto\" onTimeUpdate={updateBorderRef} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <Container className=\"mt-3 pt-5 pb-5\"/> */}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default MusicPlayer;","import axios from \"axios\";\nimport Slider from \"react-slick\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Flip, ToastContainer } from 'react-toastify';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Card, CardText, CardBody, CardImg } from 'reactstrap';\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\nimport React, { useState, useRef, useEffect, useReducer } from 'react';\nimport { Route, BrowserRouter as Router, Routes, Link } from 'react-router-dom';\n\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\n\nimport Home from './pages/Home.js';\nimport Error from './pages/Error.js';\nimport Album from './pages/Album.js';\nimport Admin from './pages/admin.js';\nimport Artist from \"./pages/Artist.js\";\nimport Category from \"./pages/Category\";\nimport Playlist from \"./pages/playlist\";\nimport { apiLinks } from './connection.config';\nimport { Subscribe, Unsubscribe } from './client/index';\nimport * as serviceWorker from './client/serviceWorker.js';\nimport MusicPlayer from \"./components/MusicPlayer/index.js\";\n\nimport './App.css';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const List = React.createContext();\nexport const Search = React.createContext();\nexport const IsDark = React.createContext();\nexport const Loader = React.createContext();\nexport const Playing = React.createContext();\nexport const SetIsDark = React.createContext();\nexport const LoadAudio = React.createContext();\nexport const PlayPause = React.createContext();\nexport const PlayerContext = React.createContext();\n\nconst musicList = {};\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'FETCH_SUCCESS':\n        case \"FETCH_CACHE\":\n            const allArtistData = action.artistData;\n            const artistData = action.artistData.filter(item => item.show === true);\n            const genreData = action.genreData.filter(item => item.show === true);\n            const categoryData = action.categoryData.filter(item => item.show === true);\n            const term = action.message.filter(item => item.show === true);\n            \n            let genreList = {};\n            let albumList = {};\n            let artistList = {};\n            let categoryList = {};\n            let allArtistList = {};\n            let musicList = action.message;\n\n            for(var i=0; i < term.length; i++){\n\n                // Filtering genre data\n                let list = term[i].genre;\n                for(var j=0; j < list.length; j++){\n                    const data = list[j];\n                    if(genreData.find(genre => genre.type === data)){\n                        if(genreList[data] === undefined){\n                            genreList[data] = [term[i]];\n                        }\n                        else{\n                            genreList[data].push(term[i]);\n                        }\n                    }\n                }\n\n                // Filtering album data\n                list = term[i].albumTitle;\n                if(albumList[list] === undefined){\n                    albumList[list] = [term[i]];\n                }\n                else{\n                    albumList[list].push(term[i]);\n                }\n\n                // Filtering artist data\n                list = term[i].artists;\n                for(j=0; j < list.length; j++){\n                    const data = list[j];\n                    if(artistData.find(artist => artist.name === data)){\n                        if(artistList[data] === undefined){\n                            artistList[data] = [term[i]];\n                        }\n                        else{\n                            artistList[data].push(term[i]);\n                        }\n                    }\n                }\n\n                // Getting All Artists\n                for(j=0; j < list.length; j++){\n                    const data = list[j];\n                    if(allArtistData.find(artist => artist.name === data)){\n                        if(allArtistList[data] === undefined){\n                          allArtistList[data] = [term[i]];\n                        }\n                        else{\n                          allArtistList[data].push(term[i]);\n                        }\n                    }\n                }\n\n                // Filtering category data\n                list = term[i].category;\n                for(j=0; j < list.length; j++){\n                    const data = list[j];\n                    if(categoryData.find(category => category.type === data)){\n                        if(categoryList[data] === undefined){\n                            categoryList[data] = [term[i]];\n                        }\n                        else{\n                            categoryList[data].push(term[i]);\n                        }\n                    }\n                }\n            }\n\n            const list = {\n                genreList,\n                albumList,\n                artistList,\n                allArtistList,\n                categoryList,\n                musicList\n            };\n\n            // console.log(list);\n\n            return list;\n\n        case 'FETCH_ERROR':\n            // Error(action.message);\n            return state;\n\n        default:\n            return state;\n    }\n};\n\nconst settings = {\n  arrows: true,\n  dots: false,\n  draggable: true,\n  easing: \"linear\",\n  infinite: false,\n  lazyLoad: \"ondemand\",\n  speed: 500,\n  slidesToShow: 6,\n  slidesToScroll: 1,\n  swipeToSlide: true,\n  responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 5,\n        }\n      },\n      {\n          breakpoint: 850,\n          settings: {\n            slidesToShow: 4,\n          }\n        },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 3\n        }\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 2\n        }\n      },\n      {\n          breakpoint: 300,\n          settings: {\n            slidesToShow: 1\n          }\n      },\n  ]\n};\n\nconst App = () => {\n  library.add(faHome);\n  \n  const player = useRef(null);\n  \n  const [isDark, setIsDark] = useState(true);\n  \n  const [search, setSearch] = useState(false);\n  const [searchItem, setSearchItem] = useState({});\n  const [querySearch, setQuerySearch] = useState('');\n\n  const [loader, setLoader] = useState(false);\n  const [playlist, setPlaylist] = useState([]);\n  const [playing, setPlaying] = useState(false);\n  const [currentSong, setCurrentSong] = useState({});\n\n  const [list, dispatch] = useReducer(reducer, musicList);\n\n  const loadAudio = (ll, item, e = null) => {\n    if(e)\n        e.preventDefault();\n    setPlaylist(ll);\n    setCurrentSong(item);\n    // console.log(ll, item);\n  };\n\n  const handleKeyPress = (e) => {\n    switch(e.code){\n        case 'Space':  \n            if(player.current)\n              e.preventDefault();\n              player?.current?.handlePlayPause();\n            break;\n        case 'ArrowLeft':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handlePrevSong();\n            break;\n        case 'ArrowRight':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleNextSong();\n            break;\n        case 'ArrowUp':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleVolumeInc();\n            break;\n        case 'ArrowDown':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleVolumeDec();\n            break;\n        default:\n            break;\n    }\n    return false;\n  };\n\n  const updateDark = () => {\n    window?.localStorage?.setItem(\"mode\", !isDark);\n    setIsDark(prev => !prev);\n  };\n\n  const updateQuerySearch = (e) => {\n    const value = e.target.value;\n\n    if(value.length){\n      const searchMusicList = list?.musicList.filter(item => item.musicTitle.toLowerCase().includes(value.toLowerCase()));\n      let searchAlbumList = list?.musicList.filter(item => item.albumTitle.toLowerCase().includes(value.toLowerCase()));\n      const searchArtistList = Object.keys(list.allArtistList)?.filter(name => name.toLowerCase().includes(value.toLowerCase()));\n\n      searchAlbumList = searchAlbumList.filter((value, index, self) => \n                          index === self.findIndex((item) => (\n                            item.albumTitle === value.albumTitle\n                          ))\n      );\n\n      setSearchItem({\n        music: searchMusicList,\n        album: searchAlbumList,\n        artist: searchArtistList\n      });\n    }\n    else{\n      setSearchItem({\n        music: [],\n        album: [],\n        artist: []\n      });\n    }\n\n    setQuerySearch(e.target.value);\n  };\n\n  useEffect(() => {\n\n    if(\"Notification\" in window){\n      if(Notification.permission === \"default\"){\n          Notification.requestPermission().then((permission) => {\n              if(permission === \"granted\"){\n                  Subscribe();\n              }\n              else{\n                Unsubscribe();\n              }\n          })\n      }\n      else if(Notification.permission === \"granted\"){\n          Subscribe();\n          // console.log(\"already subscribed\");\n      }\n      else{\n        Unsubscribe();\n      }\n    }\n    else{\n        console.log(\"Notification is not supported\");\n    }\n    \n    setIsDark(window?.localStorage?.getItem(\"mode\") === 'true' ? true : false);\n    \n    window?.addEventListener('keydown', handleKeyPress, false);\n\n    return () => {\n      document.removeEventListener('keypress', handleKeyPress);\n    };\n  }, []);\n\n  useEffect(() => {\n\n    let abortController = new AbortController();\n\n    const getAudioData = async() => {\n        try{\n            setLoader(true);\n            const response = await axios.get(apiLinks.getAllAudioDetails, {\n                signal: abortController.signal\n            });\n            if(response.data.code === 200){\n                dispatch({  type: 'FETCH_SUCCESS', \n                            message: response.data.message,\n                            artistData: response.data.artistData,\n                            genreData: response.data.genreData,\n                            categoryData: response.data.categoryData\n                        });\n                if(window.localStorage){\n                    window.localStorage.setItem(\"Song Data\", JSON.stringify({\n                        message: response.data.message,\n                        artistData: response.data.artistData,\n                        genreData: response.data.genreData,\n                        categoryData: response.data.categoryData\n                    }));\n                }\n            }\n            else{\n                dispatch({ type: 'FETCH_ERROR', message: response.data.message });\n            }\n        }\n        catch(err){\n            console.log(err);\n            dispatch({ type: 'FETCH_ERROR', message: err.message });\n        }\n        finally{\n            setLoader(false);\n        }\n    };\n\n    if(window?.localStorage?.getItem(\"Song Data\") && Object.keys(currentSong).length !== 0){\n        const prevData = JSON.parse(window.localStorage.getItem(\"Song Data\"));\n        if(Object.keys(prevData).length)\n            dispatch({type: \"FETCH_CACHE\", ...prevData})\n        else\n            getAudioData();\n    }\n    else\n        getAudioData();\n\n    return () => {\n        if(abortController){\n            abortController?.abort();\n            setLoader(false);\n        }\n    }\n  }, [currentSong]);\n\n  const toggleSearch = () => {\n    setQuerySearch(''); \n    setSearchItem({}); \n    setSearch(prev => !prev);\n  };\n  \n  return (\n    <React.Fragment>\n      <PlayerContext.Provider value={currentSong}>\n        <PlayPause.Provider value={handleKeyPress}>\n          <Playing.Provider value={playing}>\n            <LoadAudio.Provider value={loadAudio}>\n              <IsDark.Provider value={isDark}>\n                <SetIsDark.Provider value={updateDark}>\n                  <Search.Provider value={setSearch}>\n                    <List.Provider value={list}>\n                      <Loader.Provider value={loader}>\n                        <div className={`app-bg ${isDark ? \"dark\" : \"light\"}`}>\n                          <Router>\n                            <Modal \n                              isOpen={search}\n                              scrollable\n                              size='lg'\n                              toggle={toggleSearch}\n                            >\n                              <ModalHeader\n                                toggle={toggleSearch}\n                              >\n                                Search Music\n                              </ModalHeader>\n                              <ModalBody>\n                                <div>\n                                  <Box sx={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'center' }}>\n                                    <TextField id=\"input-with-sx\" label=\"Search keyword\" variant=\"standard\" \n                                      value={querySearch} onChange={updateQuerySearch}\n                                    />\n                                    <SearchIcon sx={{ color: 'action.active', mr: 1, my: 0.5, cursor: 'pointer' }} />\n                                  </Box>\n                                  {\n                                    querySearch.length === 0 ?\n                                      <React.Fragment>\n                                        <Box className=\"mt-3\">\n                                          <h5>Music <ArrowRightAltIcon /></h5>\n                                          <Slider className=\"search-slider\" {...settings}>\n                                            {\n                                              list?.musicList?.map(item => {\n                                                return (\n                                                  <Card key={item.id} title={`Play ${item.musicTitle}`}>\n                                                    <CardImg className=\"search-card-image\" onClick={() => {loadAudio([item], item); toggleSearch();}}\n                                                      src={apiLinks.getImage + item.musicImageKey} />\n                                                    <CardBody className=\"search-card-body\">\n                                                      <CardText onClick={() => {loadAudio([item], item); toggleSearch();}} className=\"search-card-text\">\n                                                        {item.musicTitle}\n                                                      </CardText>\n                                                    </CardBody> \n                                                  </Card>\n                                                );\n                                              })\n                                            }\n                                          </Slider>\n                                        </Box>\n                                      </React.Fragment>\n                                      : \n                                      <React.Fragment />\n                                  }\n                                  {\n                                    searchItem?.artist?.length > 0 ? \n                                    <Box className=\"mt-3\">\n                                      <h5>Artists <ArrowRightAltIcon /></h5>\n                                      <Slider className=\"search-slider\" {...settings}>\n                                        {\n                                          searchItem.artist.map(item => {\n                                            return (\n                                              <Card key={item}>\n                                                <Link style={{ textDecoration: \"none\" }} onClick={toggleSearch} to={`/artist/${item}`}>\n                                                  <CardImg className=\"search-card-image\" src={apiLinks.getArtistImgFromName + item} />\n                                                  <CardBody className=\"search-card-body\">\n                                                    <CardText className=\"search-card-text\">\n                                                      {item}\n                                                    </CardText>\n                                                  </CardBody> \n                                                </Link>\n                                              </Card>\n                                            );\n                                          })\n                                        }\n                                      </Slider>\n                                    </Box> :\n                                    <React.Fragment />\n                                  }\n                                  {\n                                    searchItem?.album?.length > 0 ?\n                                    <Box className=\"mt-3\">\n                                      <h5>Album <ArrowRightAltIcon /></h5>\n                                      <Slider className=\"search-slider\" {...settings}>\n                                        {\n                                          searchItem.album.map(item => {\n                                            return (\n                                              <Card key={item}>\n                                                <Link style={{ textDecoration: \"none\" }} onClick={toggleSearch} to={`/album/${item.albumTitle}`}>\n                                                  <CardImg className=\"search-card-image\" src={apiLinks.getImage + item.musicImageKey} />\n                                                  <CardBody className=\"search-card-body\">\n                                                    <CardText className=\"search-card-text\">\n                                                      {item.albumTitle}\n                                                    </CardText>\n                                                  </CardBody> \n                                                </Link>\n                                              </Card>\n                                            );\n                                          })\n                                        }\n                                      </Slider>\n                                    </Box> :\n                                    <React.Fragment />\n                                  }\n                                  {\n                                    searchItem?.music?.length > 0 ?\n                                    <Box className=\"mt-3\">\n                                      <h5>Music <ArrowRightAltIcon /></h5>\n                                      <Slider className=\"search-slider\" {...settings}>\n                                        {\n                                          searchItem.music.map(item => {\n                                            return (\n                                              <Card key={item.id} title={`Play ${item.musicTitle}`}>\n                                                <CardImg className=\"search-card-image\" onClick={() => {loadAudio([item], item); toggleSearch();}}\n                                                  src={apiLinks.getImage + item.musicImageKey} />\n                                                <CardBody className=\"search-card-body\">\n                                                  <CardText onClick={() => {loadAudio([item], item); toggleSearch();}} className=\"search-card-text\">\n                                                    {item.musicTitle}\n                                                  </CardText>\n                                                </CardBody>                                     \n                                              </Card>\n                                            );\n                                          })\n                                        }\n                                      </Slider>\n                                    </Box> :\n                                    <React.Fragment />\n                                  }\n                                  {\n                                    querySearch.length !== 0 && searchItem?.artist?.length === 0 && \n                                    searchItem?.album?.length === 0 && searchItem?.music?.length === 0 ?\n                                    <h4 \n                                      style={{ textAlign: 'center', marginTop: '1rem' }}\n                                    >\n                                      No Result Found!\n                                    </h4> :\n                                    <React.Fragment />\n                                  }\n                                </div>\n                              </ModalBody>\n                            </Modal>\n\n                            <Routes>\n\n                              <Route exact path=\"/\" element={<Home />} />\n                              <Route path=\"/admin/\" element={<Admin />} />\n                              <Route path=\"/category/:category\" element={<Category />} />\n                              <Route path=\"/album/:albumName\" element={<Album />} />\n                              <Route path=\"/artist/:artistName\" element={<Artist />} />\n                              <Route path=\"/playlist/:playlistName\" element={<Playlist />} />\n                              <Route path=\"*\" element={<Error />} />\n\n                            </Routes>\n                            {\n                                playlist.length ? \n                                    <MusicPlayer \n                                        ref={player}\n                                        currentSong={currentSong}\n                                        playlist={playlist}\n                                        setCurrentSong={setCurrentSong}\n                                        playing={playing}\n                                        setPlaying={setPlaying}\n                                    />\n                                    : <React.Fragment />\n                            }\n                          </Router>\n                        </div>\n                        <ToastContainer \n                            position='top-right'\n                            autoClose={3000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick={true}\n                            rtl={false}\n                            pauseOnFocusLoss\n                            draggable\n                            pauseOnHover\n                            theme=\"dark\"\n                            transition={Flip}\n                        />\n                      </Loader.Provider>\n                    </List.Provider>\n                  </Search.Provider>\n                </SetIsDark.Provider>\n              </IsDark.Provider>\n            </LoadAudio.Provider>\n          </Playing.Provider>\n        </PlayPause.Provider>\n      </PlayerContext.Provider>\n    </React.Fragment>\n  );\n}\n\nserviceWorker.register();\n\nexport default App;\n","export function register(){\r\n    if('serviceWorker' in navigator){\r\n        // const url = \"http://localhost:3000/sw.js\"; // local testing url\r\n        // const url = \"http://localhost:5000/sw.js\"; // local build url\r\n        const url = \"https://sangeet.tech/sw.js\" // production url\r\n        navigator.serviceWorker.register(url, {\r\n            scope: '/',\r\n        })\r\n        .then(function(registration) {\r\n            registration.addEventListener('updatefound', function() {\r\n              // If updatefound is fired, it means that there's\r\n              // a new service worker being installed.\r\n              const installingWorker = registration.installing;\r\n              console.log('A new service worker is being installed:',\r\n                installingWorker);\r\n            });\r\n\r\n            registration.addEventListener('pushsubscriptionchange', function(event) {\r\n                console.log(\"Pushsubscriptionchange\", event);\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.log('Service worker registration failed:', error);\r\n        });\r\n    }\r\n    else {\r\n        console.log('Service workers are not supported.');\r\n    }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}