{"version":3,"sources":["connection.config.js","components/spinner/spinner-grow.js","components/navigation/Navigation-bar/navigation.js","pages/Home.js","pages/Error.js","components/Album/body.js","components/Album/header.js","components/Album/footer.js","components/Notification/Notification.js","pages/Album.js","client/index.js","components/Admin/textInput.js","components/Admin/newImageUpload.js","components/Admin/addNewModal.js","components/Admin/checkBoxInput.js","components/Admin/newMusicAdd.js","components/Tables/Genre-table.js","components/Tables/artists-table.js","components/Tables/music-table.js","components/Tables/category-table.js","components/Warning/Warning.js","components/Admin/editImageUpload.js","components/Admin/editExistingMusic.js","components/Admin/editExistingModal.js","components/navigation/Navigation-bar/admin-navigation.js","pages/admin.js","components/Artist/body.js","components/Artist/header.js","components/Artist/footer.js","pages/Artist.js","components/MusicPlayer/index.js","App.js","client/serviceWorker.js","reportWebVitals.js","index.js"],"names":["apiLinks","baseURL","broadcast","subscribe","unsubscribe","status","getAudio","getImage","getAudioKey","getImageKey","getArtistImgKey","getArtistImgFromName","getAlbumDetails","getArtistDetails","getAllAudio","getAllAudioDetails","getAllArtists","getAllGenre","getAllCategory","postSong","addArtists","addGenre","addCategory","deleteMusic","deleteArtist","deleteGenre","deleteCategory","updateAdminData","updateAdminArtist","updateAdminGenre","updateAdminCategory","updateAdminMusicFav","updateAdminGenreFav","updateAdminArtistFav","updateAdminCategoryFav","SpinnerRotate","props","color","size","SpinnerGrow","isOpen","autoFocus","scrollable","keyboard","contentClassName","backdrop","centered","fullscreen","className","type","MaterialUISwitch","styled","Switch","theme","width","height","padding","margin","transform","backgroundImage","encodeURIComponent","opacity","backgroundColor","palette","mode","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","Navigation","navigate","useNavigate","isDark","useContext","IsDark","setIsDark","SetIsDark","useState","setIsOpen","updateNavClick","prev","dark","light","expand","onClick","sx","m","checked","toggle","direction","navbar","icon","faHome","faMusic","faBell","faSignInAlt","musicList","reducer","state","action","artistData","filter","item","show","genreData","categoryData","term","message","genreList","artistList","albumList","categoryList","i","length","list","genre","data","j","find","undefined","push","albumTitle","artists","artist","name","category","settings","dots","arrows","draggable","lazyLoad","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","easing","responsive","breakpoint","Home","playing","Playing","loadAudio","LoadAudio","playPauseState","PlayPause","currentSong","PlayerContext","loader","setLoader","mouseId","setMouseId","useReducer","dispatch","handleStateChange","e","event","code","preventDefault","useEffect","abortController","AbortController","getAudioData","a","axios","get","signal","response","window","localStorage","setItem","JSON","stringify","console","log","getItem","Object","keys","prevData","parse","abort","Fragment","fluid","map","catList","ll","sort","b","keyA","Date","timeStamp","keyB","title","onMouseEnter","id","onMouseLeave","musicTitle","src","musicImageKey","alt","style","cursor","to","textAlign","Error","Body","paused","songList","SongList","currentPlayer","calculateTimeContext","CalculateTimeContext","playId","setPlayId","setPlaying","updatePlayId","value","updatePlayPause","song","index","art","duration","Header","Artists","totalDuration","Duration","calculateTotalDuration","idx","fontSize","Footer","Success","autoClose","toast","success","hideProgressBar","closeOnClick","pauseOnFocusLoss","pauseOnHover","progress","error","transition","Bounce","React","createContext","Album","params","useParams","setSongList","setArtists","setTotalDuration","getAlbum","albumName","headers","Set","songs","flat","reduce","partial_sum","Provider","time","Infinity","minutes","Math","floor","seconds","String","urlBase64ToUint8Array","base64String","base64","repeat","replace","rawData","atob","outputArray","Uint8Array","charCodeAt","Subscribe","navigator","serviceWorker","ready","registration","pushManager","userVisibleOnly","applicationServerKey","process","subscription","existingEndPoint","today","toISOString","post","endpoint","Unsubscribe","delete","removeItem","Broadcast","TextInput","xs","justifyContent","for","required","labelName","alignSelf","check","TextField","onChange","target","label","variant","Checkbox","onCheckBoxChange","checkedValue","inputProps","checkedIcon","NewImageUpload","musicImgPath","musicImgName","close","removeSelectedImage","accept","uploadMusicImage","ref","hiddenFileInput","display","handleClick","outline","AddNewModal","useRef","setName","checkBoxChecked","setCheckBoxChecked","artistImg","setArtistImg","artistImgName","setArtistImgName","artistImgPath","setArtistPath","setData","tabId","artistRows","rowData","genreRows","categoryRows","addDetail","controller","names","split","nam","trim","formData","FormData","append","types","constructor","header","files","URL","createObjectURL","current","click","CheckBoxInput","FormControl","InputLabel","Select","labelId","multiple","handleChange","input","OutlinedInput","renderValue","selected","join","MenuProps","MenuItem","indexOf","ListItemText","primary","random","PaperProps","maxHeight","ITEM_HEIGHT","NewMusicAdd","setGenreList","setArtistList","setCategoryList","musicName","addMusicWidget","musicDuration","hiddenMusicInput","uploadMusic","saveUploadMusic","handleMusicClick","fav","setFav","handleGenreChange","removeMusicDetails","removeSelectedSong","updateAddMusicWidget","handleCategoryChange","setMusicTitle","setAlbumTitle","genreController","artistController","categoryController","getGenreList","getArtistList","getCategoryList","lg","calculateSongTime","columns","minWidth","align","maxWidth","GenreTable","setRows","rows","page","setPage","rowsPerPage","setRowsPerPage","createTheme","updateFavState","put","row","ThemeProvider","Paper","overflow","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","hover","role","tabIndex","Edit","editGenre","Delete","toggleWarning","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","ArtistsTable","editArtist","StickyHeadTable","editRow","CategoryTable","editCategory","DeleteWarning","deleteRow","EditImageUpload","imageKey","EditExistingMusic","audioRef","load","setLoad","currentPaused","setCurrentPaused","musicKey","setMusicKey","musicImgKey","setMusicImgKey","editMusicWidget","editId","updateRow","updateEditMusicWidget","closeWidget","pauseSong","play","pause","updateSongState","onended","err","oncanplaythrough","readyState","saveEditFile","imgFileController","audioFileController","getImageFileKey","getAudioFileKey","currentTime","EditExistingModal","editedRow","artistImgKey","AdminNavigation","sticky","musicRows","Admin","audioDurationRef","open","setOpen","setTabId","catGenValue","setCatGenValue","setEditId","modalId","setModalId","setHeader","warning","setWarning","deleteId","setDeleteId","deleteItemName","setDeleteItemName","setGenre","setArtist","setCategory","setAddMusicWidget","addGenreWidget","setAddGenreWidget","addArtistWidget","setAddArtistWidget","addCategoryWidget","setAddCategoryWidget","setEditMusicWidget","editExistingWidget","setEditExistingWidget","music","setMusic","setMusicName","setMusicDuration","musicImg","setMusicImg","setMusicImgName","setMusicImgPath","updateTabId","defaultProps","options","getOptionLabel","option","musicController","getMusicData","getArtistsData","getGenreData","getCategoryData","getSearchedRow","searchedData","toLowerCase","includes","remove","editArtistGenreCategory","domain","editTableRow","entry","actions","webkitURL","document","createElement","preload","onloadedmetadata","revokeObjectURL","Box","flexGrow","Backdrop","SpeedDial","ariaLabel","bottom","right","SpeedDialIcon","onClose","onOpen","SpeedDialAction","tooltipTitle","tooltipOpen","tabs","Autocomplete","evt","val","getSearchedAutoCompleteRow","autoComplete","includeInputInList","renderInput","activeTab","editableRow","AlbumList","album","Artist","setAlbumList","artistName","MusicPlayer","forwardRef","useTheme","borderRef","volumeRef","setStyle","loading","setLoading","playlist","setPlaylist","setCurrentSong","currentSongIdx","setCurrentSongIdx","volume","setVolume","setCurrentTime","endTime","setEndTime","updateBorderRef","useCallback","playPauseSong","prevSong","nextSong","useImperativeHandle","handlePlayPause","handleNextSong","handlePrevSong","handleVolumeInc","vol","parseFloat","toFixed","volumeInc","handleVolumeDec","volumeDec","loadMusic","playPromise","then","_","catch","currentSongIndex","findIndex","obj","Slider","default","step","max","boxShadow","min","orient","defaultValue","onTimeUpdate","register","scope","addEventListener","installing","App","library","add","player","handleKeyPress","Notification","permission","requestPermission","removeEventListener","exact","path","element","newestOnTop","rtl","Flip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6e64351f.chunk.js","sourcesContent":["export const apiLinks = {\r\n    baseURL: \"http://localhost:5000/\" // local Development\r\n    // baseURL : \"http://3.109.59.110:5000/\" // testing\r\n    // baseURL: \"http://musicBackend.com/\" // Production\r\n};\r\n\r\n// serviceWorker subscription\r\napiLinks.broadcast = apiLinks.baseURL+\"broadcast\";\r\napiLinks.subscribe = apiLinks.baseURL+\"subscription\";\r\napiLinks.unsubscribe = apiLinks.baseURL+\"unsubcription\";\r\n\r\n// get Links\r\napiLinks.status = apiLinks.baseURL+\"status\";\r\napiLinks.getAudio = apiLinks.baseURL+\"audio/\";\r\napiLinks.getImage = apiLinks.baseURL+\"image/\";\r\napiLinks.getAudioKey = apiLinks.baseURL+\"audioKey/\";\r\napiLinks.getImageKey = apiLinks.baseURL+\"imageKey/\";\r\napiLinks.getArtistImgKey = apiLinks.baseURL+\"artistImageKey/\";\r\napiLinks.getArtistImgFromName = apiLinks.baseURL+\"getImageByArtistName/\";\r\napiLinks.getAlbumDetails = apiLinks.baseURL+\"album/\";\r\napiLinks.getArtistDetails = apiLinks.baseURL+\"artist/\";\r\napiLinks.getAllAudio = apiLinks.baseURL+\"getAllMusic\";\r\napiLinks.getAllAudioDetails = apiLinks.baseURL+\"getAllMusicDetails\";\r\napiLinks.getAllArtists = apiLinks.baseURL+\"getAllArtists\";\r\napiLinks.getAllGenre = apiLinks.baseURL+\"getAllGenre\";\r\napiLinks.getAllCategory = apiLinks.baseURL+\"getAllCategory\";\r\n\r\n// post Links\r\napiLinks.postSong = apiLinks.baseURL+\"addNewSong\";\r\napiLinks.addArtists = apiLinks.baseURL+\"postNewArtists\";\r\napiLinks.addGenre = apiLinks.baseURL+\"postNewGenre\";\r\napiLinks.addCategory = apiLinks.baseURL+\"postNewCategory\";\r\n\r\n// delete Links\r\napiLinks.deleteMusic = apiLinks.baseURL+\"admin/musicDelete/\";\r\napiLinks.deleteArtist = apiLinks.baseURL+\"admin/artistDelete/\";\r\napiLinks.deleteGenre = apiLinks.baseURL+\"admin/genreDelete/\";\r\napiLinks.deleteCategory = apiLinks.baseURL+\"admin/categoryDelete/\"\r\n\r\n// put Links\r\napiLinks.updateAdminData = apiLinks.baseURL+\"admin/updateData/\";\r\napiLinks.updateAdminArtist = apiLinks.baseURL+\"admin/updateArtist/\";\r\napiLinks.updateAdminGenre = apiLinks.baseURL+\"admin/updateGenre/\";\r\napiLinks.updateAdminCategory = apiLinks.baseURL+\"admin/updateCategory/\";\r\n\r\napiLinks.updateAdminMusicFav = apiLinks.baseURL+\"admin/updateMusicFav/\";\r\napiLinks.updateAdminGenreFav = apiLinks.baseURL+\"admin/updateGenreFav/\";\r\napiLinks.updateAdminArtistFav = apiLinks.baseURL+\"admin/updateArtistFav/\";\r\napiLinks.updateAdminCategoryFav = apiLinks.baseURL+\"admin/updateCategoryFav/\";","import React from 'react';\r\nimport { Modal, ModalBody, Spinner } from 'reactstrap';\r\n\r\nimport \"./spinner-grow.css\";\r\n\r\nconst SpinnerGrow = (props) => {\r\n\r\n    return(\r\n        <Modal \r\n            isOpen={true}\r\n            autoFocus={true}\r\n            scrollable={false}\r\n            keyboard={false}\r\n            contentClassName='loader-modal-class'\r\n            backdrop='static'\r\n            centered\r\n            fullscreen=\"md\"\r\n            size='sm'\r\n        >\r\n            <ModalBody>\r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    className='first-dot-spinner'\r\n                    type=\"grow\"\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n                \r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    type=\"grow\"\r\n                    className='second-dot-spinner'\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n                    \r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    className='third-dot-spinner'\r\n                    type=\"grow\"\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst SpinnerRotate = (props) => {\r\n\r\n    return(\r\n        <Spinner\r\n            color={props.color || \"success\"}\r\n            size={props.size || \"\"}\r\n        >\r\n            Loading...\r\n        </Spinner>\r\n    );\r\n\r\n};\r\n\r\nexport default SpinnerGrow;\r\n\r\nexport {\r\n    SpinnerRotate\r\n};\r\n","import Switch from '@mui/material/Switch';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Navbar, NavItem, Nav, NavbarToggler, NavbarBrand, NavLink,\r\n        Offcanvas, OffcanvasHeader, OffcanvasBody, Container } from \"reactstrap\";\r\nimport { faHome, faMusic, faBell, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { IsDark, SetIsDark } from \"../../../App\";\r\n\r\nimport \"./navigation.css\";\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n    width: 62,\r\n    height: 34,\r\n    padding: 7,\r\n    '& .MuiSwitch-switchBase': {\r\n      margin: 1,\r\n      padding: 0,\r\n      transform: 'translateX(6px)',\r\n      '&.Mui-checked': {\r\n        color: '#fff',\r\n        transform: 'translateX(22px)',\r\n        '& .MuiSwitch-thumb:before': {\r\n          backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n            '#fff',\r\n          )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n        },\r\n        '& + .MuiSwitch-track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n        },\r\n      },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\r\n      width: 32,\r\n      height: 32,\r\n      '&:before': {\r\n        content: \"''\",\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        left: 0,\r\n        top: 0,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          '#fff',\r\n        )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n      },\r\n    },\r\n    '& .MuiSwitch-track': {\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n      borderRadius: 20 / 2,\r\n    },\r\n}));\r\n\r\nconst Navigation = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    const isDark = useContext(IsDark);\r\n    const setIsDark = useContext(SetIsDark);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const updateNavClick = () => {\r\n        setIsOpen(prev => !prev);\r\n    };\r\n\r\n    return(\r\n        <>\r\n\r\n            <div className=\"mb-5 navigation-container\">\r\n                <Navbar \r\n                    color={isDark ? \"dark\" : \"light\"}\r\n                    dark={isDark}\r\n                    light={!isDark}\r\n                    expand=\"false\"\r\n                    className=\"one-row\"\r\n                >\r\n                    <NavbarBrand className=\"me-auto\">\r\n                        <div className=\"navbarHead\" onClick={() => navigate('/')}>\r\n                            SANGEET\r\n                        </div>\r\n                    </NavbarBrand>\r\n                    <MaterialUISwitch sx={{ m: 1 }} checked={isDark} onClick={setIsDark} />\r\n                    <NavbarToggler className=\"me-2\" onClick={updateNavClick} />\r\n                    \r\n                    <Offcanvas isOpen={isOpen} className=\"offcanvas-tag\" scrollable={false}\r\n                        toggle={updateNavClick} direction=\"end\">\r\n                        <OffcanvasHeader toggle={updateNavClick} className=\"custom-close-icon-canvas-header\" />\r\n                        <OffcanvasBody className=\"navbar-menu-links\">\r\n                            <Nav className=\"ms-auto\" navbar>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate(\"/\")}>\r\n                                        <FontAwesomeIcon icon={faHome} /> \r\n                                        <span className=\"extra-spacing\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faMusic} /> \r\n                                        <span className=\"extra-spacing\" /> Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faBell} /> \r\n                                        <span className=\"extra-spacing\" /> Notifications\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faSignInAlt} /> \r\n                                        <span className=\"extra-spacing\" /> Login / SignUp \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </OffcanvasBody>\r\n                    </Offcanvas>\r\n                </Navbar>\r\n            </div>\r\n            <Container className=\"pt-5 pb-5\"/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import axios from \"axios\";\r\nimport Slider from \"react-slick\";\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useEffect, useReducer, useState, useContext } from \"react\";\r\n\r\nimport { apiLinks } from '../connection.config';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\nimport { LoadAudio, PlayerContext, PlayPause, Playing, IsDark } from \"../App\";\r\n\r\nimport \"./Home.css\";\r\n\r\nconst musicList = {};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'FETCH_SUCCESS':\r\n        case \"FETCH_CACHE\":\r\n            const artistData = action.artistData.filter(item => item.show === true);\r\n            const genreData = action.genreData.filter(item => item.show === true);\r\n            const categoryData = action.categoryData.filter(item => item.show === true);\r\n            const term = action.message.filter(item => item.show === true);\r\n            \r\n            let genreList = {};\r\n            let artistList = {};\r\n            let albumList = {};\r\n            let categoryList = {};\r\n            let musicList = action.message;\r\n\r\n            for(var i=0; i < term.length; i++){\r\n\r\n                // Filtering genre data\r\n                let list = term[i].genre;\r\n                for(var j=0; j < list.length; j++){\r\n                    const data = list[j];\r\n                    if(genreData.find(genre => genre.type === data)){\r\n                        if(genreList[data] === undefined){\r\n                            genreList[data] = [term[i]];\r\n                        }\r\n                        else{\r\n                            genreList[data].push(term[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Filtering album data\r\n                list = term[i].albumTitle;\r\n                if(albumList[list] === undefined){\r\n                    albumList[list] = [term[i]];\r\n                }\r\n                else{\r\n                    albumList[list].push(term[i]);\r\n                }\r\n\r\n                // Filtering artist data\r\n                list = term[i].artists;\r\n                for(j=0; j < list.length; j++){\r\n                    const data = list[j];\r\n                    if(artistData.find(artist => artist.name === data)){\r\n                        if(artistList[data] === undefined){\r\n                            artistList[data] = [term[i]];\r\n                        }\r\n                        else{\r\n                            artistList[data].push(term[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Filtering category data\r\n                list = term[i].category;\r\n                for(j=0; j < list.length; j++){\r\n                    const data = list[j];\r\n                    if(categoryData.find(category => category.type === data)){\r\n                        if(categoryList[data] === undefined){\r\n                            categoryList[data] = [term[i]];\r\n                        }\r\n                        else{\r\n                            categoryList[data].push(term[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const list = {\r\n                genreList,\r\n                albumList,\r\n                artistList,\r\n                categoryList,\r\n                musicList\r\n            };\r\n\r\n            // console.log(list);\r\n\r\n            return list;\r\n\r\n        case 'FETCH_ERROR':\r\n            // Error(action.message);\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 8,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n            breakpoint: 1500,\r\n            settings: {\r\n              slidesToShow: 7,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1350,\r\n            settings: {\r\n              slidesToShow: 6,\r\n            }\r\n        },\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 850,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Home = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const playing = useContext(Playing);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [mouseId, setMouseId] = useState(0);\r\n\r\n    const [list, dispatch] = useReducer(reducer, musicList);\r\n\r\n    // console.log(loader, list);\r\n\r\n    const handleStateChange = (e) => {\r\n        const event = {\r\n            ...e,\r\n            code: \"Space\",\r\n            preventDefault : () => {}\r\n        };\r\n        playPauseState(event);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n\r\n        const getAudioData = async() => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllAudioDetails, {\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    dispatch({  type: 'FETCH_SUCCESS', \r\n                                message: response.data.message,\r\n                                artistData: response.data.artistData,\r\n                                genreData: response.data.genreData,\r\n                                categoryData: response.data.categoryData\r\n                            });\r\n                    if(window.localStorage){\r\n                        window.localStorage.setItem(\"Song Data\", JSON.stringify({\r\n                            message: response.data.message,\r\n                            artistData: response.data.artistData,\r\n                            genreData: response.data.genreData,\r\n                            categoryData: response.data.categoryData\r\n                        }));\r\n                    }\r\n                }\r\n                else{\r\n                    dispatch({ type: 'FETCH_ERROR', message: response.data.message });\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                dispatch({ type: 'FETCH_ERROR', message: err.message });\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        if(window?.localStorage?.getItem(\"Song Data\") && Object.keys(currentSong).length !== 0){\r\n            const prevData = JSON.parse(window.localStorage.getItem(\"Song Data\"));\r\n            if(Object.keys(prevData).length)\r\n                dispatch({type: \"FETCH_CACHE\", ...prevData})\r\n            else\r\n                getAudioData();\r\n        }\r\n        else\r\n            getAudioData();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [currentSong]);\r\n\r\n    // console.log(list);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <Container key='category-container' fluid>\r\n                {list.categoryList ?  \r\n                    Object.keys(list.categoryList).map(catList => {\r\n                        let ll = [];\r\n                        if(catList === 'New Releases')\r\n                            ll = list.categoryList[catList].sort((a, b) => {\r\n                                let keyA = new Date(a.timeStamp);\r\n                                let keyB = new Date(b.timeStamp);\r\n                                if(keyA < keyB) return 1;\r\n                                else if(keyA > keyB) return -1;\r\n                                else return 0;\r\n                            });\r\n                        else\r\n                            ll = list.categoryList[catList];\r\n\r\n                        return (\r\n                            <Container key={catList} className=\" mt-3 slider-container\" fluid>\r\n                                <h2 className={`category-list-heading ${isDark ? \"dark-heading\" : \"light-heading\"}`} title={catList}>{catList}</h2>\r\n                                <Slider {...settings}>\r\n                                    {ll.map(item => {\r\n                                        return (\r\n                                            <div key={item.id} className={`mt-3 mb-3 custom-card-items song-list-items ${isDark ? \"dark-card\" : \"light-card\"}`}\r\n                                                onMouseEnter={() => setMouseId(item.id)}\r\n                                                onMouseLeave={() => setMouseId(0)}\r\n                                            >\r\n                                                <div className=\"card-image-container\">\r\n                                                    \r\n                                                    <div className={`hide-hover-play-icon ${mouseId === item.id || item.id === currentSong.id ? \r\n                                                                                                \"show\": null }`}\r\n                                                        title={`Play ${item.musicTitle}`}\r\n                                                    >\r\n                                                        {\r\n                                                            item.id === currentSong.id && playing ?\r\n                                                            <PauseIcon className=\"play-icon-image-overlay\" onClick={handleStateChange} /> :\r\n                                                            <PlayArrowIcon className=\"play-icon-image-overlay\" \r\n                                                                onClick={(e) => item.id === currentSong.id ? handleStateChange(e): loadAudio(ll, item, e)}\r\n                                                            />  \r\n                                                        }\r\n                                                    </div>\r\n                                    \r\n                                                    <img \r\n                                                        src={apiLinks.getImage + item.musicImageKey} \r\n                                                        alt={item.musicTitle} \r\n                                                        className=\"card-image\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"card-text-container\">\r\n                                                    <div className=\"card-text\">\r\n                                                        <h5 className={`pt-3 song-name ${isDark ? \"hover-dark\" : \"hover-light\"}`} title={`Play ${item.musicTitle}`}>\r\n                                                            <span style={{cursor: \"pointer\"}} \r\n                                                                onClick={(e) => loadAudio(ll, item, e)} >\r\n                                                                {item.musicTitle}\r\n                                                            </span>\r\n                                                        </h5>\r\n                                                        <h6 title={`Watch ${item.albumTitle}`} className={`album-title ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                                            <Link to={`/album/${item.albumTitle}`} className={`album-title ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                                                {item.albumTitle}\r\n                                                            </Link>\r\n                                                        </h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </Slider>\r\n                            </Container>\r\n                        );\r\n                    })\r\n                : <React.Fragment />\r\n                }\r\n            </Container>\r\n            <Container key=\"artist-container\" className=\"mt-5\" fluid>\r\n                { list.artistList ? \r\n                    <Container className=\"slider-container\" fluid>\r\n                        <h2 className={`category-list-heading ${isDark ? \"dark-heading\" : \"light-heading\"}`} title=\"Artists\">Artists</h2>\r\n                        <Slider {...settings}>\r\n                        { Object.keys(list.artistList).map((artist, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container d-flex\">\r\n                                        <img \r\n                                            src={apiLinks.getArtistImgFromName + artist} \r\n                                            alt={artist} \r\n                                            className={`artist-card-image ${isDark ? \"dark\" : \"light\"}`}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container mt-0\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className={`pt-3 pb-3 artist-name ${isDark ? \"hover-dark\" : \"hover-light\"}`} title={artist}>\r\n                                                <Link to={`/artist/${artist}`} className={`artist-name ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3 mt-5\" fluid />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport \"./Error.css\";\r\n\r\nconst Error = () => {\r\n  return(\r\n      <div>\r\n          <h1>Error</h1>\r\n      </div>\r\n  );  \r\n};\r\n\r\nexport default Error;","// for song list\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useContext } from \"react\";\r\nimport PlayCircle from \"@mui/icons-material/PlayCircle\";\r\nimport PauseCircle from \"@mui/icons-material/PauseCircle\";\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\n\r\nimport { CalculateTimeContext, SongList } from \"../../pages/Album\";\r\nimport { PlayerContext, PlayPause, Playing, LoadAudio, IsDark } from \"../../App\";\r\n\r\nimport \"./body.css\";\r\n\r\nconst Body = (props) => {\r\n    \r\n    const isDark = useContext(IsDark);\r\n    const paused = useContext(Playing);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentPlayer = useContext(PlayerContext);\r\n    const calculateTimeContext = useContext(CalculateTimeContext);\r\n\r\n    const [playId, setPlayId] = useState(0);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const updatePlayId = (value) => {\r\n        setPlayId(value);\r\n    };\r\n\r\n    const updatePlayPause = (event) => {\r\n        const e = {\r\n            ...event, \r\n            code: \"Space\",\r\n            preventDefault: () => {}\r\n        };\r\n\r\n        playPauseState(e);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container> \r\n                <div className=\"song-list\">\r\n                    {\r\n                        songList.map((song, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className={`table-row-${isDark ? \"dark\" : \"light\"}`}\r\n                                        key={song.id}\r\n                                        style={currentPlayer.id && currentPlayer.id === song.id ? {color: isDark ? \"#eee\" : \"#111\"}: null}\r\n                                        onMouseEnter={(e) => {updatePlayId(song.id)}}\r\n                                        onMouseLeave={(e) => {updatePlayId(0)}}\r\n                                        onClick={e => loadAudio(songList, song, e)}\r\n                                    >\r\n                                        <div className=\"srno-title\">\r\n                                            <div className=\"srno\">\r\n                                                {\r\n                                                    currentPlayer.id && currentPlayer.id === song.id ?\r\n                                                    <span\r\n                                                        onMouseEnter={() => setPlaying(true)}\r\n                                                        onMouseLeave={() => setPlaying(false)}\r\n                                                    > \r\n                                                        {\r\n                                                            !paused ?\r\n                                                                <PlayCircle \r\n                                                                    onClick = {e => updatePlayPause(e)}\r\n                                                                /> :\r\n                                                                playing ?\r\n                                                                    <PauseCircle \r\n                                                                        onClick = {e => updatePlayPause(e)}\r\n                                                                    />:\r\n                                                                    <EqualizerIcon />\r\n                                                        }\r\n                                                    </span>:\r\n                                                    playId === song.id ? \r\n                                                        <PlayCircle /> :\r\n                                                        index+1\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"title\">\r\n                                                <div className=\"music-title\">\r\n                                                    {song.musicTitle}\r\n                                                </div>\r\n                                                <div className=\"d-flex custom-artists\">\r\n                                                    {\r\n                                                        song.artists?.map((art, index) => {\r\n                                                            return(\r\n                                                                <div className=\"\" key={index}>\r\n                                                                    <span className=\"song-list-artist\">\r\n                                                                        {\r\n                                                                            art === \"Various Artists\" ? \r\n                                                                                art : \r\n                                                                                <Link to={`/artist/${art}`}>\r\n                                                                                        {art}\r\n                                                                                </Link>\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                    <span className=\"song-list-artist-separation\">\r\n                                                                        {song.artists.length - 1 > index ? \",\": \"\"}&nbsp;\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"duration\">\r\n                                                {song.duration ? calculateTimeContext(song.duration) : '--:--'}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        index < songList.length - 1 ? (\r\n                                            <div className=\"custom-bottom-border\" key={index} />\r\n                                        ) : <React.Fragment />\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;","import { Container } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useContext } from \"react\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\nimport { CalculateTimeContext, SongList, Artists, Duration } from \"../../pages/Album\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const artists = useContext(Artists);\r\n    const songList = useContext(SongList);\r\n    const totalDuration = useContext(Duration);\r\n    const calculateTotalDuration = useContext(CalculateTimeContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                <div className=\"album-container\">\r\n                    <div className={`album-image-container ${isDark ? \"dark\" : \"light\"}`}>\r\n                        <img \r\n                            className=\"album-image\"\r\n                            src={apiLinks.getImage + songList[0]?.musicImageKey} \r\n                            alt={songList[0]?.albumTitle} />\r\n                    </div>\r\n                    <div className=\"album-details\">\r\n                        <div className=\"album-heading\">\r\n                            Album\r\n                        </div>\r\n                        <div className=\"album-name\">\r\n                            {songList[0]?.albumTitle}\r\n                        </div>\r\n                        <div className=\"album-artists\">\r\n                            {\r\n                                artists.length > 2 ? \r\n                                    \"Various Artists\" : \r\n                                    artists?.map((artist, idx) => {\r\n                                        return (\r\n                                            <span key={idx}>\r\n                                                <Link className={`artist-${isDark ? \"dark\" : \"light\"}`} to={`/artist/${artist}`}>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                                {idx < (artists.length - 1) ? \" , \" : \" \"}\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                            } &nbsp; <CircleIcon style={{ fontSize: '.5rem' }} />&nbsp; { calculateTotalDuration(totalDuration) }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","// for related artists\r\nimport Slider from 'react-slick';\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { IsDark } from '../../App';\r\nimport { Artists } from \"../../pages/Album\";\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./footer.css\";\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n          breakpoint: 1200,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 991,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Footer = (props) => {\r\n\r\n    const isDark = useContext(IsDark);\r\n    let artistList = useContext(Artists);\r\n\r\n    artistList = artistList?.filter(artist => artist !== \"Various Artists\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container key=\"artist-container\" className=\"mt-5\">\r\n                { artistList.length ? \r\n                    <Container className=\"slider-container\">\r\n                        <h2 className={`category-list-heading ${isDark ? \"dark\" : \"light\"}`} title=\"Artists\">Album Artists</h2>\r\n                        <Slider {...settings}>\r\n                        { artistList.map((artist, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container\">\r\n                                        <img \r\n                                            src={apiLinks.getArtistImgFromName + artist} \r\n                                            alt={artist} \r\n                                            className=\"artist-card-image\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className=\"pt-3 pb-3 artist-name\" title={artist}>\r\n                                                <Link to={`/artist/${artist}`} className={`artist-name ${isDark ? \"dark\" : \"light\"}`}>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3\" fluid />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import { Bounce, toast } from 'react-toastify';\r\n\r\nexport const Success = (message, autoClose=3000) => {\r\n\r\n    toast.success(message, {\r\n        position: \"top-right\",\r\n        autoClose: autoClose,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnFocusLoss: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined\r\n    });\r\n};\r\n\r\nexport const Error = (message, autoClose=5000) => {\r\n\r\n    toast.error(message, {\r\n        position: \"top-right\",\r\n        autoClose: autoClose,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnFocusLoss: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        transition: Bounce\r\n    });\r\n};\r\n\r\n","import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport Body from \"../components/Album/body\";\r\nimport Header from \"../components/Album/header\";\r\nimport Footer from \"../components/Album/footer\";\r\nimport { apiLinks } from \"../connection.config\";\r\nimport { Error } from \"../components/Notification/Notification\";\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\n\r\nimport \"./album.css\";\r\n\r\nexport const Artists = React.createContext();\r\nexport const SongList = React.createContext();\r\nexport const Duration = React.createContext();\r\nexport const CalculateTimeContext = React.createContext();\r\n\r\nconst Album = (props) => {\r\n    const params = useParams();\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [songList, setSongList] = useState([]);\r\n    const [artists, setArtists] = useState([]); \r\n    const [totalDuration, setTotalDuration] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        const getAlbum = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAlbumDetails+params.albumName, {\r\n                    headers: {\r\n                        'content-type': \"application/json\"\r\n                    },\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const artist = [...new Set(response.data.message.map((songs) => songs.artists).flat())];\r\n                    const duration = response.data.message.reduce((partial_sum, a) => partial_sum + a.duration, 0);\r\n                    \r\n                    setArtists(artist);\r\n                    setTotalDuration(duration);\r\n                    setSongList(response.data.message);\r\n                    abortController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                // Error(err.message);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        getAlbum();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [params]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <CalculateTimeContext.Provider value={calculateSongTime}>\r\n                <SongList.Provider value={songList}>\r\n                    <Artists.Provider value={artists}>\r\n                        <Duration.Provider value={totalDuration}>\r\n                            <Header />\r\n                            <Body />\r\n                            <Footer />\r\n                        </Duration.Provider>\r\n                    </Artists.Provider>\r\n                </SongList.Provider>\r\n            </CalculateTimeContext.Provider>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Album;\r\n","import axios from \"axios\";\r\n\r\nimport { apiLinks } from \"../connection.config\";\r\n\r\nconst publicVapidKey = process.env.REACT_APP_PUBLIC_VAPID_KEY;\r\nconst urlBase64ToUint8Array = (base64String) => {\r\n    // console.log(base64String);\r\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/-/g, '+')\r\n      .replace(/_/g, '/');\r\n  \r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n  \r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n};\r\n\r\nexport const Subscribe = async () => {\r\n    if (!('serviceWorker' in navigator)) return;\r\n  \r\n    const registration = await navigator.serviceWorker.ready;\r\n  \r\n    // Subscribe to push notifications\r\n    const subscription = await registration.pushManager.subscribe({\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\r\n    });\r\n    \r\n    const existingEndPoint = window?.localStorage?.getItem(\"endpoint\");\r\n\r\n    const today = new Date().toISOString();\r\n    \r\n    await axios.post(apiLinks.subscribe, \r\n        JSON.stringify({subscription: subscription, today: today, endpoint: existingEndPoint}), {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        });\r\n        \r\n    if(window.localStorage){\r\n        window.localStorage.setItem(\"endpoint\", subscription.endpoint);\r\n    }\r\n};\r\n\r\nexport const Unsubscribe = async () => {\r\n    if(window.localStorage){\r\n\r\n        const endpoint = window.localStorage.getItem(\"endpoint\");\r\n        if(endpoint){\r\n            await axios.delete(apiLinks.unsubscribe, {\r\n                data: {\r\n                    endpoint: endpoint\r\n                }\r\n            });\r\n\r\n            window.localStorage.removeItem(\"endpoint\");\r\n        }\r\n    }\r\n};\r\n\r\nexport const Broadcast = async () => {\r\n    await axios.get(apiLinks.broadcast, {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n        },\r\n    });\r\n};\r\n\r\n","import React from 'react';\r\nimport { Row, Col, Label } from 'reactstrap';\r\nimport { TextField } from '@mui/material'\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\n\r\nconst TextInput = (props) => {\r\n\r\n    const label = {\r\n        inputProps: {\r\n            'aria-label': \"Favourite Check\"\r\n        }\r\n    };\r\n\r\n    const onCheckedChange = (event) => {\r\n        props.onCheckBoxChange(event.target.checked);\r\n    };\r\n\r\n    const onValueChange = (event) => {\r\n        props.onChange(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Row className='music-detail-fields'>\r\n            <Col className=\"mt-1 mb-1\" xs=\"5\">\r\n                <Label className=\"label-styling\" style={{justifyContent: \"flex-end\"}} for={props.id}>\r\n                    {\r\n                        props.required ? \r\n                        <>\r\n                            {props.labelName} <span style={{color: \"#f00\", alignSelf: \"flex-start\"}}>*</span>\r\n                        </> : \r\n                        props.labelName\r\n                    }\r\n                </Label>\r\n            </Col>\r\n            <Col className=\"mt-1 mb-1\" xs={props.check ? \"6\" : \"7\"}>\r\n                <TextField \r\n                    value={props.value}\r\n                    onChange={onValueChange}\r\n                    className=\"music-input-detail\"\r\n                    id={`standard-required ${props.id}`}\r\n                    label={props.label}\r\n                    variant=\"standard\"\r\n                />\r\n            </Col>\r\n            {\r\n                props.check ?\r\n                <Col className='mt-1 mb-1' xs=\"1\">\r\n                    <Checkbox onChange={onCheckedChange} checked={props.checkedValue} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                </Col> :\r\n                <React.Fragment />\r\n            }\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst NewImageUpload = (props) => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"image-preview\">\r\n                <img \r\n                    className='image-preview-img' \r\n                    src={props.musicImgPath} \r\n                    alt={props.musicImgName} \r\n                />\r\n            </div>\r\n            <div className='image-upload-button'>\r\n                <div className='music-upload-space d-flex justify-content-center align-items-center'>\r\n                    <span className='music-image-title'>\r\n                        \" {props.musicImgName === \"\" ? \"Select Image\" : props.musicImgName} \"\r\n                    </span>\r\n                    {\r\n                        props.musicImgName === \"\" ? <React.Fragment /> : \r\n                        <Button title='Remove Image' close onClick={props.removeSelectedImage} />\r\n                    }\r\n                </div>\r\n                <div className='music-upload-space'>\r\n                    <input \r\n                        accept='image/*'\r\n                        type=\"file\" \r\n                        onChange={props.uploadMusicImage} \r\n                        ref={props.hiddenFileInput}\r\n                        style={{display: \"none\"}}\r\n                    />\r\n                    <Button \r\n                        onClick={props.handleClick}\r\n                        color='dark'\r\n                        outline={true}\r\n                    >\r\n                        Upload Image\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewImageUpload;","import React, {useRef, useState} from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport NewImageUpload from './newImageUpload';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from '../Notification/Notification';\r\n\r\nconst AddNewModal = (props) => {\r\n\r\n    const hiddenFileInput = useRef(null);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [name, setName] = useState('');\r\n    const [checkBoxChecked, setCheckBoxChecked] = useState(false);\r\n\r\n    const [artistImg, setArtistImg] = useState({});\r\n    const [artistImgName, setArtistImgName] = useState('');\r\n    const [artistImgPath, setArtistPath] = useState('/assets/images/artist-design.png');\r\n  \r\n    const handleClick = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n        \r\n    const uploadArtistImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setArtistImg(event.target.files);\r\n            setArtistImgName(event.target.files[0].name);\r\n            setArtistPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n\r\n    const removeSelectedImage = () => {\r\n        setArtistImg({});\r\n        setArtistImgName('');\r\n        setArtistPath('/assets/images/artist-design.png');\r\n    };\r\n\r\n    const setData = (response) => {\r\n        if( (props.tabId === 2 && props.id === '1') ||\r\n            (props.tabId === 3 && props.id === '2') ||\r\n            (props.tabId === 4 && props.id === '3')){\r\n                // props.setRows(prevData => [...prevData, ...(response.data.rowData)]);\r\n                if(props.tabId === 2){\r\n                    props.artistRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 3){\r\n                    props.genreRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 4){\r\n                    props.categoryRows.push(...(response.data.rowData));\r\n                }\r\n                else{\r\n                    Error(\"Unable to update search list by tabId\");\r\n                }\r\n            }\r\n        // else if(props.id === '1') props.updateTabId(2);\r\n        // else if(props.id === '2') props.updateTabId(3);\r\n        // else if(props.id === '3') props.updateTabId(4);\r\n        // else props.updateTabId(1);\r\n    };\r\n\r\n    const addDetail = async () => {\r\n        let controller = new AbortController();\r\n\r\n        try{\r\n\r\n            setLoader(true);\r\n            const names = name.split(',').map(nam => nam.trim());\r\n            \r\n            const formData = new FormData();\r\n            formData.append('names', names);\r\n            formData.append(\"show\", checkBoxChecked);\r\n            let response = {};\r\n\r\n            if(props.id === '1'){\r\n                formData.append('artistImg', artistImg[0]);\r\n                response = await axios.post(apiLinks.addArtists, formData, {\r\n                    signal: controller.signal\r\n                });\r\n            }\r\n            else if(props.id === '2'){\r\n                response = await axios.post(apiLinks.addGenre, {\r\n                    types: names,\r\n                    show: checkBoxChecked,\r\n                }, {\r\n                    signal: controller.signal,\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                response = await axios.post(apiLinks.addCategory, {\r\n                    types: names,\r\n                    show: checkBoxChecked,\r\n                }, {\r\n                    signal: controller.signal,\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n\r\n            if(Object.keys(response).length === 0 && response.constructor === Object){\r\n                const error = new Error();\r\n                error.message = \"Something went wrong, could add data now\";\r\n                throw error;\r\n            }\r\n            else{\r\n                if(response.data.code === 200){\r\n                    controller = null;\r\n                    Success(response.data.message);\r\n                    setData(response);\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n        \r\n        }\r\n        catch(err){\r\n            console.log(err.message, err);\r\n        }\r\n        finally{\r\n            controller?.abort();\r\n            setLoader(false);\r\n            props.toggle(false);\r\n        }\r\n    };\r\n\r\n    const removeDetail = () => {\r\n        setName('');\r\n        setCheckBoxChecked(false);\r\n        removeSelectedImage();\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            \r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n\r\n            <Modal\r\n                isOpen={true}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='lg'\r\n                toggle={() => props.toggle(false)}\r\n            >\r\n                <ModalHeader toggle={() => props.toggle(false)}>\r\n                    <span className='modal-header-title'>\r\n                        {props.header}\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {props.id === '1' ? \r\n                        <NewImageUpload \r\n                            musicImgName={artistImgName}\r\n                            musicImgPath={artistImgPath}\r\n                            removeSelectedImage={removeSelectedImage}\r\n                            uploadMusicImage={uploadArtistImage}\r\n                            hiddenFileInput={hiddenFileInput}\r\n                            handleClick={handleClick}\r\n                        /> : \r\n                        <React.Fragment />\r\n                    }\r\n                    <TextInput \r\n                        id={props.id}\r\n                        required\r\n                        check={true}\r\n                        labelName={props.id === '1' ? \"Add New Name\" : \"Add New Type\"}\r\n                        label={props.id === '1' ? \"Enter Artist Name\" : \"Enter Comma separated Types\"}\r\n                        value={name}\r\n                        onChange={setName}\r\n                        checkedValue={checkBoxChecked}\r\n                        onCheckBoxChange={setCheckBoxChecked}\r\n                    />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={addDetail}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeDetail}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddNewModal;\r\n","import React from 'react';\r\nimport { Row, Col, Label } from 'reactstrap';\r\nimport { InputLabel, Select, OutlinedInput, MenuItem, \r\n        Checkbox, ListItemText, FormControl} from '@mui/material';\r\n\r\nconst CheckBoxInput = (props) => {\r\n    \r\n    return (\r\n        <FormControl sx={{width: '100%'}}>\r\n            <Row className='music-detail-fields'>\r\n                <Col className=\"mt-2 mb-3\" xs=\"5\">\r\n                    <Label className=\"label-styling-checkbox\" style={{ justifyContent: \"flex-end\" }}\r\n                        for={props.id}>\r\n                        {props.labelName}\r\n                    </Label>\r\n                </Col>\r\n                <Col className=\"mt-2 mb-3\" xs=\"7\">\r\n                    <InputLabel \r\n                        id={`demo-multiple-checkbox-label ${props.id}`}\r\n                        className=\"customized-form-label\"\r\n                    >\r\n                        {props.label}\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-multiple-checkbox-label\"\r\n                        id=\"demo-multiple-checkbox\"\r\n                        multiple\r\n                        className=\"music-input-detail\"\r\n                        value={props.type}\r\n                        onChange={props.handleChange}\r\n                        input={<OutlinedInput label=\"Tag\" />}\r\n                        renderValue={(selected) => {\r\n                            if(selected.length === 0){\r\n                                return <em>Select Artist</em>;\r\n                            }\r\n                            return selected.join(', ');\r\n                        }}\r\n                        MenuProps={props.MenuProps}\r\n                    >\r\n                    {props.names.map((name) => (\r\n                        <MenuItem key={Math.floor(Math.random() * 10000 + 1)} value={name.name || name.type || name}>\r\n                            <Checkbox checked={props.type.indexOf(name.name || name.type || name) > -1} />\r\n                            <ListItemText primary={name.name || name.type || name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default CheckBoxInput;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport CheckBoxInput from './checkBoxInput';\r\nimport NewImageUpload from './newImageUpload';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n    style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n    },\r\n    },\r\n};\r\n\r\nconst NewMusicAdd = (props) => {\r\n\r\n    const [genreList, setGenreList] = useState([]);\r\n    const [artistList, setArtistList] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n\r\n    const {genre, category, musicName, artist, musicImgPath, musicImgName, addMusicWidget, hiddenFileInput, musicDuration,\r\n        hiddenMusicInput, uploadMusic, handleClick, handleChange, saveUploadMusic, handleMusicClick, fav, setFav,\r\n        uploadMusicImage, handleGenreChange, removeMusicDetails, removeSelectedSong, removeSelectedImage,\r\n        updateAddMusicWidget, handleCategoryChange, musicTitle, albumTitle, setMusicTitle, setAlbumTitle} = props;\r\n\r\n    useEffect(() => {\r\n\r\n        let genreController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let categoryController = new AbortController();\r\n\r\n        const getGenreList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setGenreList(data);\r\n                    genreController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setGenreList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setGenreList([]);\r\n            }\r\n        };\r\n        \r\n        const getArtistList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setArtistList(data);\r\n                    artistController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setArtistList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setArtistList([]);\r\n            }\r\n        };\r\n\r\n        const getCategoryList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setCategoryList(data);\r\n                    categoryController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setCategoryList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setCategoryList([]);\r\n            }\r\n        };\r\n\r\n        getGenreList();\r\n        getArtistList();\r\n        getCategoryList();\r\n\r\n        return () => {\r\n            genreController?.abort();\r\n            artistController?.abort();\r\n            categoryController?.abort();\r\n        };\r\n\r\n    }, []);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Modal\r\n                isOpen={addMusicWidget}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='xl'\r\n                toggle={updateAddMusicWidget}\r\n            >\r\n                <ModalHeader toggle={updateAddMusicWidget}>\r\n                    <span className='modal-header-title'>\r\n                        Add New Song\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <div className='music-details'>\r\n                                \r\n\r\n                                <TextInput \r\n                                    required\r\n                                    id=\"song-name\"\r\n                                    labelName=\"Song Name\"\r\n                                    label=\"Enter Song Name\"\r\n                                    check={true}\r\n                                    value={musicTitle}\r\n                                    onChange={setMusicTitle}\r\n                                    checkedValue={fav}\r\n                                    onCheckBoxChange={setFav}\r\n                                />\r\n                                <TextInput \r\n                                    id=\"album-name\"\r\n                                    labelName=\"Album Name\"\r\n                                    label=\"Enter Album Name\"\r\n                                    value={albumTitle}\r\n                                    onChange={setAlbumTitle}\r\n                                />\r\n\r\n                                <CheckBoxInput \r\n                                    id=\"artist-name\" labelName=\"Artist Name\"\r\n                                    label=\"Select Artist\" type={artist}\r\n                                    handleChange={handleChange} MenuProps={MenuProps}\r\n                                    names={artistList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"genre-name\" labelName=\"Genre Name\"\r\n                                    label=\"Select Genre\" type={genre}\r\n                                    handleChange={handleGenreChange} MenuProps={MenuProps}\r\n                                    names={genreList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"category-name\" labelName=\"Category Name\"\r\n                                    label=\"Select Category\" type={category}\r\n                                    handleChange={handleCategoryChange} MenuProps={MenuProps}\r\n                                    names={categoryList}\r\n                                />\r\n\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n\r\n                            <Row>\r\n                                <div className='music-upload-button'>\r\n                                    <div className='music-upload-detail d-flex justify-content-center align-items-center'>\r\n                                        <span className='music-image-title' style={{textAlign: \"center\"}}>\r\n                                            <div>\r\n                                                \" {musicName.trim().length === 0 ? \"Select File\" : musicName} \"\r\n                                            </div>\r\n                                            <div>\r\n                                                Duration: {musicDuration !== 0 ? calculateSongTime(musicDuration) : '00:00'}\r\n                                            </div>\r\n                                        </span>\r\n                                        {musicName.trim().length === 0 ? \r\n                                            <React.Fragment /> : \r\n                                            <Button close title='Remove song' onClick={removeSelectedSong}/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className='music-upload-detail'>\r\n                                        <input \r\n                                            type=\"file\" \r\n                                            accept='audio/*'\r\n                                            onChange={uploadMusic} \r\n                                            ref={hiddenMusicInput}\r\n                                            style={{display: \"none\"}}\r\n                                        />\r\n                                        <Button \r\n                                            onClick={handleMusicClick}\r\n                                            color='dark'\r\n                                            outline={true}\r\n                                        >\r\n                                            Upload Song\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Row>\r\n\r\n                            <NewImageUpload \r\n                                musicImgName={musicImgName}\r\n                                musicImgPath={musicImgPath}\r\n                                removeSelectedImage={removeSelectedImage}\r\n                                uploadMusicImage={uploadMusicImage}\r\n                                hiddenFileInput={hiddenFileInput}\r\n                                handleClick={handleClick}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={saveUploadMusic}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeMusicDetails}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewMusicAdd;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'type', label: 'Genre Type', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst GenreTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n  \r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminGenreFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                              : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? (`${(rowsPerPage*page) + (index+1)}.`) : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editGenre(row.id, 'genre')} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default GenreTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'name', label: 'Artist Name', minWidth: 150, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst ArtistsTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminArtistFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editArtist(row.id, \"artist\")} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ArtistsTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: \"Sr. No.\", minWidth: 80, align: \"center\" },\r\n  { id: 'musicTitle', label: 'Music Name', minWidth: 170 },\r\n  { id: 'albumTitle', label: 'Album Name', minWidth: 130 },\r\n  { id: 'artists', label: 'Artists', minWidth: 70 },\r\n  { id: 'genre', label: 'Genre', minWidth: 70 },\r\n  { id: 'category', label: 'Category', minWidth: 70 },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nexport default function StickyHeadTable(props) {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminMusicFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className={`admin-table-content admin-table-heading ${isDark ? \"dark\" : \"light\"}`}\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell\r\n                  className={`admin-table-content admin-table-heading ${isDark ? \"dark\" : \"light\"}`}\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className={`admin-table-content admin-table-heading ${isDark ? \"dark\" : \"light\"}`}\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                        let value;\r\n                        if(column.id !== 'srno')\r\n                          value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div key={item} className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === \"srno\" ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.floor(Math.random() * 10000 + 1)} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editRow(row.id)} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.floor(Math.random() * 10000 + 1)} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'type', label: 'Category Type', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst CategoryTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminCategoryFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editCategory(row.id, 'category')} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default CategoryTable;\r\n","import React from 'react';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\nexport const DeleteWarning = (props) => {\r\n\r\n    return (\r\n        <Modal \r\n            centered={true}\r\n            scrollable={false}\r\n            backdrop\r\n            isOpen={true}\r\n            toggle={() => props.toggle()}\r\n        >   \r\n            <ModalHeader \r\n                toggle={() => props.toggle()}\r\n            >\r\n                Warning\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                Are you sure to delete \"{props.musicTitle}\" ?\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    outline\r\n                    onClick={() => props.deleteRow()}\r\n                    color=\"success\"\r\n                >\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                        Confirm <DoneIcon /> \r\n                    </div>\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};","import React from 'react';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\n\r\nimport { apiLinks } from '../../connection.config';\r\n\r\nconst EditImageUpload = (props) => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"image-preview\">\r\n                <img \r\n                    className='image-preview-img' \r\n                    src={props.imageKey && (apiLinks.getImage + props.imageKey)} \r\n                    alt={props.musicImgName} \r\n                />\r\n            </div>\r\n            <div className='image-upload-button'>\r\n                <div className='music-upload-space'>\r\n                    <span className='music-image-title'>\r\n                        <ImageIcon /> &ensp; \" {props.imageKey === \"\" ? \"Select Image\" : props.imageKey} \"\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditImageUpload;","import axios from 'axios';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport PlayCircleIcon from '@mui/icons-material/PlayCircle';\r\nimport PauseCircleIcon from '@mui/icons-material/PauseCircle';\r\nimport StopCircleIcon from '@mui/icons-material/StopCircle';\r\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\r\n\r\nimport TextInput from './textInput';\r\nimport CheckBoxInput from './checkBoxInput';\r\nimport EditImageUpload from './editImageUpload';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from \"../Notification/Notification\";\r\nimport { SpinnerRotate } from \"../spinner/spinner-grow\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n    style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n    },\r\n    },\r\n};\r\n\r\n// let audioRef;\r\n\r\nconst EditExistingMusic = (props) => {\r\n    \r\n    const audioRef = useRef();\r\n    // const rangeRef = useRef();\r\n    // const animationRef = useRef();\r\n\r\n    // const [endTime, setEndTime] = useState(0);\r\n    // const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    const [load, setLoad] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [currentPaused, setCurrentPaused] = useState(false);\r\n\r\n    const [musicKey, setMusicKey] = useState(\"\");\r\n    const [musicImgKey, setMusicImgKey] = useState(\"\");\r\n\r\n    const {genre, category, artist, musicTitle, albumTitle, editMusicWidget, editId,\r\n            handleChange,  setMusicTitle, setLoader, updateRow, fav, setFav,\r\n            setAlbumTitle, handleGenreChange, handleCategoryChange, \r\n            updateEditMusicWidget } = props;\r\n\r\n    const [genreList, setGenreList] = useState([]);\r\n    const [artistList, setArtistList] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    \r\n    const closeWidget = () => {\r\n        // cancelAnimationFrame(animationRef.current);\r\n        updateEditMusicWidget();\r\n    };\r\n\r\n    // const calculateTime = (time) => {\r\n    //     if(time !== Infinity){\r\n    //         const minutes = Math.floor(time/60);\r\n    //         const returnMinutes = minutes >= 10 ? `${minutes}` : `0${minutes}`;\r\n    \r\n    //         const seconds = Math.floor(time%60);\r\n    //         const returnSeconds = seconds >= 10 ? `${seconds}` : `0${seconds}`;\r\n    \r\n    //         return `${returnMinutes}:${returnSeconds}`;\r\n    //     }\r\n    // };\r\n\r\n    const stopSong = () => {\r\n        \r\n        audioRef.current.pause();\r\n        audioRef.current.currentTime = 0;\r\n        \r\n        setPlaying(prev => !prev);\r\n        if(currentPaused)\r\n            setCurrentPaused(prev => !prev);\r\n    };\r\n\r\n    const pauseSong = () => {\r\n        if(currentPaused)\r\n            audioRef.current.play();\r\n        else\r\n            audioRef.current.pause();\r\n        setCurrentPaused(prev => !prev);\r\n    };\r\n\r\n    const updateSongState = async () => {\r\n        setPlaying(prev => !prev);\r\n        if(playing === false){\r\n            try{\r\n                setLoad(true);\r\n                // src={musicKey && (apiLinks.getAudio + musicKey)}\r\n                // audioRef.current.src = apiLinks.getAudio + musicKey;\r\n                audioRef.current.play();\r\n                audioRef.current.onended = () => {\r\n                    setCurrentPaused(prev => !prev);\r\n                    setPlaying(prev => !prev);\r\n                }\r\n                // animationRef.current = requestAnimationFrame(whilePlaying);\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured while fetching audio\", err);\r\n                Error(err.message);\r\n            }\r\n            finally{\r\n\r\n                if(audioRef.current){\r\n                    audioRef.current.oncanplaythrough  = () => {\r\n                        console.log(audioRef.current.duration);\r\n                        \r\n                        // const secs = Math.floor(audioRef.current.duration);\r\n                        // rangeRef.current.max = secs;\r\n                        // setEndTime(secs);\r\n                        setLoad(false);\r\n                    }\r\n\r\n                    if(!(audioRef.current.paused) && audioRef.current.readyState > 0)\r\n                        setLoad(false);\r\n                }\r\n\r\n            }\r\n        }\r\n        else{\r\n            audioRef.current.pause();\r\n            // cancelAnimationFrame(animationRef.current);\r\n        }\r\n\r\n    };\r\n\r\n    const saveEditFile = async () => {\r\n\r\n        try{\r\n            setLoader(true);\r\n            \r\n            const today = new Date().toISOString();\r\n            const formData = {\r\n                \"musicTitle\": musicTitle,\r\n                \"albumTitle\": albumTitle,\r\n                \"artist\": JSON.stringify(artist),\r\n                \"genre\": JSON.stringify(genre),\r\n                \"category\": JSON.stringify(category),\r\n                \"date\": today,\r\n                \"show\": fav\r\n            };\r\n\r\n            const response = await axios.put(apiLinks.updateAdminData+editId, formData, {\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                }\r\n            });\r\n            \r\n            if(response.data.code === 200){\r\n                updateRow(response.data.data);\r\n                Success(response.data.message);\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n\r\n            // console.log(response.data);\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error Occured while updating data\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n            closeWidget();\r\n        }\r\n\r\n    };\r\n\r\n    // const changePlayerCurrentTime = () => {\r\n    //     rangeRef.current.style.setProperty('--seek-before-width', `${(Number(rangeRef.current.value) / endTime) * 100}%`);\r\n    //     setCurrentTime(rangeRef.current.value);\r\n    // };\r\n\r\n    // const changeRange = async (event) => {\r\n    //     try{\r\n    //         rangeRef.current.value = event.target.value;     \r\n    //         audioRef.current.src = apiLinks.getAudio + musicKey;\r\n    //         audioRef.current.play();\r\n    //         audioRef.current.addEventListener('canplay', () => {\r\n    //             audioRef.current.currentTime = parseInt(event.target.value);\r\n    //         });\r\n    //         changePlayerCurrentTime();\r\n    //     }\r\n    //     catch(err){\r\n    //         console.log(\"An Error Occured\", err.message);\r\n    //     }\r\n    // };\r\n\r\n    // const whilePlaying = () => {\r\n        // rangeRef.current.value = audioRef.current.currentTime;\r\n        // changePlayerCurrentTime();\r\n        // animationRef.current = requestAnimationFrame(whilePlaying);\r\n\r\n    // };\r\n\r\n    useEffect(() => {\r\n\r\n        let imgFileController = new AbortController();\r\n        let audioFileController = new AbortController();\r\n\r\n        const getImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getImageKey+editId, {\r\n                    signal: imgFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.musicImageKey);\r\n                    imgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        getImageFileKey();\r\n\r\n        const getAudioFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAudioKey+editId, {\r\n                    signal: audioFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicKey(response.data.message.musicKey);\r\n                    audioFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        getAudioFileKey();\r\n\r\n        return () => {\r\n            imgFileController?.abort();\r\n            audioFileController?.abort();\r\n        }\r\n\r\n    }, [editId]);\r\n\r\n    useEffect(() => {\r\n\r\n        let genreController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let categoryController = new AbortController();\r\n\r\n        const getGenreList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.type);\r\n                    setGenreList(data);\r\n                    genreController =  null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setGenreList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setGenreList([]);\r\n            }\r\n        };\r\n        \r\n        const getArtistList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.name);\r\n                    setArtistList(data);\r\n                    artistController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setArtistList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setArtistList([]);\r\n            }\r\n        };\r\n\r\n        const getCategoryList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.type);\r\n                    setCategoryList(data);\r\n                    categoryController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setCategoryList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setCategoryList([]);\r\n            }\r\n        };\r\n\r\n        getGenreList();\r\n        getArtistList();\r\n        getCategoryList();\r\n\r\n        return () => {\r\n            genreController?.abort();\r\n            artistController?.abort();\r\n            categoryController?.abort();\r\n        };\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Modal\r\n                isOpen={editMusicWidget}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='xl'\r\n                toggle={closeWidget}\r\n            >\r\n                <ModalHeader toggle={closeWidget}>\r\n                    <span className='modal-header-title'>\r\n                        Edit Existing Song\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <div className='music-details'>\r\n                                \r\n                                <TextInput \r\n                                    required\r\n                                    id=\"song-name\"\r\n                                    labelName=\"Song Name\"\r\n                                    label=\"Enter Song Name\"\r\n                                    value={musicTitle}\r\n                                    onChange={setMusicTitle}\r\n                                    // check={true}\r\n                                    checkedValue={fav}\r\n                                    onCheckBoxChange={setFav}\r\n                                />\r\n                                <TextInput \r\n                                    id=\"album-name\"\r\n                                    labelName=\"Album Name\"\r\n                                    label=\"Enter Album Name\"\r\n                                    value={albumTitle}\r\n                                    onChange={setAlbumTitle}\r\n                                />\r\n\r\n                                <CheckBoxInput \r\n                                    id=\"artist-name\" labelName=\"Artist Name\"\r\n                                    label=\"Select Artist\" type={artist}\r\n                                    handleChange={handleChange} MenuProps={MenuProps}\r\n                                    names={artistList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"genre-name\" labelName=\"Genre Name\"\r\n                                    label=\"Select Genre\" type={genre}\r\n                                    handleChange={handleGenreChange} MenuProps={MenuProps}\r\n                                    names={genreList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"category-name\" labelName=\"Category Name\"\r\n                                    label=\"Select Category\" type={category}\r\n                                    handleChange={handleCategoryChange} MenuProps={MenuProps}\r\n                                    names={categoryList}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n\r\n                            <Row>\r\n                                <div className='music-upload-button'>\r\n                                    <div className='music-upload-detail'>\r\n                                        <span className='music-image-title' style={{textAlign: \"center\"}}>\r\n                                            <LibraryMusicIcon /> &ensp; \" {props.musicTitle+\".mp3\"} \"\r\n                                            <span \r\n                                                className='pl-3 existing-music-play-container' \r\n                                            >\r\n                                                {\r\n                                                    playing ?\r\n                                                        (\r\n                                                            load ? \r\n                                                                <SpinnerRotate \r\n                                                                    size=\"sm\"\r\n                                                                    color=\"dark\"\r\n                                                                /> : \r\n                                                                <>\r\n                                                                    {\r\n                                                                        currentPaused ? \r\n                                                                        <PlayCircleIcon title=\"Resume Playing\" onClick={pauseSong} /> :\r\n                                                                        <PauseCircleIcon title=\"Pause Playing\" onClick={pauseSong} />\r\n                                                                    }\r\n                                                                    <StopCircleIcon title=\"Stop Playing\" onClick={stopSong} />\r\n                                                                </> \r\n                                                        )\r\n                                                        :\r\n                                                        <PlayCircleIcon title=\"Play this Song\" onClick={updateSongState} />\r\n                                                }\r\n                                            </span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className='audio-duration'>\r\n                                        <audio ref={audioRef} \r\n                                            src={musicKey && (apiLinks.getAudio + musicKey)}\r\n                                        />\r\n                                        {/* <span className='durationTimer'>{calculateTime(currentTime)}</span>\r\n                                        <input \r\n                                            type=\"range\" \r\n                                            ref={rangeRef} \r\n                                            defaultValue={0}\r\n                                            // onChange={changeRange} \r\n                                            className='admin-audio-progressBar'\r\n                                        />\r\n                                        <span className='durationTimer'>{!isNaN(endTime) && calculateTime(endTime)}</span> */}\r\n                                    </div>\r\n                                </div>\r\n                            </Row>\r\n\r\n                            <EditImageUpload \r\n                                imageKey = {musicImgKey}\r\n                                musicImgName={musicTitle}\r\n                            />\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={saveEditFile}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditExistingMusic;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport EditImageUpload from './editImageUpload';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from '../Notification/Notification';\r\n\r\nconst EditExistingModal = (props) => {\r\n\r\n    const { editId, fav, setFav } = props;\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [name, setName] = useState(props.value || '');\r\n    const [musicImgKey, setMusicImgKey] = useState(\"\");\r\n\r\n    const setData = () => {\r\n\r\n        const data = {\r\n            id: props.editId,\r\n            type: name,\r\n            name: name,\r\n            show: fav\r\n        };\r\n        const editedRow = props.rows.filter(item => item.id !== props.editId);\r\n        props.setRows([data, ...editedRow]);\r\n\r\n    };\r\n\r\n    const addDetail = async () => {\r\n        try{\r\n            setLoader(true);\r\n            const names = name;\r\n            \r\n            const formData = {\r\n                'type': names,\r\n                'name': names,\r\n                'show': fav\r\n            };\r\n\r\n            let response = {};\r\n\r\n            if(props.id === '1'){\r\n                response = await axios.put(apiLinks.updateAdminArtist+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === '2'){\r\n                response = await axios.put(apiLinks.updateAdminGenre+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                response = await axios.put(apiLinks.updateAdminCategory+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n\r\n            if(Object.keys(response).length === 0 && response.constructor === Object){\r\n                const error = new Error();\r\n                error.message = \"Something went wrong, could add data now\";\r\n                throw error;\r\n            }\r\n            else{\r\n                if(response.data.code === 200){\r\n                    Success(response.data.message);\r\n                    setData();\r\n                    \r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n                props.toggle(false);\r\n            }\r\n        \r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const removeDetail = () => {\r\n        props.toggle(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let imgFileController = new AbortController();\r\n\r\n        const getImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getArtistImgKey+editId, {\r\n                    signal: imgFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.artistImgKey);\r\n                    imgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n        \r\n        if(props.id === '1'){\r\n            getImageFileKey();\r\n        }\r\n        \r\n        return () => imgFileController?.abort();\r\n\r\n    }, [editId, props.id]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            \r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n\r\n            <Modal\r\n                isOpen={true}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='lg'\r\n                toggle={() => props.toggle(false)}\r\n            >\r\n                <ModalHeader toggle={() => props.toggle(false)}>\r\n                    <span className='modal-header-title'>\r\n                        {props.header}\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {props.id === '1' ? \r\n                        <EditImageUpload \r\n                            imageKey = {musicImgKey}\r\n                            musicImgName={`${name}`}\r\n                        /> : \r\n                        <React.Fragment />\r\n                    }\r\n                    <TextInput \r\n                        id={props.id}\r\n                        required\r\n                        labelName={props.id === '1' ? \"Edit Name\" : \"Edit Type\"}\r\n                        label={props.id === '1' ? \"Enter Artist Name\" : \"Enter Type\"}\r\n                        value={name}\r\n                        onChange={setName}\r\n                        // check={true}\r\n                        checkedValue={fav}\r\n                        onCheckBoxChange={setFav}\r\n                    />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={addDetail}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeDetail}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditExistingModal;\r\n","import Switch from '@mui/material/Switch';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport { Navbar, NavItem, Nav, NavbarToggler, NavbarBrand, NavLink,\r\n        Offcanvas, OffcanvasHeader, OffcanvasBody, Container } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faMusic, faBell, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { IsDark, SetIsDark } from \"../../../App\";\r\n\r\nimport \"./admin-navigation.css\";\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n    width: 62,\r\n    height: 34,\r\n    padding: 7,\r\n    '& .MuiSwitch-switchBase': {\r\n      margin: 1,\r\n      padding: 0,\r\n      transform: 'translateX(6px)',\r\n      '&.Mui-checked': {\r\n        color: '#fff',\r\n        transform: 'translateX(22px)',\r\n        '& .MuiSwitch-thumb:before': {\r\n          backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n            '#fff',\r\n          )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n        },\r\n        '& + .MuiSwitch-track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n        },\r\n      },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\r\n      width: 32,\r\n      height: 32,\r\n      '&:before': {\r\n        content: \"''\",\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        left: 0,\r\n        top: 0,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          '#fff',\r\n        )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n      },\r\n    },\r\n    '& .MuiSwitch-track': {\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n      borderRadius: 20 / 2,\r\n    },\r\n}));\r\n\r\nconst AdminNavigation = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    const isDark = useContext(IsDark);\r\n    const setIsDark = useContext(SetIsDark);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const updateNavClick = () => {\r\n        setIsOpen(prev => !prev);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className=\"mb-5 admin-Navigation-container\">\r\n                <Navbar\r\n                    color={isDark ? \"dark\" : \"light\"}\r\n                    dark={isDark}\r\n                    light={!isDark}\r\n                    expand=\"true\"\r\n                    sticky=\"true\"\r\n                    className=\"one-row\"\r\n                >\r\n                    <NavbarBrand onClick={() => navigate('/')} className=\"me-auto\">\r\n                        <div className=\"navbarHead\">\r\n                            SANGEET\r\n                        </div>\r\n                    </NavbarBrand>\r\n                    <MaterialUISwitch sx={{ m: 1 }} checked={isDark} onClick={setIsDark} />\r\n                    <NavbarToggler className=\"me-2\" onClick={updateNavClick} />\r\n                    \r\n                    <Offcanvas isOpen={isOpen} className=\"offcanvas-tag\" scrollable={false}\r\n                        toggle={updateNavClick} direction=\"end\">\r\n                        <OffcanvasHeader toggle={updateNavClick} className=\"custom-close-icon-canvas-header\"/>\r\n                        <OffcanvasBody className=\"navbar-menu-links\">\r\n                            <Nav className=\"ms-auto\" navbar>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate('/')}>\r\n                                        <FontAwesomeIcon icon={faHome} /> \r\n                                            <span className=\"extra-spacing\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faMusic} /> \r\n                                            <span className=\"extra-spacing\" /> Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faBell} /> \r\n                                            <span className=\"extra-spacing\" /> Notifications\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faSignInAlt} /> \r\n                                            <span className=\"extra-spacing\" /> Login / SignUp \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </OffcanvasBody>\r\n                    </Offcanvas>\r\n                </Navbar>\r\n            </div>\r\n            <Container className=\"pt-5 pb-5\"/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminNavigation;","import axios from 'axios';\r\nimport React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport {Container, Nav, NavItem, NavLink, TabContent, TabPane, Row, Col} from 'reactstrap';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { Backdrop } from '@mui/material';\r\nimport SpeedDial from '@mui/material/SpeedDial';\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport DomainIcon from '@mui/icons-material/Domain';\r\nimport CellTowerIcon from '@mui/icons-material/CellTower';\r\n\r\nimport * as serviceWorker from \"../client/index\";\r\nimport AddNewModal from '../components/Admin/addNewModal';\r\nimport NewMusicAdd from '../components/Admin/newMusicAdd';\r\n\r\nimport GenreTable from '../components/Tables/Genre-table';\r\nimport ArtistsTable from '../components/Tables/artists-table';\r\nimport StickyHeadTable from \"../components/Tables/music-table\";\r\nimport CategoryTable from '../components/Tables/category-table';\r\n\r\nimport { IsDark } from \"../App\";\r\nimport { apiLinks } from '../connection.config';\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport { DeleteWarning } from '../components/Warning/Warning';\r\nimport EditExistingMusic from '../components/Admin/editExistingMusic';\r\nimport EditExistingModal from '../components/Admin/editExistingModal';\r\nimport { Success, Error } from '../components/Notification/Notification';\r\nimport AdminNavigation from '../components/navigation/Navigation-bar/admin-navigation';\r\n\r\n\r\nimport \"./admin.css\";\r\n\r\nlet genreRows = [], artistRows = [], categoryRows = [], musicRows = [];\r\n\r\nconst Admin = () => {\r\n    const isDark = useContext(IsDark);\r\n\r\n    const hiddenFileInput = useRef(null);\r\n    const hiddenMusicInput = useRef(null);\r\n    const audioDurationRef = useRef(null);\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [tabId, setTabId] = useState(1);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    \r\n    const [rows, setRows] = useState([]);\r\n\r\n    const [catGenValue, setCatGenValue] = useState('');\r\n    const [editId, setEditId] = useState(0);\r\n    const [modalId, setModalId] = useState('0');\r\n    const [header, setHeader] = useState(\"\");\r\n    const [warning, setWarning] = useState(false);\r\n    const [deleteId, setDeleteId] = useState(0);\r\n    const [deleteItemName, setDeleteItemName] = useState('');\r\n\r\n    const [genre, setGenre] = useState([]);\r\n    const [artist, setArtist] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n\r\n    const [addMusicWidget, setAddMusicWidget] = useState(false);\r\n    const [addGenreWidget, setAddGenreWidget] = useState(false);\r\n    const [addArtistWidget, setAddArtistWidget] = useState(false);\r\n    const [addCategoryWidget, setAddCategoryWidget] = useState(false);\r\n    const [editMusicWidget, setEditMusicWidget] = useState(false);\r\n    const [editExistingWidget, setEditExistingWidget] = useState(false);\r\n    \r\n    const [fav, setFav] = useState(false);\r\n    const [music, setMusic] = useState({});\r\n    const [musicName, setMusicName] = useState('');\r\n    const [musicDuration, setMusicDuration] = useState(0);\r\n\r\n    const [musicTitle, setMusicTitle] = useState('');\r\n    const [albumTitle, setAlbumTitle] = useState('');\r\n    \r\n    const [musicImg, setMusicImg] = useState({});\r\n    const [musicImgName, setMusicImgName] = useState(\"\");\r\n    const [musicImgPath, setMusicImgPath] = useState('/assets/images/default-music-upload-image.png');\r\n\r\n    const updateTabId = (id) => setTabId(id);\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    \r\n    const updateAddMusicWidget = () => {\r\n        removeMusicDetails();\r\n        setAddMusicWidget(prev => !prev);\r\n    }\r\n    const updateEditMusicWidget = () => setEditMusicWidget(prev => !prev);\r\n    const updateAddArtistWidget = () => setAddArtistWidget(prev => !prev);\r\n    const updateAddGenreWidget = () => setAddGenreWidget(prev => !prev);\r\n    const updateAddCategoryWidget = () => setAddCategoryWidget(prev => !prev);\r\n\r\n    const defaultProps = {\r\n        options: rows,\r\n        getOptionLabel: (option) => option.musicTitle || option.name || option.type,\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n        let musicController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let genreController = new AbortController();\r\n        let categoryController = new AbortController();\r\n        \r\n        const getMusicData = async () => {\r\n    \r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllAudio, {\r\n                    signal: musicController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  musicRows = response.data.message;\r\n                  musicController = null;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getArtistsData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  artistController = null;\r\n                  artistRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getGenreData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  genreController = null;\r\n                  genreRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getCategoryData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  categoryRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        if(tabId === 1) \r\n            getMusicData();\r\n        else if(tabId === 2) \r\n            getArtistsData();\r\n        else if(tabId === 3) \r\n            getGenreData();\r\n        else \r\n            getCategoryData();\r\n\r\n        return () => {\r\n            musicController?.abort();\r\n            artistController?.abort();\r\n            genreController?.abort();\r\n            categoryController?.abort();\r\n            setLoader(false);\r\n        }\r\n    \r\n    }, [tabId]);\r\n\r\n    const getSearchedAutoCompleteRow = (value) => {\r\n        if(value && value.id){\r\n            let searchedData = [];\r\n            if(tabId === 1){\r\n                searchedData = musicRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 2){\r\n                searchedData = artistRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 3){\r\n                searchedData = genreRows.filter(row => row.id === value.id);\r\n            }\r\n            else{\r\n                searchedData = categoryRows.filter(row => row.id === value.id);\r\n            }\r\n            setRows(searchedData);\r\n        }\r\n        else{\r\n            if(tabId === 1){\r\n                setRows(musicRows);\r\n            }\r\n            else if(tabId === 2){\r\n                setRows(artistRows)\r\n            }\r\n            else if(tabId === 3){\r\n                setRows(genreRows);\r\n            }\r\n            else{\r\n                setRows(categoryRows);\r\n            }\r\n        }\r\n    };\r\n\r\n    const getSearchedRow = (event) => {\r\n        if(event.target.value.length){\r\n            const data = event.target.value;\r\n            let searchedData = [];\r\n            if(tabId === 1){\r\n                searchedData = musicRows.filter(row => row.musicTitle.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 2){\r\n                searchedData = artistRows.filter(row => row.name.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 3){\r\n                searchedData = genreRows.filter(row => row.type.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else{\r\n                searchedData = categoryRows.filter(row => row.type.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            setRows(searchedData);\r\n        }\r\n        else{\r\n            if(tabId === 1){\r\n                setRows(musicRows);\r\n            }\r\n            else if(tabId === 2){\r\n                setRows(artistRows)\r\n            }\r\n            else if(tabId === 3){\r\n                setRows(genreRows);\r\n            }\r\n            else{\r\n                setRows(categoryRows);\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateRow = (data) => {\r\n        const rowData = rows.map(row => {\r\n            if(row.id === data.id){\r\n                return data;\r\n            }\r\n            else{\r\n                return row;\r\n            }\r\n        });\r\n\r\n        setRows(rowData);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        \r\n        setArtist(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleGenreChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setGenre(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleCategoryChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setCategory(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n    \r\n    const handleClick = (event) => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n\r\n    const handleMusicClick = (event) => {\r\n        hiddenMusicInput.current.click();\r\n    };\r\n    \r\n    const uploadMusicImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setMusicImg(event.target.files);\r\n            setMusicImgName(event.target.files[0].name);\r\n            setMusicImgPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n    \r\n    const uploadMusic = (event) => {\r\n        if(event.target.files[0]){\r\n            window.URL = window.URL || window.webkitURL;\r\n            audioDurationRef.current = document.createElement(\"audio\");\r\n            audioDurationRef.current.preload = 'metadata';\r\n\r\n            audioDurationRef.current.onloadedmetadata = () => {\r\n                window.URL.revokeObjectURL(audioDurationRef.current.src);\r\n                const duration = Math.floor(audioDurationRef.current.duration);\r\n                setMusicDuration(duration);\r\n            };\r\n\r\n            audioDurationRef.current.src = URL.createObjectURL(event.target.files[0]);\r\n\r\n            setMusic(event.target.files);\r\n            setMusicName(event.target.files[0].name);\r\n        }\r\n    };\r\n    \r\n    const removeSelectedSong = () => {\r\n        setMusic({});\r\n        setMusicName(\"\");\r\n        audioDurationRef?.current?.remove();\r\n        audioDurationRef.current = null;\r\n        setMusicDuration(0);\r\n    };\r\n    \r\n    const removeSelectedImage = () => {\r\n        setMusicImg({});\r\n        setMusicImgName('');\r\n        setMusicImgPath('/assets/images/default-music-upload-image.png');\r\n    };\r\n    \r\n    const removeMusicDetails = () => {\r\n        setFav(false);\r\n\r\n        setGenre([]);\r\n        setArtist([]);\r\n        setCategory([]);\r\n\r\n        removeSelectedSong();\r\n        \r\n        setMusicTitle(\"\");\r\n        setAlbumTitle(\"\");\r\n\r\n        removeSelectedImage();\r\n    };\r\n\r\n    const saveUploadMusic = async () => {\r\n        setLoader(true);\r\n        const today = new Date().toISOString();\r\n\r\n        const formData = new FormData();\r\n        formData.append('musicImageFile', musicImg[0]);\r\n        formData.append('musicFile', music[0]);\r\n        formData.append('musicTitle', musicTitle);\r\n        formData.append('albumTitle', albumTitle);\r\n        formData.append(\"artist\", artist);\r\n        formData.append(\"category\", category);\r\n        formData.append(\"genre\", genre);\r\n        formData.append(\"date\", today);\r\n        formData.append(\"show\", fav);\r\n        formData.append(\"duration\", musicDuration);\r\n\r\n        try{\r\n            const response = await axios.post(apiLinks.postSong, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            if(response.data.code === 200){\r\n                if(tabId === 1){\r\n                    musicRows.push(...(response.data.rowData));\r\n                    // setRows(prevData => [...prevData, ...(response.data.rowData)]);\r\n                }\r\n                else{\r\n                    updateTabId(1);\r\n                }\r\n                \r\n                removeMusicDetails();\r\n                setAddMusicWidget(false);\r\n                Success(\"Uploaded Successfully\");\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error Occured - \", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const editRow = (id) => {\r\n        const editableRow = rows.filter(entry => entry.id === id);\r\n        // console.log(editableRow);\r\n\r\n        setFav(editableRow[0].show);\r\n        setEditId(id);\r\n        setGenre(editableRow[0].genre);\r\n        setArtist(editableRow[0].artists);\r\n        setCategory(editableRow[0].category);\r\n        setMusicTitle(editableRow[0].musicTitle);\r\n        setAlbumTitle(editableRow[0].albumTitle);\r\n        setEditMusicWidget(true);\r\n    };\r\n\r\n    const editArtistGenreCategory = (id, domain=\"\") => {\r\n\r\n        const editTableRow = rows.filter(entry => entry.id === id);\r\n        // console.log(editTableRow);\r\n\r\n        if(editTableRow.length){\r\n            setFav(editTableRow[0].show);\r\n            setEditId(id);\r\n            setEditExistingWidget(prev => !prev);\r\n            setCatGenValue(editTableRow[0].name || editTableRow[0].type);\r\n\r\n            if(domain === \"artist\"){\r\n                setHeader('Edit Artist');\r\n                setModalId('1');\r\n            }\r\n            else if(domain === 'genre'){\r\n                setHeader(\"Edit Genre\");\r\n                setModalId('2');\r\n            }\r\n            else if(domain === 'category'){\r\n                setHeader(\"Edit Category\");\r\n                setModalId('3');\r\n            }\r\n            else{\r\n                Error(\"Domain Not Valid for Edit\");\r\n            }\r\n        }\r\n        else{\r\n            Error(\"No such row id found\");\r\n        }\r\n    };\r\n\r\n    const toggleWarning = (id = 0) => {\r\n        const name = rows.filter(row => row.id === id);\r\n\r\n        if(id && tabId === 1){\r\n            setDeleteItemName(name[0].musicTitle);\r\n        }\r\n        else if(id && tabId === 2){\r\n            setDeleteItemName(name[0].name);\r\n        }\r\n        else if(id && tabId === 3){\r\n            setDeleteItemName(name[0].type);\r\n        }\r\n        \r\n        else if(id && tabId === 4){\r\n            setDeleteItemName(name[0].type);\r\n        }\r\n        else{\r\n            setDeleteItemName(\"\");\r\n        }\r\n        setDeleteId(id);\r\n        setWarning(prev => !prev);\r\n    };\r\n\r\n    const deleteRow = async () => {\r\n        const id = deleteId;\r\n\r\n        try{\r\n            setLoader(true);\r\n            let response = {};\r\n            if(tabId === 1){\r\n                response = await axios.delete(apiLinks.deleteMusic+id);\r\n            }\r\n            else if(tabId === 2){\r\n                response = await axios.delete(apiLinks.deleteArtist+id);\r\n            }\r\n            else if(tabId === 3){\r\n                response = await axios.delete(apiLinks.deleteGenre+id);\r\n            }\r\n            else if(tabId === 4){\r\n                response = await axios.delete(apiLinks.deleteCategory+id);\r\n            }\r\n\r\n            if(response.data && response.data.code === 200){\r\n                setRows(prev => prev.filter(row => row.id !== id));\r\n                Success(response.data.message);\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error occured while deleting\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n            toggleWarning();\r\n        }\r\n    };\r\n\r\n    const broadCast = () => {\r\n        serviceWorker.Broadcast();\r\n    };\r\n    \r\n    const actions = [\r\n        { icon: <MusicNoteIcon />, name: 'Add Song', click: updateAddMusicWidget },\r\n        { icon: <PersonAddIcon />, name: 'Add Artist', click: updateAddArtistWidget },\r\n        { icon: <DomainIcon />, name: 'Add Genre', click: updateAddGenreWidget },\r\n        { icon: <CategoryIcon />, name: 'Add Category', click: updateAddCategoryWidget },\r\n        { icon: <CellTowerIcon />, name: \"BroadCast\", click: broadCast }, \r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='admin-page'>\r\n                {loader ? \r\n                    <SpinnerGrow color=\"success\" />: \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    warning ?\r\n                    <DeleteWarning \r\n                        musicTitle={deleteItemName}\r\n                        toggle={toggleWarning}\r\n                        deleteRow={deleteRow}\r\n                    />: \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    editMusicWidget ? \r\n                    <EditExistingMusic\r\n                        fav={fav}\r\n                        genre={genre}\r\n                        artist={artist}\r\n                        editId={editId}\r\n                        loader={loader}\r\n                        category={category}\r\n                        musicTitle={musicTitle}\r\n                        albumTitle={albumTitle}\r\n                        editMusicWidget={editMusicWidget}\r\n\r\n                        setFav={setFav}\r\n                        updateRow={updateRow}\r\n                        setLoader={setLoader}\r\n                        handleChange={handleChange}\r\n                        setMusicTitle={setMusicTitle}\r\n                        setAlbumTitle={setAlbumTitle}\r\n                        handleGenreChange={handleGenreChange}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        updateEditMusicWidget={updateEditMusicWidget}\r\n\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    addMusicWidget ? \r\n                    <NewMusicAdd \r\n                        fav={fav}\r\n                        genre={genre}\r\n                        artist={artist}\r\n                        category={category}\r\n                        musicName={musicName}\r\n                        musicTitle={musicTitle}\r\n                        albumTitle={albumTitle}\r\n                        musicImgPath={musicImgPath}\r\n                        musicImgName={musicImgName}\r\n                        musicDuration={musicDuration}\r\n                        addMusicWidget={addMusicWidget}\r\n                        hiddenFileInput={hiddenFileInput}\r\n                        hiddenMusicInput={hiddenMusicInput}\r\n\r\n                        setFav={setFav}\r\n                        uploadMusic={uploadMusic}\r\n                        handleClick={handleClick}\r\n                        handleChange={handleChange}\r\n                        setMusicTitle={setMusicTitle}\r\n                        setAlbumTitle={setAlbumTitle}\r\n                        saveUploadMusic={saveUploadMusic}\r\n                        handleMusicClick={handleMusicClick}\r\n                        uploadMusicImage={uploadMusicImage}\r\n                        handleGenreChange={handleGenreChange}\r\n                        removeMusicDetails={removeMusicDetails}\r\n                        removeSelectedSong={removeSelectedSong}\r\n                        removeSelectedImage={removeSelectedImage}\r\n                        updateAddMusicWidget={updateAddMusicWidget}\r\n                        handleCategoryChange={handleCategoryChange}\r\n\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {editExistingWidget ? \r\n                    <EditExistingModal \r\n                        fav={fav}\r\n                        rows={rows}\r\n                        id={modalId}\r\n                        editId={editId}\r\n                        header={header}\r\n                        value={catGenValue}\r\n\r\n                        setFav={setFav}\r\n                        setRows={setRows}\r\n                        toggle={setEditExistingWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n\r\n                {addArtistWidget ? \r\n                    <AddNewModal \r\n                        header=\"Add New Artist\"\r\n                        toggle={setAddArtistWidget}\r\n                        setRows={setRows}\r\n                        artistRows={artistRows}\r\n                        tabId={tabId}\r\n                        updateTabId={updateTabId}\r\n                        id='1'\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n                \r\n                {addGenreWidget ? \r\n                    <AddNewModal \r\n                        header=\"Add New Genre\"\r\n                        toggle={setAddGenreWidget}\r\n                        setRows={setRows}\r\n                        genreRows={genreRows}\r\n                        tabId={tabId}\r\n                        updateTabId={updateTabId}\r\n                        id='2'\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n                \r\n                {addCategoryWidget ? \r\n                    <AddNewModal \r\n                        header=\"Add New Category\"\r\n                        toggle={setAddCategoryWidget}\r\n                        setRows={setRows}\r\n                        categoryRows={categoryRows}\r\n                        tabId={tabId}\r\n                        updateTabId={updateTabId}\r\n                        id='3'\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n\r\n                <AdminNavigation />\r\n\r\n                {/* <Container fluid>\r\n                     */}\r\n                <Box className='add-button-speed-dial' sx={{ height: 300, transform: 'translateZ(0px)', flexGrow: 1 }}>\r\n                    <Backdrop open={open} />\r\n                    <SpeedDial\r\n                        ariaLabel=\"SpeedDial tooltip example\"\r\n                        sx={{ position: 'absolute', bottom: 16, right: 16 }}\r\n                        icon={<SpeedDialIcon />}\r\n                        onClose={handleClose}\r\n                        onOpen={handleOpen}\r\n                        open={open}\r\n                        className=\"speed-dial-custom\"\r\n                    >\r\n                        {actions.map((action, index) => (\r\n                            <SpeedDialAction\r\n                                key={action.name}\r\n                                icon={action.icon}\r\n                                tooltipTitle={action.name}\r\n                                tooltipOpen\r\n                                onClick={action.click}\r\n                            />\r\n                        ))}\r\n                    </SpeedDial>\r\n                </Box>\r\n\r\n                {/* </Container> */}\r\n                \r\n                <Container className='mb-3'>\r\n                    <div>\r\n                        <div className=\"d-flex navtabs-autocomplete\">\r\n                            <Nav tabs className=\"align-bottom-flex\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 1 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(1)}\r\n                                    >\r\n                                        Music Data\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 2 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(2)}\r\n                                    >\r\n                                        Artists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 3 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(3)}\r\n                                    >\r\n                                        Genre\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 4 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(4)}\r\n                                    >\r\n                                        Category\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Autocomplete\r\n                                {...defaultProps}\r\n                                id={`auto-complete`}\r\n                                className={`autoComplete ${isDark ? \"dark\" : \"light\"}`}\r\n                                onChange={(evt, val) => getSearchedAutoCompleteRow(val)}\r\n                                autoComplete\r\n                                includeInputInList\r\n                                renderInput={(params) => (\r\n                                <TextField {...params} label={  tabId === 1 ? \"Search Music\" : \r\n                                                                tabId === 2 ? \"Search Artist\" : \r\n                                                                tabId === 3 ? \"Search Genre\" : \r\n                                                                \"Search Category\"} \r\n                                    className=\"input-div\" variant=\"standard\" \r\n                                    onChange={getSearchedRow}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <TabContent activeTab={tabId}>\r\n                            <TabPane tabId={1}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <StickyHeadTable \r\n                                            id=\"table\"\r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            editRow={editRow}\r\n                                            toggleWarning={toggleWarning}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={2}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ArtistsTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editArtist={editArtistGenreCategory}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={3}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <GenreTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editGenre={editArtistGenreCategory}\r\n                                        /> \r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={4}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <CategoryTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editCategory={editArtistGenreCategory}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane>  \r\n                        </TabContent>\r\n                    </div>\r\n                </Container>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n","// for song list\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useContext } from \"react\";\r\nimport PlayCircle from \"@mui/icons-material/PlayCircle\";\r\nimport PauseCircle from \"@mui/icons-material/PauseCircle\";\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\n\r\nimport { CalculateTimeContext, SongList } from \"../../pages/Artist\";\r\nimport { PlayerContext, PlayPause, Playing, LoadAudio, IsDark } from \"../../App\";\r\n\r\nimport \"./body.css\";\r\n\r\nconst Body = (props) => {\r\n    \r\n    const isDark = useContext(IsDark);\r\n    const paused = useContext(Playing);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentPlayer = useContext(PlayerContext);\r\n    const calculateTimeContext = useContext(CalculateTimeContext);\r\n\r\n    const [playId, setPlayId] = useState(0);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const updatePlayId = (value) => {\r\n        setPlayId(value);\r\n    };\r\n\r\n    const updatePlayPause = (event) => {\r\n        const e = {\r\n            ...event, \r\n            code: \"Space\",\r\n            preventDefault: () => {}\r\n        };\r\n\r\n        playPauseState(e);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container> \r\n                <div className=\"song-list\">\r\n                    {\r\n                        songList.map((song, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className={`table-row ${isDark ? \"dark\" : \"light\"}`}\r\n                                        key={song.id}\r\n                                        style={currentPlayer.id && currentPlayer.id === song.id ? {color: \"#eee\"}: null}\r\n                                        onMouseEnter={(e) => {updatePlayId(song.id)}}\r\n                                        onMouseLeave={(e) => {updatePlayId(0)}}\r\n                                        onClick={e => loadAudio(songList, song, e)}\r\n                                    >\r\n                                        <div className=\"srno-title\">\r\n                                            <div className=\"srno\">\r\n                                                {\r\n                                                    currentPlayer.id && currentPlayer.id === song.id ?\r\n                                                    <span\r\n                                                        onMouseEnter={() => setPlaying(true)}\r\n                                                        onMouseLeave={() => setPlaying(false)}\r\n                                                    > \r\n                                                        {\r\n                                                            !paused ?\r\n                                                                <PlayCircle \r\n                                                                    onClick = {e => updatePlayPause(e)}\r\n                                                                /> :\r\n                                                                playing ?\r\n                                                                    <PauseCircle \r\n                                                                        onClick = {e => updatePlayPause(e)}\r\n                                                                    />:\r\n                                                                    <EqualizerIcon />\r\n                                                        }\r\n                                                    </span>:\r\n                                                    playId === song.id ? \r\n                                                        <PlayCircle /> :\r\n                                                        index+1\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"title\">\r\n                                                <div className=\"music-title\">\r\n                                                    {song.musicTitle}\r\n                                                </div>\r\n                                                <div className=\"d-flex custom-artists\">\r\n                                                    {\r\n                                                        song.artists?.map((art, index) => {\r\n                                                            return props.artist !== art ?(\r\n                                                                <div className=\"\" key={index}>\r\n                                                                    <span className=\"song-list-artist\">\r\n                                                                        <Link to={`/artist/${art}`}>\r\n                                                                                {art}\r\n                                                                        </Link>\r\n                                                                    </span>\r\n                                                                    <span className=\"song-list-artist-separation\">\r\n                                                                        {song.artists.length - 1 > index ? \",\": \"\"}&nbsp;\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            ) : <React.Fragment key={index} />\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"duration\">\r\n                                                {song.duration ? calculateTimeContext(song.duration) : '--:--'}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        index < songList.length - 1 ? (\r\n                                            <div className=\"custom-bottom-border\" key={index} />\r\n                                        ) : <React.Fragment />\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;","import { Container } from \"reactstrap\";\r\nimport React, { useContext } from \"react\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\nimport { CalculateTimeContext, Duration } from \"../../pages/Artist\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const totalDuration = useContext(Duration);\r\n    const calculateTotalDuration = useContext(CalculateTimeContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                <div className=\"album-container\">\r\n                    <div className={`album-image-container ${isDark ? \"dark\" : \"light\"}`}>\r\n                        <img \r\n                            className=\"album-image\"\r\n                            src={apiLinks.getArtistImgFromName + props.artist} \r\n                            alt={props.artist} />\r\n                    </div>\r\n                    <div className=\"album-details\">\r\n                        <div className=\"album-heading\">\r\n                            Artist\r\n                        </div>\r\n                        <div className=\"album-name\">\r\n                            {props.artist}\r\n                        </div>\r\n                        <div className=\"album-duration\">\r\n                            Duration&nbsp;<CircleIcon style={{ fontSize: '.5rem' }} />&nbsp;{ calculateTotalDuration(totalDuration) }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","// for related artists\r\nimport Slider from 'react-slick';\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { IsDark } from '../../App';\r\nimport { AlbumList } from '../../pages/Artist';\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./footer.css\";\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n          breakpoint: 1200,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 991,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Footer = (props) => {\r\n\r\n    const isDark = useContext(IsDark);\r\n    const albumList = useContext(AlbumList);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Container key=\"artist-container\" className=\"mt-5\">\r\n                { albumList.length ? \r\n                    <Container className=\"slider-container\">\r\n                        <h2 className={`category-list-heading ${isDark ? \"dark\" : \"light\"}`} title=\"Artists\">Artist's Album</h2>\r\n                        <Slider {...settings}>\r\n                        { albumList.map((album, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container\">\r\n                                        <img \r\n                                            src={apiLinks.getImage + album.musicImageKey} \r\n                                            alt={album.albumTitle} \r\n                                            className=\"artist-card-image\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className=\"pt-3 pb-3 artist-name\" title={album.albumTitle}>\r\n                                                <Link to={`/album/${album.albumTitle}`} className={`artist-name ${isDark ? \"dark\" : \"light\"}`}>\r\n                                                    {album.albumTitle}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3\" fluid />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport Body from \"../components/Artist/body\";\r\nimport Header from \"../components/Artist/header\";\r\nimport Footer from \"../components/Artist/footer\";\r\nimport { apiLinks } from \"../connection.config\";\r\nimport { Error } from \"../components/Notification/Notification\";\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\n\r\nimport \"./artist.css\";\r\n\r\nexport const SongList = React.createContext();\r\nexport const Duration = React.createContext();\r\nexport const AlbumList = React.createContext();\r\nexport const CalculateTimeContext = React.createContext();\r\n\r\nconst Artist = (props) => {\r\n    const params = useParams();\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [songList, setSongList] = useState([]);\r\n    const [albumList, setAlbumList] = useState([]);\r\n    const [totalDuration, setTotalDuration] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        const getArtistDetails = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getArtistDetails + params.artistName, {\r\n                    headers: {\r\n                        'content-type': \"application/json\"\r\n                    },\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    // console.log(response.data.message);\r\n                    const duration = response.data.message.reduce((partial_sum, a) => partial_sum + a.duration, 0);\r\n                    const album = [];\r\n                    response.data.message.map(item => album.includes(item.albumTitle) ? null : album.push(item));\r\n\r\n                    setAlbumList(album);\r\n                    setTotalDuration(duration);\r\n                    setSongList(response.data.message);\r\n                    abortController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                // Error(err.message);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        getArtistDetails();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [params]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <CalculateTimeContext.Provider value={calculateSongTime}>\r\n                <SongList.Provider value={songList}>\r\n                    <Duration.Provider value={totalDuration}>\r\n                        <AlbumList.Provider value={albumList}>\r\n                            <Header artist={params.artistName} />\r\n                            <Body artist={params.artistName} />\r\n                            <Footer artist={params.artistName} />\r\n                        </AlbumList.Provider>\r\n                    </Duration.Provider>\r\n                </SongList.Provider>\r\n            </CalculateTimeContext.Provider>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Artist;\r\n","import React, { useState, useRef, useEffect, useCallback, \r\n        forwardRef, useImperativeHandle, useContext } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\r\nimport { SpinnerRotate } from \"../spinner/spinner-grow\";\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious';\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\r\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\r\nimport VolumeDownIcon from '@mui/icons-material/VolumeDown';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nimport { LoadAudio, IsDark } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst MusicPlayer = forwardRef((props, ref) => {\r\n    const theme = useTheme();\r\n\r\n    const audioRef = useRef(null);\r\n    const borderRef = useRef(null);\r\n    const volumeRef = useRef(null);\r\n\r\n    const isDark = useContext(IsDark);\r\n    const loadAudio = useContext(LoadAudio);\r\n\r\n    const { playing, setPlaying } = props;\r\n\r\n    const [style, setStyle] = useState({display: 'none'});\r\n\r\n    // const [playing, setPlaying] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [playlist, setPlaylist] = useState([]);\r\n    const [currentSong, setCurrentSong] = useState({});\r\n    const [currentSongIdx, setCurrentSongIdx] = useState(0);\r\n\r\n    const [volume, setVolume] = useState(1.0);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [endTime, setEndTime] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    // const updateSongTime = (e) => {\r\n    //     console.log(e.target.value);\r\n    //     audioRef.current.currentTime = e.target.value;\r\n    //     setCurrentTime(e.target.value);\r\n    // };\r\n\r\n    const updateBorderRef = useCallback(() => {\r\n        setCurrentTime(audioRef.current.currentTime);\r\n        // const percent = (audioRef.current.currentTime / endTime * 100);\r\n        // borderRef.current.style.width = `${endTime === null ? 100 : percent}%`;\r\n\r\n    }, []);\r\n\r\n    const playPauseSong = () => {\r\n        if(playing){\r\n            audioRef.current.pause();\r\n        }\r\n        else{\r\n            audioRef.current.play();\r\n        }\r\n        setPlaying(prev => !prev);\r\n    };\r\n\r\n    const prevSong = useCallback(() => {\r\n        if(currentSongIdx > 0){\r\n            props.setCurrentSong(playlist[currentSongIdx - 1]);\r\n        }\r\n    }, [props, currentSongIdx, playlist]);\r\n\r\n    const nextSong = useCallback(() => {\r\n        if(currentSongIdx < (playlist.length - 1)){\r\n            audioRef.current.pause(); \r\n            props.setCurrentSong(playlist[currentSongIdx + 1]);\r\n        }\r\n    }, [currentSongIdx, playlist, props]);\r\n\r\n    const volumeInc = () => {\r\n        if(volume < 1){\r\n            const vol = parseFloat(volume.toFixed(1)) + 0.1;\r\n            volumeRef.current.value = vol;\r\n            audioRef.current.volume = vol;\r\n            setVolume(vol);\r\n        }\r\n    };\r\n\r\n    const volumeDec = () => {\r\n        if(volume > 0){\r\n            const vol = parseFloat(volume.toFixed(1)) - 0.1;\r\n            volumeRef.current.value = vol;\r\n            audioRef.current.volume = vol;\r\n            setVolume(vol);\r\n        }\r\n    };\r\n\r\n    const handleMute = (vol) => {\r\n        setVolume(vol);\r\n        audioRef.current.volume = vol;\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        handlePlayPause(){\r\n            playPauseSong();\r\n        },\r\n        handleNextSong(){\r\n            nextSong();\r\n        },\r\n        handlePrevSong(){\r\n            prevSong();\r\n        },\r\n        handleVolumeInc(){\r\n            volumeInc();\r\n        },\r\n        handleVolumeDec(){\r\n            volumeDec();\r\n        },\r\n        }),\r\n    )\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n\r\n        const loadMusic = async () => {\r\n            try{\r\n                setLoading(true);\r\n                audioRef.current.src = await (apiLinks.getAudio + props.currentSong.musicKey);\r\n                const playPromise = audioRef.current.play();\r\n                audioRef.current.volume = volume;\r\n\r\n                setEndTime(props.currentSong.duration);\r\n\r\n                if (playPromise !== undefined) {\r\n                    playPromise.then(_ => {\r\n                      abortController = null;\r\n                    })\r\n                    .catch(error => {\r\n                      setPlaying(false);\r\n                    });\r\n                }\r\n\r\n                const currentSongIndex = props.playlist?.findIndex(obj => obj.id === props.currentSong?.id);\r\n                setCurrentSongIdx(currentSongIndex);\r\n\r\n                audioRef.current.onended = () => {\r\n                    if(currentSongIndex < props.playlist?.length - 1){\r\n                        loadAudio(props.playlist, props.playlist[currentSongIndex + 1], null);\r\n                    }\r\n                    else{\r\n                        loadAudio([], {}, null);\r\n                    }\r\n                    setPlaying(false);\r\n                };\r\n            }\r\n            catch(err){\r\n                console.log(\"An Error occured while loading music\", err);\r\n                // Error(err.message);\r\n            }\r\n            finally{\r\n                audioRef.current.oncanplaythrough = () => {\r\n                    setLoading(false);\r\n                    setPlaying(true);\r\n                };\r\n                \r\n                if(!(audioRef.current.paused) && audioRef.current.readyState > 0)\r\n                setLoading(false);\r\n            }\r\n        };\r\n        \r\n        if(props.currentSong?.musicTitle !== currentSong.musicTitle){\r\n            setPlaylist(props.playlist);\r\n            setCurrentSong(props.currentSong);\r\n            loadMusic();\r\n        }\r\n\r\n        return () => {\r\n            abortController?.abort();\r\n        }\r\n        \r\n    }, \r\n    [   props.currentSong, props.playlist, props, currentSongIdx, playlist, ref, volume, setPlaying, \r\n        props?.currentSong?.musicTitle, currentSong?.musicTitle, nextSong, updateBorderRef, loadAudio\r\n    ]);\r\n\r\n    return(\r\n        <>\r\n\r\n            <div className={`mt-2 bottom-navigation-container ${isDark ? \"player-dark\" : \"player-light\"}`}>\r\n                {/* <div ref={borderRef} className=\"top-one-row\"/> */}\r\n                <Slider\r\n                    ref={borderRef}\r\n                    aria-label=\"time-indicator\"\r\n                    size=\"small\"\r\n                    default={0}\r\n                    step={1}\r\n                    max={endTime}\r\n                    value={currentTime}\r\n                    onChange={(e) => {\r\n                        audioRef.current.currentTime = parseFloat(e.target.value);\r\n                        setCurrentTime(e.target.value);\r\n                    }}\r\n                    sx={{\r\n                        color: 'rgb(64, 226, 0)',\r\n                        height: 4,\r\n                        '& .MuiSlider-thumb': {\r\n                        width: 15,\r\n                        height: 15,\r\n                        transition: '0.3s cubic-bezier(.47,1.64,.41,.8)',\r\n                        '&:before': {\r\n                            boxShadow: '0 2px 12px 0 rgba(0,0,0,0.4)',\r\n                        },\r\n                        '&:hover, &.Mui-focusVisible': {\r\n                            boxShadow: `0px 0px 0px 8px ${\r\n                            theme.palette.mode === 'dark'\r\n                                ? 'rgb(255 255 255 / 16%)'\r\n                                : 'rgb(0 0 0 / 16%)'\r\n                            }`,\r\n                        },\r\n                        '&.Mui-active': {\r\n                            width: 25,\r\n                            height: 25,\r\n                        },\r\n                        },\r\n                        '& .MuiSlider-rail': {\r\n                        opacity: 0.28,\r\n                        },\r\n                    }}\r\n                    />\r\n                <div className=\"custom-bottom-navigation\" >\r\n                    <div className={`timeline start ${isDark ? \"dark-time\" : \"light-time\"}`}>{calculateSongTime(currentTime)}</div>\r\n                    <div className={`timeline end ${isDark ? \"dark-time\" : \"light-time\"}`}>{endTime !== Infinity ? calculateSongTime(endTime): '--:--'}</div>\r\n                    <div className=\"musicDetails\">\r\n                        <div className=\"image-box\">\r\n                            <div className=\"navbarHead-img-container\">\r\n                                <img \r\n                                    className={`navbarHead-img ${!currentSong.musicImageKey && \"hover-img\"}`} \r\n                                    src={currentSong.musicImageKey ? apiLinks.getImage + currentSong.musicImageKey : \"/assets/svg/dvd.svg\"} \r\n                                    alt=\"player-img\" \r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"music-detail-box\">\r\n                            <h5 className=\"music-title\">\r\n                                {currentSong.musicTitle}\r\n                            </h5>\r\n                            <h6 className=\"music-album\">\r\n                                <Link className={`${isDark ? \"dark-link-hover\" : \"light-link-hover\"}`} to={`/album/${currentSong.albumTitle}`}>\r\n                                    {currentSong.albumTitle}\r\n                                </Link>\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"custom-button-group-container\">\r\n                        <div className={`custom-button-group ${isDark ? \"dark\" : \"light\"}`}>\r\n                            <SkipPreviousIcon \r\n                                onClick={currentSongIdx > 0 ? prevSong : null}\r\n                                className={currentSongIdx === 0 ? `disabled-svg ${isDark ? \"dark\" : \"light\"}`: ''}\r\n                                style={currentSongIdx > 0 ? \r\n                                    { cursor: 'pointer'} : { cursor: 'not-allowed' }} \r\n                            />\r\n                            {\r\n                                loading ?\r\n                                    <SpinnerRotate \r\n                                        size=\"\"\r\n                                        color=\"success\"\r\n                                    /> :\r\n                                    playing ?\r\n                                        <PauseIcon title=\"Pause Song\" onClick={playPauseSong} /> : \r\n                                        <PlayArrowIcon title=\"Play Song\" onClick={playPauseSong} />\r\n                            }\r\n                            <SkipNextIcon \r\n                                onClick={currentSongIdx < (playlist.length - 1) ? nextSong: null}\r\n                                className={currentSongIdx === (playlist.length - 1) ? `disabled-svg ${isDark ? \"dark\" : \"light\"}`: ''}\r\n                                style={\r\n                                        currentSongIdx < (playlist.length - 1) ? \r\n                                            { cursor: 'pointer'} : { cursor: 'not-allowed' }} \r\n                            />\r\n                            <span \r\n                                className=\"volume-range-slider\"\r\n\r\n                                onClick={e => {\r\n                                    setStyle(prev => {\r\n                                        return {\r\n                                            display: prev.display === 'block' ? 'none' : 'block'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                            >\r\n                                {\r\n                                    volume > 0.5 ?\r\n                                        <VolumeUpIcon className=\"volume-svg\" /> :\r\n                                        volume > 0 ?\r\n                                            <VolumeDownIcon className=\"volume-svg\" /> :\r\n                                            <VolumeOffIcon className=\"volume-svg\" />\r\n                                }\r\n                                <input style={style} min={0} max={1} step={0.1} onChange={e => handleMute(parseFloat(e.target.value))}\r\n                                    type=\"range\" orient=\"vertical\" className=\"volume-slider\" ref={volumeRef} defaultValue={volume} />\r\n                            </span>\r\n                        </div>\r\n                        <audio ref={audioRef} preload=\"auto\" onTimeUpdate={updateBorderRef} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Container className=\"mt-3 pt-5 pb-5\"/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default MusicPlayer;","import React, { useState, useRef, useEffect } from 'react';\nimport { Flip, ToastContainer } from 'react-toastify';\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nimport Home from './pages/Home.js';\nimport Error from './pages/Error.js';\nimport Album from './pages/Album.js';\nimport Admin from './pages/admin.js';\nimport Artist from \"./pages/Artist.js\";\nimport { Subscribe, Unsubscribe } from './client/index';\nimport * as serviceWorker from './client/serviceWorker.js';\nimport MusicPlayer from \"./components/MusicPlayer/index.js\";\n\nimport './App.css';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const IsDark = React.createContext();\nexport const SetIsDark = React.createContext();\nexport const Playing = React.createContext();\nexport const LoadAudio = React.createContext();\nexport const PlayPause = React.createContext();\nexport const PlayerContext = React.createContext();\n\nfunction App() {\n  library.add(faHome);\n  \n  const player = useRef(null);\n\n  const [isDark, setIsDark] = useState(true);\n  const [playlist, setPlaylist] = useState([]);\n  const [playing, setPlaying] = useState(false);\n  const [currentSong, setCurrentSong] = useState({});\n\n  const loadAudio = (ll, item, e) => {\n    if(e)\n        e.preventDefault();\n    setPlaylist(ll);\n    setCurrentSong(item);\n    // console.log(ll, item);\n  };\n\n  const handleKeyPress = (e) => {\n    switch(e.code){\n        case 'Space':  \n            if(player.current)\n              e.preventDefault();\n              player?.current?.handlePlayPause();\n            break;\n        case 'ArrowLeft':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handlePrevSong();\n            break;\n        case 'ArrowRight':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleNextSong();\n            break;\n        case 'ArrowUp':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleVolumeInc();\n            break;\n        case 'ArrowDown':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleVolumeDec();\n            break;\n        default:\n            break;\n    }\n    return false;\n  };\n\n  const updateDark = () => {\n    window?.localStorage?.setItem(\"mode\", !isDark);\n    setIsDark(prev => !prev);\n  };\n\n  useEffect(() => {\n    if(Object.keys(currentSong).length > 0){\n      document.title = currentSong.musicTitle;\n    }\n    else{\n      document.title = \"Sangeet - Free Music App\"\n    }\n  }, [currentSong]);\n\n  useEffect(() => {\n\n    if(\"Notification\" in window){\n      if(Notification.permission === \"default\"){\n          Notification.requestPermission().then((permission) => {\n              if(permission === \"granted\"){\n                  Subscribe();\n              }\n              else{\n                Unsubscribe();\n              }\n          })\n      }\n      else if(Notification.permission === \"granted\"){\n          Subscribe();\n          console.log(\"already subscribed\");\n      }\n      else{\n        Unsubscribe();\n      }\n    }\n    else{\n        console.log(\"Notification is not supported\");\n    }\n    \n    setIsDark(window?.localStorage?.getItem(\"mode\") === 'true' ? true : false);\n    \n    window?.addEventListener('keydown', handleKeyPress, false);\n\n    return () => {\n      document.removeEventListener('keypress', handleKeyPress);\n    };\n  }, []);\n  \n  return (\n    <React.Fragment>\n      <PlayerContext.Provider value={currentSong}>\n        <PlayPause.Provider value={handleKeyPress}>\n          <Playing.Provider value={playing}>\n            <LoadAudio.Provider value={loadAudio}>\n              <IsDark.Provider value={isDark}>\n                <SetIsDark.Provider value={updateDark}>\n                  <div className={`app-bg ${isDark ? \"dark\" : \"light\"}`}>\n                    <Router>\n                      <Routes>\n\n                        <Route exact path=\"/\" element={<Home />} />\n                        <Route path=\"/album/:albumName\" element={<Album />} />\n                        <Route path=\"/artist/:artistName\" element={<Artist />} />\n                        <Route path=\"/admin/\" element={<Admin />} />\n                        <Route path=\"*\" element={<Error />} />\n\n                      </Routes>\n                      {\n                          playlist.length ? \n                              <MusicPlayer \n                                  ref={player}\n                                  currentSong={currentSong}\n                                  playlist={playlist}\n                                  setCurrentSong={setCurrentSong}\n                                  playing={playing}\n                                  setPlaying={setPlaying}\n                              />\n                              : <React.Fragment />\n                      }\n                    </Router>\n                  </div>\n                  <ToastContainer \n                      position='top-right'\n                      autoClose={3000}\n                      hideProgressBar={false}\n                      newestOnTop={true}\n                      closeOnClick={true}\n                      rtl={false}\n                      pauseOnFocusLoss\n                      draggable\n                      pauseOnHover\n                      theme=\"dark\"\n                      transition={Flip}\n                  />\n                </SetIsDark.Provider>\n              </IsDark.Provider>\n            </LoadAudio.Provider>\n          </Playing.Provider>\n        </PlayPause.Provider>\n      </PlayerContext.Provider>\n    </React.Fragment>\n  );\n}\n\nserviceWorker.register();\n\nexport default App;\n","export function register(){\r\n    if('serviceWorker' in navigator){\r\n        const url = \"http://localhost:3000/sw.js\";\r\n        // const url = \"http://3.109.59.110:5000/\"\r\n        navigator.serviceWorker.register(url, {\r\n            scope: '/',\r\n        })\r\n        .then(function(registration) {\r\n            registration.addEventListener('updatefound', function() {\r\n              // If updatefound is fired, it means that there's\r\n              // a new service worker being installed.\r\n              const _ = registration.installing;\r\n            //   console.log('A new service worker is being installed:',\r\n            //     installingWorker);\r\n            });\r\n            // registration.addEventListener('pushsubscriptionchange', function(event) {\r\n            //     console.log(event);\r\n            // });\r\n        })\r\n        .catch(function(error) {\r\n            console.log('Service worker registration failed:', error);\r\n        });\r\n    }\r\n    else {\r\n        console.log('Service workers are not supported.');\r\n    }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}