{"version":3,"sources":["connection.config.js","components/spinner/spinner-grow.js","client/index.js","components/navigation/Navigation-bar/navigation.js","pages/Home.js","pages/Error.js","components/Album/body.js","components/Album/header.js","components/Album/footer.js","components/Notification/Notification.js","pages/Album.js","components/Admin/textInput.js","components/Admin/newImageUpload.js","components/Admin/addNewModal.js","components/Admin/checkBoxInput.js","components/Admin/newMusicAdd.js","components/Tables/Genre-table.js","components/Tables/broadcast.js","components/Tables/artists-table.js","components/Tables/music-table.js","components/Tables/category-table.js","components/Tables/playlist-table.js","components/Warning/Warning.js","components/Admin/editImageUpload.js","components/Admin/editExistingMusic.js","components/Admin/editExistingModal.js","components/navigation/Navigation-bar/admin-navigation.js","pages/admin.js","components/Artist/body.js","components/Artist/header.js","components/Artist/footer.js","pages/Artist.js","components/MusicPlayer/index.js","App.js","client/serviceWorker.js","reportWebVitals.js","index.js"],"names":["apiLinks","baseURL","broadcast","subscribe","unsubscribe","getBroadcast","deleteBroadcast","getBroadcastNotifications","status","getAudio","getImage","getAudioKey","getImageKey","getArtistImgKey","getPlaylistImgKey","getArtistImgFromName","getAlbumDetails","getArtistDetails","getAllAudio","getAllAudioDetails","getMusicIdNameAlbum","getAllArtists","getAllGenre","getAllCategory","getAllPlaylist","getPlaylistById","postSong","addGenre","addArtists","addCategory","createPlaylist","deleteMusic","deleteGenre","deleteArtist","deleteCategory","deletePlaylist","updateAdminData","updateAdminGenre","updateAdminArtist","updateAdminCategory","updateAdminPlaylist","updateAdminMusicFav","updateAdminGenreFav","updateAdminArtistFav","updateAdminCategoryFav","updateAdminPlaylistFav","updatePlaylistSongs","SpinnerRotate","props","color","size","SpinnerGrow","isOpen","autoFocus","scrollable","keyboard","contentClassName","backdrop","centered","fullscreen","className","type","urlBase64ToUint8Array","base64String","base64","repeat","length","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","Subscribe","a","navigator","serviceWorker","ready","registration","pushManager","userVisibleOnly","applicationServerKey","process","subscription","existingEndPoint","localStorage","getItem","today","Date","toISOString","axios","post","JSON","stringify","endpoint","headers","setItem","Unsubscribe","delete","data","removeItem","Broadcast","formData","MaterialUISwitch","styled","Switch","theme","width","height","padding","margin","transform","backgroundImage","encodeURIComponent","opacity","backgroundColor","palette","mode","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","Navigation","navigate","useNavigate","isDark","useContext","IsDark","setIsDark","SetIsDark","useState","setIsOpen","notificationData","setNotificationData","createTheme","updateNavClick","prev","anchorEl","setAnchorEl","open","Boolean","getNotificationData","get","params","response","code","message","Notification","requestPermission","then","permission","catch","err","console","log","handleClick","event","currentTarget","handleClose","useEffect","dark","light","expand","onClick","checked","Tooltip","title","IconButton","sx","marginRight","undefined","Badge","badgeContent","fontSize","Menu","id","onClose","PaperProps","elevation","filter","mt","ml","mr","display","right","bgcolor","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","map","notification","MenuItem","url","src","image","alt","body","Divider","toggle","direction","navbar","icon","faHome","faMusic","faSignInAlt","musicList","reducer","state","action","artistData","item","show","genreData","categoryData","term","genreList","artistList","albumList","categoryList","list","genre","j","find","push","albumTitle","artists","artist","name","category","loaderSettings","arrows","dots","draggable","easing","infinite","lazyLoad","speed","slidesToShow","slidesToScroll","swipeToSlide","responsive","breakpoint","settings","Home","playing","Playing","loadAudio","LoadAudio","playPauseState","PlayPause","currentSong","PlayerContext","loader","setLoader","mouseId","setMouseId","useReducer","dispatch","handleStateChange","e","preventDefault","abortController","AbortController","getAudioData","signal","Object","keys","prevData","parse","abort","Fragment","style","fluid","catList","ll","sort","b","keyA","timeStamp","keyB","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","musicTitle","musicImageKey","cursor","to","Array","from","index","Skeleton","animation","variant","dummy","idx","textAlign","Error","Body","paused","songList","SongList","currentPlayer","calculateTimeContext","CalculateTimeContext","playId","setPlayId","setPlaying","updatePlayId","value","updatePlayPause","song","art","duration","Header","Artists","totalDuration","Duration","calculateTotalDuration","Footer","Success","autoClose","toast","success","hideProgressBar","closeOnClick","pauseOnFocusLoss","pauseOnHover","progress","error","transition","Bounce","React","createContext","Album","useParams","setSongList","setArtists","setTotalDuration","getAlbum","albumName","Set","songs","flat","reduce","partial_sum","Provider","time","Infinity","minutes","Math","floor","seconds","String","TextInput","xs","justifyContent","for","required","labelName","alignSelf","check","TextField","onChange","target","label","Checkbox","onCheckBoxChange","checkedValue","inputProps","checkedIcon","NewImageUpload","musicImgPath","musicImgName","close","removeSelectedImage","accept","uploadMusicImage","ref","hiddenFileInput","outline","AddNewModal","useRef","setUrl","setName","setBody","checkBoxChecked","setCheckBoxChecked","artistImg","setArtistImg","artistImgName","setArtistImgName","artistImgPath","setArtistPath","setData","tabId","artistRows","rowData","genreRows","categoryRows","broadcastRows","playlistRows","addDetail","controller","names","split","nam","trim","FormData","append","types","constructor","header","files","URL","createObjectURL","current","click","CheckBoxInput","FormControl","InputLabel","Select","labelId","multiple","handleChange","input","OutlinedInput","renderValue","selected","join","MenuProps","indexOf","ListItemText","primary","random","maxHeight","ITEM_HEIGHT","NewMusicAdd","setGenreList","setArtistList","setCategoryList","musicName","addMusicWidget","musicDuration","hiddenMusicInput","uploadMusic","saveUploadMusic","handleMusicClick","fav","setFav","handleGenreChange","removeMusicDetails","removeSelectedSong","updateAddMusicWidget","handleCategoryChange","setMusicTitle","setAlbumTitle","genreController","artistController","categoryController","getGenreList","getArtistList","getCategoryList","lg","calculateSongTime","columns","minWidth","align","maxWidth","GenreTable","setRows","rows","page","setPage","rowsPerPage","setRowsPerPage","updateFavState","put","row","ThemeProvider","Paper","overflow","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","hover","role","tabIndex","Edit","editGenre","Delete","toggleWarning","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","BroadcastTable","ArtistsTable","editArtist","StickyHeadTable","editRow","CategoryTable","editCategory","commands","Transition","Slide","SimpleDialog","Dialog","DialogTitle","List","pt","command","ListItem","button","findIndex","ListItemAvatar","Avatar","blue","PlaylistTable","descriptionElementRef","setOpen","updateElement","setUpdateElement","openMusicList","setOpenMusicList","editMusicList","setEditMusicList","existingMusicList","setExistingMusicList","openAddMusicList","setOpenAddMusicList","addMusicList","setAddMusicList","setChecked","handleAddMusicOpen","handleAddMusicClose","saveAddMusic","songId","handleSongListClose","getSelectedPlaylistSongs","playlist","signalAborter","handleSongListSave","descriptionElement","focus","editPlaylist","fullScreen","TransitionComponent","AppBar","Toolbar","edge","Typography","flex","Button","dense","secondaryAction","music","newList","splice","deletePlaylistSong","secondary","DialogContentText","scroll","DialogContent","dividers","currentIndex","newChecked","handleToggle","disablePadding","ListItemButton","DialogActions","DeleteWarning","deleteRow","EditImageUpload","imageKey","flexDirection","EditExistingMusic","audioRef","load","setLoad","currentPaused","setCurrentPaused","musicKey","setMusicKey","musicImgKey","setMusicImgKey","editMusicWidget","editId","updateRow","musicPath","updateEditMusicWidget","closeWidget","pauseSong","play","pause","updateSongState","onended","oncanplaythrough","readyState","saveEditFile","imgFileController","audioFileController","getImageFileKey","getAudioFileKey","currentTime","EditExistingModal","editedRow","artistImgFileController","playlistImgFileController","getArtistImageFileKey","artistImgKey","getPlaylistImageFileKey","AdminNavigation","sticky","musicRows","Admin","audioDurationRef","setTabId","setEditId","setHeader","modalId","setModalId","deleteId","setDeleteId","warning","setWarning","catGenValue","setCatGenValue","deleteItemName","setDeleteItemName","setGenre","setArtist","setCategory","showBroadCast","setShowBroadCast","setAddMusicWidget","setCreatePlaylist","addGenreWidget","setAddGenreWidget","setEditMusicWidget","addArtistWidget","setAddArtistWidget","addCategoryWidget","setAddCategoryWidget","editExistingWidget","setEditExistingWidget","setMusic","setMusicName","setMusicPath","setMusicDuration","musicImg","setMusicImg","setMusicImgName","setMusicImgPath","updateTabId","defaultProps","options","getOptionLabel","option","playlist_name","parseInt","musicController","broadCastController","playlistController","getMusicData","getArtistsData","getGenreData","getCategoryData","getBroadCastData","getPlaylistData","getSearchedRow","searchedData","toLowerCase","includes","self","entry","webkitURL","document","createElement","preload","onloadedmetadata","revokeObjectURL","remove","editArtistGenreCategoryPlaylist","domain","editTableRow","actions","Box","flexGrow","bottom","Backdrop","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","SpeedDialAction","tooltipTitle","tooltipOpen","tabs","Autocomplete","evt","val","getSearchedAutoCompleteRow","autoComplete","includeInputInList","renderInput","activeTab","editableRow","AlbumList","album","Artist","setAlbumList","artistName","MusicPlayer","forwardRef","useTheme","borderRef","volumeRef","setStyle","loading","setLoading","setPlaylist","setCurrentSong","currentSongIdx","setCurrentSongIdx","volume","setVolume","setCurrentTime","endTime","setEndTime","updateBorderRef","useCallback","playPauseSong","prevSong","nextSong","useImperativeHandle","handlePlayPause","handleNextSong","handlePrevSong","handleVolumeInc","vol","parseFloat","toFixed","volumeInc","handleVolumeDec","volumeDec","loadMusic","playPromise","_","currentSongIndex","obj","Slider","default","step","max","boxShadow","min","orient","defaultValue","onTimeUpdate","register","scope","addEventListener","installingWorker","installing","App","library","add","player","handleKeyPress","removeEventListener","exact","path","element","newestOnTop","rtl","Flip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6fa63a51.chunk.js","sourcesContent":["export const apiLinks = {\r\n    // baseURL: \"http://localhost:5000/\" // local Development\r\n    baseURL : \"http://3.109.59.110:5000/\" // testing\r\n    // baseURL: \"http://musicBackend.com/\" // Production\r\n};\r\n\r\n// serviceWorker subscription\r\napiLinks.broadcast = apiLinks.baseURL+\"broadcast\";\r\napiLinks.subscribe = apiLinks.baseURL+\"subscription\";\r\napiLinks.unsubscribe = apiLinks.baseURL+\"unsubcription\";\r\napiLinks.getBroadcast = apiLinks.baseURL+\"getAllBroadCast\";\r\napiLinks.deleteBroadcast = apiLinks.baseURL+\"deleteBroadcast/\";\r\napiLinks.getBroadcastNotifications = apiLinks.baseURL+\"getAllBroadcastNotification\";\r\n\r\n// get Links\r\napiLinks.status = apiLinks.baseURL+\"status\";\r\napiLinks.getAudio = apiLinks.baseURL+\"audio/\";\r\napiLinks.getImage = apiLinks.baseURL+\"image/\";\r\napiLinks.getAudioKey = apiLinks.baseURL+\"audioKey/\";\r\napiLinks.getImageKey = apiLinks.baseURL+\"imageKey/\";\r\napiLinks.getArtistImgKey = apiLinks.baseURL+\"artistImageKey/\";\r\napiLinks.getPlaylistImgKey = apiLinks.baseURL+\"playlistImageKey/\";\r\napiLinks.getArtistImgFromName = apiLinks.baseURL+\"getImageByArtistName/\";\r\napiLinks.getAlbumDetails = apiLinks.baseURL+\"album/\";\r\napiLinks.getArtistDetails = apiLinks.baseURL+\"artist/\";\r\napiLinks.getAllAudio = apiLinks.baseURL+\"getAllMusic\";\r\napiLinks.getAllAudioDetails = apiLinks.baseURL+\"getAllMusicDetails\";\r\napiLinks.getMusicIdNameAlbum = apiLinks.baseURL+\"getMusicIdNameAlbum\";\r\napiLinks.getAllArtists = apiLinks.baseURL+\"getAllArtists\";\r\napiLinks.getAllGenre = apiLinks.baseURL+\"getAllGenre\";\r\napiLinks.getAllCategory = apiLinks.baseURL+\"getAllCategory\";\r\napiLinks.getAllPlaylist = apiLinks.baseURL+\"getAllPlaylist\";\r\napiLinks.getPlaylistById = apiLinks.baseURL+\"getPlaylistById/\";\r\n\r\n// post Links\r\napiLinks.postSong = apiLinks.baseURL+\"addNewSong\";\r\napiLinks.addGenre = apiLinks.baseURL+\"postNewGenre\";\r\napiLinks.addArtists = apiLinks.baseURL+\"postNewArtists\";\r\napiLinks.addCategory = apiLinks.baseURL+\"postNewCategory\";\r\napiLinks.createPlaylist = apiLinks.baseURL+\"postNewPlaylist\";\r\n\r\n// delete Links\r\napiLinks.deleteMusic = apiLinks.baseURL+\"admin/musicDelete/\";\r\napiLinks.deleteGenre = apiLinks.baseURL+\"admin/genreDelete/\";\r\napiLinks.deleteArtist = apiLinks.baseURL+\"admin/artistDelete/\";\r\napiLinks.deleteCategory = apiLinks.baseURL+\"admin/categoryDelete/\"\r\napiLinks.deletePlaylist = apiLinks.baseURL+\"admin/playlistDelete/\";\r\n\r\n// put Links\r\napiLinks.updateAdminData = apiLinks.baseURL+\"admin/updateData/\";\r\napiLinks.updateAdminGenre = apiLinks.baseURL+\"admin/updateGenre/\";\r\napiLinks.updateAdminArtist = apiLinks.baseURL+\"admin/updateArtist/\";\r\napiLinks.updateAdminCategory = apiLinks.baseURL+\"admin/updateCategory/\";\r\napiLinks.updateAdminPlaylist = apiLinks.baseURL+\"admin/updatePlaylist/\";  \r\n\r\napiLinks.updateAdminMusicFav = apiLinks.baseURL+\"admin/updateMusicFav/\";\r\napiLinks.updateAdminGenreFav = apiLinks.baseURL+\"admin/updateGenreFav/\";\r\napiLinks.updateAdminArtistFav = apiLinks.baseURL+\"admin/updateArtistFav/\";\r\napiLinks.updateAdminCategoryFav = apiLinks.baseURL+\"admin/updateCategoryFav/\";\r\napiLinks.updateAdminPlaylistFav = apiLinks.baseURL+\"admin/updatePlaylistFav/\";  \r\napiLinks.updatePlaylistSongs = apiLinks.baseURL+\"admin/updatePlaylistSong/\";","import React from 'react';\r\nimport { Modal, ModalBody, Spinner } from 'reactstrap';\r\n\r\nimport \"./spinner-grow.css\";\r\n\r\nconst SpinnerGrow = (props) => {\r\n\r\n    return(\r\n        <Modal \r\n            isOpen={true}\r\n            autoFocus={true}\r\n            scrollable={false}\r\n            keyboard={false}\r\n            contentClassName='loader-modal-class'\r\n            backdrop='static'\r\n            centered\r\n            fullscreen=\"md\"\r\n            size='sm'\r\n        >\r\n            <ModalBody>\r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    className='first-dot-spinner'\r\n                    type=\"grow\"\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n                \r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    type=\"grow\"\r\n                    className='second-dot-spinner'\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n                    \r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    className='third-dot-spinner'\r\n                    type=\"grow\"\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst SpinnerRotate = (props) => {\r\n\r\n    return(\r\n        <Spinner\r\n            color={props.color || \"success\"}\r\n            size={props.size || \"\"}\r\n        >\r\n            Loading...\r\n        </Spinner>\r\n    );\r\n\r\n};\r\n\r\nexport default SpinnerGrow;\r\n\r\nexport {\r\n    SpinnerRotate\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { apiLinks } from \"../connection.config\";\r\n\r\nconst publicVapidKey = process.env.REACT_APP_PUBLIC_VAPID_KEY;\r\n\r\nconst urlBase64ToUint8Array = (base64String) => {\r\n    // console.log(base64String);\r\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/-/g, '+')\r\n      .replace(/_/g, '/');\r\n  \r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n  \r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n};\r\n\r\nexport const Subscribe = async () => {\r\n    if (!('serviceWorker' in navigator)) return;\r\n  \r\n    const registration = await navigator.serviceWorker.ready;\r\n  \r\n    // Subscribe to push notifications\r\n    const subscription = await registration.pushManager.subscribe({\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\r\n    });\r\n    \r\n    const existingEndPoint = window?.localStorage?.getItem(\"endpoint\");\r\n\r\n    const today = new Date().toISOString();\r\n    \r\n    await axios.post(apiLinks.subscribe, \r\n        JSON.stringify({subscription: subscription, today: today, endpoint: existingEndPoint}), {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        });\r\n        \r\n    if(window.localStorage){\r\n        window.localStorage.setItem(\"endpoint\", subscription.endpoint);\r\n    }\r\n};\r\n\r\nexport const Unsubscribe = async () => {\r\n    if(window.localStorage){\r\n\r\n        const endpoint = window.localStorage.getItem(\"endpoint\");\r\n        if(endpoint){\r\n            await axios.delete(apiLinks.unsubscribe, {\r\n                data: {\r\n                    endpoint: endpoint\r\n                }\r\n            });\r\n\r\n            window.localStorage.removeItem(\"endpoint\");\r\n        }\r\n    }\r\n};\r\n\r\nexport const Broadcast = async (formData) => {\r\n    return await axios.post(apiLinks.broadcast, formData);\r\n};\r\n\r\n","import axios from \"axios\";\r\nimport Menu from '@mui/material/Menu';\r\nimport Badge from '@mui/material/Badge';\r\nimport Switch from '@mui/material/Switch';\r\nimport { createTheme } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Navbar, NavItem, Nav, NavbarToggler, NavbarBrand, NavLink,\r\n        Offcanvas, OffcanvasHeader, OffcanvasBody } from \"reactstrap\";\r\nimport { faHome, faMusic, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Subscribe } from \"../../../client\";\r\nimport { IsDark, SetIsDark } from \"../../../App\";\r\nimport { apiLinks } from \"../../../connection.config.js\";\r\n\r\nimport \"./navigation.css\";\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n    width: 62,\r\n    height: 34,\r\n    padding: 7,\r\n    '& .MuiSwitch-switchBase': {\r\n      margin: 1,\r\n      padding: 0,\r\n      transform: 'translateX(6px)',\r\n      '&.Mui-checked': {\r\n        color: '#fff',\r\n        transform: 'translateX(22px)',\r\n        '& .MuiSwitch-thumb:before': {\r\n          backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n            '#fff',\r\n          )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n        },\r\n        '& + .MuiSwitch-track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n        },\r\n      },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#ffc107',\r\n      width: 32,\r\n      height: 32,\r\n      '&:before': {\r\n        content: \"''\",\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        left: 0,\r\n        top: 0,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          '#111',\r\n        )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n      },\r\n    },\r\n    '& .MuiSwitch-track': {\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n      borderRadius: 20 / 2,\r\n    },\r\n}));\r\n\r\nconst Navigation = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const isDark = useContext(IsDark);\r\n    const setIsDark = useContext(SetIsDark);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [notificationData, setNotificationData] = useState([]);\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: isDark ? \"dark\" : \"light\"\r\n        }\r\n    });\r\n\r\n    const updateNavClick = () => {\r\n        setIsOpen(prev => !prev);\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const getNotificationData = async () => {\r\n        if(window?.localStorage?.getItem(\"endpoint\")){\r\n            const endpoint = window.localStorage.getItem(\"endpoint\");\r\n            const response = await axios.get(apiLinks.getBroadcastNotifications, {\r\n                params: {\r\n                    endpoint: endpoint\r\n                }\r\n            });\r\n            if(response.data.code === 200){\r\n                setNotificationData(response.data.message);\r\n            }\r\n            else{\r\n                setNotificationData([]);\r\n            }\r\n        }\r\n        else{\r\n            Notification.requestPermission().then(permission => {\r\n                if(permission === \"granted\"){\r\n                    Subscribe();\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleClick = async (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        await getNotificationData();\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNotificationData();\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n\r\n            <div className=\"navigation-container\">\r\n                <Navbar \r\n                    color={isDark ? \"dark\" : \"light\"}\r\n                    dark={isDark}\r\n                    light={!isDark}\r\n                    expand=\"false\"\r\n                    className=\"one-row\"\r\n                >\r\n                    <NavbarBrand className=\"me-auto\">\r\n                        <div className=\"navbarHead\" onClick={() => navigate('/')}>\r\n                            SANGEET\r\n                        </div>\r\n                    </NavbarBrand>\r\n\r\n                    <MaterialUISwitch theme={theme} checked={isDark} onClick={setIsDark} />\r\n\r\n                    <Tooltip title=\"Notifications\">\r\n                        <IconButton\r\n                            sx={{\r\n                                marginRight: \"5px\"\r\n                            }}\r\n                            onClick={handleClick}\r\n                            size=\"small\"\r\n                            aria-controls={open ? 'account-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                        >\r\n                            <Badge badgeContent={notificationData.length || '0'} className=\"notification-count\" >\r\n                                <NotificationsIcon sx={{ fontSize: 30, color: isDark ? \"rgb(0, 255, 0)\" : \"rgb(0, 0, 0)\" }} />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title=\"Search\">\r\n                        <IconButton>\r\n                            <SearchIcon sx={{ fontSize: 30, color: isDark ? \"rgb(0, 255, 0)\" : \"rgb(0, 0, 0)\" }} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        id=\"account-menu\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        onClick={handleClose}\r\n                        PaperProps={{\r\n                            elevation: 0,\r\n                            className: `notification-message-container ${isDark ? \"dark\" : \"light\"}`,\r\n                            sx: {\r\n                                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                                mt: 1.5,\r\n                                '& .MuiAvatar-root': {\r\n                                    width: 32,\r\n                                    height: 32,\r\n                                    ml: -0.5,\r\n                                    mr: 1,\r\n                                },\r\n                                '&:before': {\r\n                                    content: '\"\"',\r\n                                    display: 'block',\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    right: 0,\r\n                                    width: 10,\r\n                                    height: 10,\r\n                                    bgcolor: `${isDark ? \"#0A0F18\" : \"#eee\"}`,\r\n                                    transform: 'translateY(-50%) rotate(45deg)',\r\n                                    zIndex: 0,\r\n                                },\r\n                            },\r\n                        }}\r\n                        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                    >\r\n                        {\r\n                            notificationData.length > 0 ?\r\n                                notificationData.map(notification => \r\n                                    <MenuItem key={notification.id} onClick={() => navigate(notification.url)}>\r\n                                        <div>\r\n                                            <div className=\"notification-row mb-2\">\r\n                                                <div className=\"notification-image-container\">\r\n                                                    <img className=\"notification-image\"\r\n                                                        src={apiLinks.getImage + notification.image} alt={notification.title} />\r\n                                                </div>\r\n                                                <div className=\"notification-text-container\">\r\n                                                    <div className=\"notification-title\">\r\n                                                        {notification.title}\r\n                                                    </div>\r\n                                                    <div className=\"notification-body\">\r\n                                                        {notification.body}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Divider />\r\n                                        </div>\r\n                                    </MenuItem>\r\n                                ) : \r\n                                <div className=\"no-notifications-container\">\r\n                                    <h5 className=\"no-notifications\">\r\n                                        No Notifications Available\r\n                                    </h5>\r\n                                </div>\r\n                        }\r\n                    </Menu>\r\n\r\n                    <NavbarToggler className=\"me-2\" onClick={updateNavClick} />\r\n                    \r\n                    <Offcanvas isOpen={isOpen} className=\"offcanvas-tag\" scrollable={false}\r\n                        toggle={updateNavClick} direction=\"end\">\r\n                        <OffcanvasHeader toggle={updateNavClick} className=\"custom-close-icon-canvas-header\" />\r\n                        <OffcanvasBody className=\"navbar-menu-links\">\r\n                            <Nav className=\"ms-auto\" navbar>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate(\"/\")}>\r\n                                        <FontAwesomeIcon icon={faHome} /> \r\n                                        <span className=\"extra-spacing\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate(\"/\")}>\r\n                                        <FontAwesomeIcon icon={faHome} /> \r\n                                        <span className=\"extra-spacing\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faMusic} /> \r\n                                        <span className=\"extra-spacing\" /> Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate('/admin')}>\r\n                                        <FontAwesomeIcon icon={faSignInAlt} /> \r\n                                        <span className=\"extra-spacing\" /> Login / SignUp \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </OffcanvasBody>\r\n                    </Offcanvas>\r\n                </Navbar>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import axios from \"axios\";\r\nimport Slider from \"react-slick\";\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport React, { useEffect, useReducer, useState, useContext } from \"react\";\r\n\r\nimport { apiLinks } from '../connection.config';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\nimport { LoadAudio, PlayerContext, PlayPause, Playing, IsDark } from \"../App\";\r\n\r\nimport \"./Home.css\";\r\n\r\nconst musicList = {};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'FETCH_SUCCESS':\r\n        case \"FETCH_CACHE\":\r\n            const artistData = action.artistData.filter(item => item.show === true);\r\n            const genreData = action.genreData.filter(item => item.show === true);\r\n            const categoryData = action.categoryData.filter(item => item.show === true);\r\n            const term = action.message.filter(item => item.show === true);\r\n            \r\n            let genreList = {};\r\n            let artistList = {};\r\n            let albumList = {};\r\n            let categoryList = {};\r\n            let musicList = action.message;\r\n\r\n            for(var i=0; i < term.length; i++){\r\n\r\n                // Filtering genre data\r\n                let list = term[i].genre;\r\n                for(var j=0; j < list.length; j++){\r\n                    const data = list[j];\r\n                    if(genreData.find(genre => genre.type === data)){\r\n                        if(genreList[data] === undefined){\r\n                            genreList[data] = [term[i]];\r\n                        }\r\n                        else{\r\n                            genreList[data].push(term[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Filtering album data\r\n                list = term[i].albumTitle;\r\n                if(albumList[list] === undefined){\r\n                    albumList[list] = [term[i]];\r\n                }\r\n                else{\r\n                    albumList[list].push(term[i]);\r\n                }\r\n\r\n                // Filtering artist data\r\n                list = term[i].artists;\r\n                for(j=0; j < list.length; j++){\r\n                    const data = list[j];\r\n                    if(artistData.find(artist => artist.name === data)){\r\n                        if(artistList[data] === undefined){\r\n                            artistList[data] = [term[i]];\r\n                        }\r\n                        else{\r\n                            artistList[data].push(term[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Filtering category data\r\n                list = term[i].category;\r\n                for(j=0; j < list.length; j++){\r\n                    const data = list[j];\r\n                    if(categoryData.find(category => category.type === data)){\r\n                        if(categoryList[data] === undefined){\r\n                            categoryList[data] = [term[i]];\r\n                        }\r\n                        else{\r\n                            categoryList[data].push(term[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const list = {\r\n                genreList,\r\n                albumList,\r\n                artistList,\r\n                categoryList,\r\n                musicList\r\n            };\r\n\r\n            // console.log(list);\r\n\r\n            return list;\r\n\r\n        case 'FETCH_ERROR':\r\n            // Error(action.message);\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst loaderSettings = {\r\n    arrows: false,\r\n    dots: false,\r\n    draggable: false,\r\n    easing: \"linear\",\r\n    infinite: false,\r\n    lazyLoad: \"ondemand\",\r\n    speed: 500,\r\n    slidesToShow: 8,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: false,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1500,\r\n            settings: {\r\n              slidesToShow: 7,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1350,\r\n            settings: {\r\n              slidesToShow: 6,\r\n            }\r\n        },\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 850,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst settings = {\r\n    arrows: true,\r\n    dots: false,\r\n    draggable: true,\r\n    easing: \"linear\",\r\n    infinite: false,\r\n    lazyLoad: \"ondemand\",\r\n    speed: 500,\r\n    slidesToShow: 8,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1500,\r\n            settings: {\r\n              slidesToShow: 7,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1350,\r\n            settings: {\r\n              slidesToShow: 6,\r\n            }\r\n        },\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 850,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Home = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const playing = useContext(Playing);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [mouseId, setMouseId] = useState(0);\r\n\r\n    const [list, dispatch] = useReducer(reducer, musicList);\r\n\r\n    // console.log(loader, list);\r\n\r\n    const handleStateChange = (e) => {\r\n        const event = {\r\n            ...e,\r\n            code: \"Space\",\r\n            preventDefault : () => {}\r\n        };\r\n        playPauseState(event);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n\r\n        const getAudioData = async() => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllAudioDetails, {\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    dispatch({  type: 'FETCH_SUCCESS', \r\n                                message: response.data.message,\r\n                                artistData: response.data.artistData,\r\n                                genreData: response.data.genreData,\r\n                                categoryData: response.data.categoryData\r\n                            });\r\n                    if(window.localStorage){\r\n                        window.localStorage.setItem(\"Song Data\", JSON.stringify({\r\n                            message: response.data.message,\r\n                            artistData: response.data.artistData,\r\n                            genreData: response.data.genreData,\r\n                            categoryData: response.data.categoryData\r\n                        }));\r\n                    }\r\n                }\r\n                else{\r\n                    dispatch({ type: 'FETCH_ERROR', message: response.data.message });\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                dispatch({ type: 'FETCH_ERROR', message: err.message });\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        if(window?.localStorage?.getItem(\"Song Data\") && Object.keys(currentSong).length !== 0){\r\n            const prevData = JSON.parse(window.localStorage.getItem(\"Song Data\"));\r\n            if(Object.keys(prevData).length)\r\n                dispatch({type: \"FETCH_CACHE\", ...prevData})\r\n            else\r\n                getAudioData();\r\n        }\r\n        else\r\n            getAudioData();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [currentSong]);\r\n\r\n    // console.log(list);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <div className={`page-content ${isDark ? \"dark\" : \"light\"}`}\r\n                style={currentSong.id ? {height: \"calc(100vh - 215px)\"} : {height: \"calc(100vh - 90px)\"}}> \r\n                <Container key='category-container' className=\"mt-3\" fluid>\r\n                    {list.categoryList ?  \r\n                        Object.keys(list.categoryList).map(catList => {\r\n                            let ll = [];\r\n                            if(catList === 'New Releases')\r\n                                ll = list.categoryList[catList].sort((a, b) => {\r\n                                    let keyA = new Date(a.timeStamp);\r\n                                    let keyB = new Date(b.timeStamp);\r\n                                    if(keyA < keyB) return 1;\r\n                                    else if(keyA > keyB) return -1;\r\n                                    else return 0;\r\n                                });\r\n                            else\r\n                                ll = list.categoryList[catList];\r\n\r\n                            return (\r\n                                <Container key={catList} className=\" mt-3 slider-container\" fluid>\r\n                                    <h2 className={`category-list-heading ${isDark ? \"dark-heading\" : \"light-heading\"}`} title={catList}>{catList}</h2>\r\n                                    <Slider {...settings}>\r\n                                        {ll.map(item => {\r\n                                            return (\r\n                                                <div key={item.id} className={`mt-3 mb-3 custom-card-items song-list-items ${isDark ? \"dark-card\" : \"light-card\"}`}\r\n                                                    onMouseEnter={() => setMouseId(item.id)}\r\n                                                    onMouseLeave={() => setMouseId(0)}\r\n                                                    onTouchStart={() => setMouseId(item.id)}                                                   \r\n                                                    onTouchEnd={() => setMouseId(item.id)}\r\n                                                >\r\n                                                    <div className=\"card-image-container\">\r\n                                                        \r\n                                                        <div className={`hide-hover-play-icon ${mouseId === item.id || item.id === currentSong.id ? \r\n                                                                                                    \"show\": null }`}\r\n                                                            title={`Play ${item.musicTitle}`}\r\n                                                        >\r\n                                                            {\r\n                                                                item.id === currentSong.id && playing ?\r\n                                                                <PauseIcon className=\"play-icon-image-overlay\" onClick={handleStateChange} /> :\r\n                                                                <PlayArrowIcon className=\"play-icon-image-overlay\" \r\n                                                                    onClick={(e) => item.id === currentSong.id ? handleStateChange(e): loadAudio(ll, item, e)}\r\n                                                                />  \r\n                                                            }\r\n                                                        </div>\r\n                                        \r\n                                                        <img \r\n                                                            src={apiLinks.getImage + item.musicImageKey} \r\n                                                            alt={item.musicTitle} \r\n                                                            className=\"card-image\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"card-text-container\">\r\n                                                        <div className=\"card-text\">\r\n                                                            <h5 className={`pt-3 song-name ${isDark ? \"hover-dark\" : \"hover-light\"}`} title={`Play ${item.musicTitle}`}>\r\n                                                                <span style={{cursor: \"pointer\"}} \r\n                                                                    onClick={(e) => loadAudio(ll, item, e)} >\r\n                                                                    {item.musicTitle}\r\n                                                                </span>\r\n                                                            </h5>\r\n                                                            <h6 title={`Watch ${item.albumTitle}`} className={`album-title ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                                                <Link to={`/album/${item.albumTitle}`} className={`album-title ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                                                    {item.albumTitle}\r\n                                                                </Link>\r\n                                                            </h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                    </Slider>\r\n                                </Container>\r\n                            );\r\n                        })\r\n                    : Array.from(new Array(3)).map((item, index) => {\r\n                        return (\r\n                            <Container key={index} className=\" mt-3 slider-container\" fluid>\r\n                                <Skeleton sx={isDark ? {bgcolor: '#ffffff29'}: null} animation='wave' variant=\"h1\" width=\"30%\" height=\"3rem\" className=\"mb-3 mt-3\" />\r\n                                <Slider {...loaderSettings}>\r\n                                    {\r\n                                        Array.from(new Array(10)).map((dummy, idx) => {\r\n                                            return (\r\n                                                <React.Fragment>\r\n                                                    <div className=\"card-image-container\">\r\n                                                        <Skeleton sx={isDark ? {bgcolor: '#ffffff29'}: null} animation='wave' variant=\"rectangular\" height=\"100%\" className=\"card-image\" />\r\n                                                    </div>\r\n                                                    <div className=\"card-text-container\">\r\n                                                        <Skeleton sx={isDark ? {bgcolor: '#ffffff29'}: null} animation='wave' variant=\"text\" className=\"card-text\" />\r\n                                                    </div>\r\n                                                </React.Fragment>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </Slider>\r\n                            </Container>\r\n                        );\r\n                    })\r\n                    }\r\n                </Container>\r\n                <Container key=\"artist-container\" className=\"mt-5\" fluid>\r\n                    { list.artistList ? \r\n                        <Container className=\"slider-container\" fluid>\r\n                            <h2 className={`category-list-heading ${isDark ? \"dark-heading\" : \"light-heading\"}`} title=\"Artists\">Artists</h2>\r\n                            <Slider {...settings}>\r\n                            { Object.keys(list.artistList).map((artist, id) => {\r\n                                return (\r\n                                    <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                        <Link to={`/artist/${artist}`} className={`artist-name ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                            <div className=\"artist-card-image-container d-flex\">\r\n                                                <img \r\n                                                    src={apiLinks.getArtistImgFromName + artist} \r\n                                                    alt={artist} \r\n                                                    className={`artist-card-image ${isDark ? \"dark\" : \"light\"}`}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"card-text-container mt-0\">\r\n                                                <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                                    <h4 className={`pt-3 pb-3 artist-name ${isDark ? \"hover-dark\" : \"hover-light\"}`} title={artist}>\r\n                                                            {artist}\r\n                                                    </h4>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                            </Slider>\r\n                        </Container>\r\n                    : Array.from(new Array(1)).map((item, index) => {\r\n                        return (\r\n                            <Container key={index} className=\" mt-3 slider-container\" fluid>\r\n                                <Skeleton sx={isDark ? {bgcolor: '#ffffff29'}: null} animation='wave' variant=\"h1\" width=\"30%\" height=\"3rem\" className=\"mb-3 mt-3\" />\r\n                                <Slider {...loaderSettings}>\r\n                                    {\r\n                                        Array.from(new Array(10)).map((dummy, idx) => {\r\n                                            return (\r\n                                                <React.Fragment>\r\n                                                    <div className=\"card-image-container\">\r\n                                                        <Skeleton sx={isDark ? {bgcolor: '#ffffff29'}: null} animation='wave' variant=\"circular\" height=\"100px\" width=\"100px\" className=\"card-image\" />\r\n                                                    </div>\r\n                                                    <div className=\"card-text-container\">\r\n                                                        <Skeleton sx={isDark ? {bgcolor: '#ffffff29'}: null} animation='wave' variant=\"text\" className=\"card-text\" />\r\n                                                    </div>\r\n                                                </React.Fragment>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </Slider>\r\n                            </Container>\r\n                        );\r\n                    }) \r\n                    }\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { IsDark } from '../App';\r\nimport Navigation from '../components/navigation/Navigation-bar/navigation';\r\n\r\nimport \"./Error.css\";\r\n\r\nconst Error = () => {\r\n  const isDark = useContext(IsDark);\r\n\r\n  return(\r\n      <React.Fragment>\r\n      <Navigation />\r\n      <div className='error-page'>\r\n          <h1 style={isDark ? { color: \"#eee\" } : { color: \"#000\" }}>Error: 404</h1>\r\n          <h3 style={isDark ? { color: \"#eee\" } : { color: \"#000\" }}> Page Not Found</h3>\r\n      </div>\r\n      </React.Fragment>\r\n  );  \r\n};\r\n\r\nexport default Error;","// for song list\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useContext } from \"react\";\r\nimport PlayCircle from \"@mui/icons-material/PlayCircle\";\r\nimport PauseCircle from \"@mui/icons-material/PauseCircle\";\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\n\r\nimport { CalculateTimeContext, SongList } from \"../../pages/Album\";\r\nimport { PlayerContext, PlayPause, Playing, LoadAudio, IsDark } from \"../../App\";\r\n\r\nimport \"./body.css\";\r\n\r\nconst Body = (props) => {\r\n    \r\n    const isDark = useContext(IsDark);\r\n    const paused = useContext(Playing);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentPlayer = useContext(PlayerContext);\r\n    const calculateTimeContext = useContext(CalculateTimeContext);\r\n\r\n    const [playId, setPlayId] = useState(0);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const updatePlayId = (value) => {\r\n        setPlayId(value);\r\n    };\r\n\r\n    const updatePlayPause = (event) => {\r\n        const e = {\r\n            ...event, \r\n            code: \"Space\",\r\n            preventDefault: () => {}\r\n        };\r\n\r\n        playPauseState(e);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container> \r\n                <div className=\"song-list\">\r\n                    {\r\n                        songList.map((song, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className={`table-row-${isDark ? \"dark\" : \"light\"}`}\r\n                                        key={song.id}\r\n                                        style={currentPlayer.id && currentPlayer.id === song.id ? {color: isDark ? \"#eee\" : \"#111\"}: null}\r\n                                        onMouseEnter={() => {updatePlayId(song.id)}}\r\n                                        onMouseLeave={() => {updatePlayId(0)}}\r\n                                        onClick={e => loadAudio(songList, song, e)}\r\n                                    >\r\n                                        <div className=\"srno-title\">\r\n                                            <div className=\"srno\">\r\n                                                {\r\n                                                    currentPlayer.id && currentPlayer.id === song.id ?\r\n                                                    <span\r\n                                                        onMouseEnter={() => setPlaying(true)}\r\n                                                        onMouseLeave={() => setPlaying(false)}\r\n                                                    > \r\n                                                        {\r\n                                                            !paused ?\r\n                                                                <PlayCircle \r\n                                                                    onClick = {e => updatePlayPause(e)}\r\n                                                                /> :\r\n                                                                playing ?\r\n                                                                    <PauseCircle \r\n                                                                        onClick = {e => updatePlayPause(e)}\r\n                                                                    />:\r\n                                                                    <EqualizerIcon />\r\n                                                        }\r\n                                                    </span>:\r\n                                                    playId === song.id ? \r\n                                                        <PlayCircle /> :\r\n                                                        index+1\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"title\">\r\n                                                <div className=\"music-title\">\r\n                                                    {song.musicTitle}\r\n                                                </div>\r\n                                                <div className=\"d-flex custom-artists\">\r\n                                                    {\r\n                                                        song.artists?.map((art, index) => {\r\n                                                            return(\r\n                                                                <div className=\"\" key={index}>\r\n                                                                    <span className=\"song-list-artist\">\r\n                                                                        {\r\n                                                                            art === \"Various Artists\" ? \r\n                                                                                art : \r\n                                                                                <Link to={`/artist/${art}`}>\r\n                                                                                        {art}\r\n                                                                                </Link>\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                    <span className=\"song-list-artist-separation\">\r\n                                                                        {song.artists.length - 1 > index ? \",\": \"\"}&nbsp;\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"duration\">\r\n                                                {song.duration ? calculateTimeContext(song.duration) : '--:--'}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        index < songList.length - 1 ? (\r\n                                            <div className=\"custom-bottom-border\" key={index} />\r\n                                        ) : <React.Fragment />\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;","import { Container } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useContext } from \"react\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\nimport PlayCircleFilledIcon from '@mui/icons-material/PlayCircleFilled';\r\n\r\nimport { IsDark, LoadAudio } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\nimport { CalculateTimeContext, SongList, Artists, Duration } from \"../../pages/Album\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const artists = useContext(Artists);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const totalDuration = useContext(Duration);\r\n    const calculateTotalDuration = useContext(CalculateTimeContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className=\"mt-3\">\r\n                <div className=\"album-container\">\r\n                    <div className={`album-image-container ${isDark ? \"dark\" : \"light\"}`}>\r\n                        <img \r\n                            className=\"album-image\"\r\n                            src={apiLinks.getImage + songList[0]?.musicImageKey} \r\n                            alt={songList[0]?.albumTitle} />\r\n                    </div>\r\n                    <div className=\"album-details\">\r\n                        <div className=\"album-heading\">\r\n                            Album\r\n                        </div>\r\n                        <div className=\"album-name\">\r\n                            {songList[0]?.albumTitle}\r\n                        </div>\r\n                        <div className=\"album-artists\">\r\n                            {\r\n                                artists.length > 2 ? \r\n                                    \"Various Artists\" : \r\n                                    artists?.map((artist, idx) => {\r\n                                        return (\r\n                                            <span key={idx}>\r\n                                                <Link className={`artist-${isDark ? \"dark\" : \"light\"}`} to={`/artist/${artist}`}>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                                {idx < (artists.length - 1) ? \" , \" : \" \"}\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                            } &nbsp; <CircleIcon style={{ fontSize: '.5rem' }} />&nbsp; { calculateTotalDuration(totalDuration) }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <PlayCircleFilledIcon \r\n                        className={`album-play-button ${isDark ? \"dark\" : \"light\"}`} \r\n                        onClick={(e) => loadAudio(songList, songList[0], e)}\r\n                    />\r\n                    \r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","// for related artists\r\nimport Slider from 'react-slick';\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { IsDark } from '../../App';\r\nimport { Artists } from \"../../pages/Album\";\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./footer.css\";\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n          breakpoint: 1200,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 991,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Footer = (props) => {\r\n\r\n    const isDark = useContext(IsDark);\r\n    let artistList = useContext(Artists);\r\n\r\n    artistList = artistList?.filter(artist => artist !== \"Various Artists\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container key=\"artist-container\" className=\"mt-5\">\r\n                { artistList.length ? \r\n                    <Container className=\"slider-container\">\r\n                        <h2 className={`category-list-heading ${isDark ? \"dark\" : \"light\"}`} title=\"Artists\">Album Artists</h2>\r\n                        <Slider {...settings}>\r\n                        { artistList.map((artist, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container\">\r\n                                        <img \r\n                                            src={apiLinks.getArtistImgFromName + artist} \r\n                                            alt={artist} \r\n                                            className=\"artist-card-image\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className=\"pt-3 pb-3 artist-name\" title={artist}>\r\n                                                <Link to={`/artist/${artist}`} className={`artist-name ${isDark ? \"dark\" : \"light\"}`}>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3\" fluid />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import { Bounce, toast } from 'react-toastify';\r\n\r\nexport const Success = (message, autoClose=3000) => {\r\n\r\n    toast.success(message, {\r\n        position: \"top-right\",\r\n        autoClose: autoClose,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnFocusLoss: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined\r\n    });\r\n};\r\n\r\nexport const Error = (message, autoClose=5000) => {\r\n\r\n    toast.error(message, {\r\n        position: \"top-right\",\r\n        autoClose: autoClose,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnFocusLoss: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        transition: Bounce\r\n    });\r\n};\r\n\r\n","import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport Body from \"../components/Album/body\";\r\nimport Header from \"../components/Album/header\";\r\nimport Footer from \"../components/Album/footer\";\r\nimport { apiLinks } from \"../connection.config\";\r\nimport { Error } from \"../components/Notification/Notification\";\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\nimport { PlayerContext, IsDark } from \"../App\";\r\n\r\nimport \"./album.css\";\r\n\r\nexport const Artists = React.createContext();\r\nexport const SongList = React.createContext();\r\nexport const Duration = React.createContext();\r\nexport const CalculateTimeContext = React.createContext();\r\n\r\nconst Album = (props) => {\r\n    const params = useParams();\r\n\r\n    const isDark = useContext(IsDark);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [songList, setSongList] = useState([]);\r\n    const [artists, setArtists] = useState([]); \r\n    const [totalDuration, setTotalDuration] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        const getAlbum = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAlbumDetails+params.albumName, {\r\n                    headers: {\r\n                        'content-type': \"application/json\"\r\n                    },\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const artist = [...new Set(response.data.message.map((songs) => songs.artists).flat())];\r\n                    const duration = response.data.message.reduce((partial_sum, a) => partial_sum + a.duration, 0);\r\n                    \r\n                    setArtists(artist);\r\n                    setTotalDuration(duration);\r\n                    setSongList(response.data.message);\r\n                    abortController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                // Error(err.message);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        getAlbum();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [params]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <div className={`page-content ${isDark ? \"dark\" : \"light\"}`}\r\n                style={currentSong.id ? {height: \"calc(100vh - 215px)\"} : {height: \"calc(100vh - 70px)\"}}> \r\n                <CalculateTimeContext.Provider value={calculateSongTime}>\r\n                    <SongList.Provider value={songList}>\r\n                        <Artists.Provider value={artists}>\r\n                            <Duration.Provider value={totalDuration}>\r\n                                <Header />\r\n                                <Body />\r\n                                <Footer />\r\n                            </Duration.Provider>\r\n                        </Artists.Provider>\r\n                    </SongList.Provider>\r\n                </CalculateTimeContext.Provider>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Album;\r\n","import React from 'react';\r\nimport { Row, Col, Label } from 'reactstrap';\r\nimport { TextField } from '@mui/material'\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\n\r\nconst TextInput = (props) => {\r\n\r\n    const label = {\r\n        inputProps: {\r\n            'aria-label': \"Favourite Check\"\r\n        }\r\n    };\r\n\r\n    const onCheckedChange = (event) => {\r\n        props.onCheckBoxChange(event.target.checked);\r\n    };\r\n\r\n    const onValueChange = (event) => {\r\n        props.onChange(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Row className='music-detail-fields'>\r\n            <Col className=\"mt-1 mb-1\" xs=\"5\">\r\n                <Label className=\"label-styling\" style={{justifyContent: \"flex-end\"}} for={props.id}>\r\n                    {\r\n                        props.required ? \r\n                        <>\r\n                            {props.labelName} <span style={{color: \"#f00\", alignSelf: \"flex-start\"}}>*</span>\r\n                        </> : \r\n                        props.labelName\r\n                    }\r\n                </Label>\r\n            </Col>\r\n            <Col className=\"mt-1 mb-1\" xs={props.check ? \"5\" : \"6\"}>\r\n                <TextField \r\n                    value={props.value}\r\n                    onChange={onValueChange}\r\n                    className=\"music-input-detail\"\r\n                    id={`standard-required ${props.id}`}\r\n                    label={props.label}\r\n                    variant=\"standard\"\r\n                />\r\n            </Col>\r\n            {\r\n                props.check ?\r\n                <Col className='mt-1 mb-1' xs=\"1\">\r\n                    <Checkbox onChange={onCheckedChange} checked={props.checkedValue} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                </Col> :\r\n                <React.Fragment />\r\n            }\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst NewImageUpload = (props) => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"image-preview\">\r\n                <img \r\n                    className='image-preview-img' \r\n                    src={props.musicImgPath} \r\n                    alt={props.musicImgName} \r\n                />\r\n            </div>\r\n            <div className='image-upload-button'>\r\n                <div className='music-upload-space d-flex justify-content-center align-items-center'>\r\n                    <span className='music-image-title'>\r\n                        \" {props.musicImgName === \"\" ? \"Select Image\" : props.musicImgName} \"\r\n                    </span>\r\n                    {\r\n                        props.musicImgName === \"\" ? <React.Fragment /> : \r\n                        <Button title='Remove Image' close onClick={props.removeSelectedImage} />\r\n                    }\r\n                </div>\r\n                <div className='music-upload-space'>\r\n                    <input \r\n                        accept='image/*'\r\n                        type=\"file\" \r\n                        onChange={props.uploadMusicImage} \r\n                        ref={props.hiddenFileInput}\r\n                        style={{display: \"none\"}}\r\n                    />\r\n                    <Button \r\n                        onClick={props.handleClick}\r\n                        color='dark'\r\n                        outline={true}\r\n                    >\r\n                        Upload Image\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewImageUpload;","import React, {useRef, useState} from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport NewImageUpload from './newImageUpload';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\nimport { apiLinks } from '../../connection.config';\r\nimport * as serviceWorker from \"../../client/index\";\r\nimport { Error, Success } from '../Notification/Notification';\r\n\r\nconst AddNewModal = (props) => {\r\n\r\n    const hiddenFileInput = useRef(null);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [url, setUrl] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [checkBoxChecked, setCheckBoxChecked] = useState(false);\r\n\r\n    const [artistImg, setArtistImg] = useState({});\r\n    const [artistImgName, setArtistImgName] = useState('');\r\n    const [artistImgPath, setArtistPath] = useState('/assets/images/artist-design.png');\r\n  \r\n    const handleClick = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n        \r\n    const uploadArtistImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setArtistImg(event.target.files);\r\n            setArtistImgName(event.target.files[0].name);\r\n            setArtistPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n\r\n    const removeSelectedImage = () => {\r\n        setArtistImg({});\r\n        setArtistImgName('');\r\n        setArtistPath('/assets/images/artist-design.png');\r\n    };\r\n\r\n    const setData = (response) => {\r\n        if( (props.tabId === 2 && props.id === '1') ||\r\n            (props.tabId === 3 && props.id === '2') ||\r\n            (props.tabId === 4 && props.id === '3') ||\r\n            (props.tabId === 5 && props.id === '4') ||\r\n            (props.tabId === 6 && props.id === '5')){\r\n                if(props.tabId === 2){\r\n                    props.artistRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 3){\r\n                    props.genreRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 4){\r\n                    props.categoryRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 5){\r\n                    props.broadcastRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 6){\r\n                    props.playlistRows.push(...(response.data.rowData));\r\n                }\r\n                else{\r\n                    Error(\"Unable to update search list by tabId\");\r\n                }\r\n            }\r\n    };\r\n\r\n    const addDetail = async () => {\r\n        let controller = new AbortController();\r\n\r\n        try{\r\n\r\n            setLoader(true);\r\n            const names = name.split(',').map(nam => nam.trim());\r\n            \r\n            const formData = new FormData();\r\n            formData.append('names', names);\r\n            formData.append(\"show\", checkBoxChecked);\r\n            let response = {};\r\n\r\n            if(props.id === '1'){\r\n                formData.append('artistImg', artistImg[0]);\r\n                response = await axios.post(apiLinks.addArtists, formData, {\r\n                    signal: controller.signal\r\n                });\r\n            }\r\n            else if(props.id === '2'){\r\n                response = await axios.post(apiLinks.addGenre, {\r\n                    types: names,\r\n                    show: checkBoxChecked,\r\n                }, {\r\n                    signal: controller.signal,\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === \"3\"){\r\n                response = await axios.post(apiLinks.addCategory, {\r\n                    types: names,\r\n                    show: checkBoxChecked,\r\n                }, {\r\n                    signal: controller.signal,\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === '4'){\r\n                formData.append(\"url\", url);\r\n                formData.append(\"body\", body);\r\n                formData.append(\"title\", name);\r\n                formData.append('image', artistImg[0]);\r\n\r\n                const today = new Date().toISOString();\r\n                formData.append(\"today\", today);\r\n                \r\n                response = await serviceWorker.Broadcast(formData);\r\n            }\r\n            else{\r\n                formData.append(\"name\", name);\r\n                formData.append('image', artistImg[0]);\r\n                response = await axios.post(apiLinks.createPlaylist, formData, {\r\n                    signal: controller.signal\r\n                });\r\n            }\r\n\r\n            if(Object.keys(response).length === 0 && response.constructor === Object){\r\n                const error = new Error();\r\n                error.message = \"Something went wrong, could add data now\";\r\n                throw error;\r\n            }\r\n            else{\r\n                if(response.data.code === 200){\r\n                    controller = null;\r\n                    Success(response.data.message);\r\n                    setData(response);\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err.message, err);\r\n        }\r\n        finally{\r\n            controller?.abort();\r\n            setLoader(false);\r\n            props.toggle(false);\r\n        }\r\n    };\r\n\r\n    const removeDetail = () => {\r\n        setName('');\r\n        setCheckBoxChecked(false);\r\n        removeSelectedImage();\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            \r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n\r\n            <Modal\r\n                isOpen={true}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='lg'\r\n                toggle={() => props.toggle(false)}\r\n            >\r\n                <ModalHeader toggle={() => props.toggle(false)}>\r\n                    <span className='modal-header-title'>\r\n                        {props.header}\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {props.id === '1' || props.id === \"4\" || props.id === \"5\" ? \r\n                        <NewImageUpload \r\n                            musicImgName={artistImgName}\r\n                            musicImgPath={artistImgPath}\r\n                            removeSelectedImage={removeSelectedImage}\r\n                            uploadMusicImage={uploadArtistImage}\r\n                            hiddenFileInput={hiddenFileInput}\r\n                            handleClick={handleClick}\r\n                        /> : \r\n                        <React.Fragment />\r\n                    }\r\n                    <TextInput \r\n                        id={props.id}\r\n                        required\r\n                        check={props.id === \"4\" ? false : true}\r\n                        labelName={props.id === \"5\" ? \"Add New Playlist\" : props.id === '4' ? \"Add BroadCast Title\" : \r\n                                    props.id === \"1\" ? \"Add New Name\" : \"Add New Type\"}\r\n                        label={props.id === \"5\" ? \"Add Playlist Name\" : props.id === '4' ? \"Add BroadCast Heading\" : \r\n                                    props.id === \"1\" ? \"Enter Artist Name\" : \"Enter Comma separated Types\"}\r\n                        value={name}\r\n                        onChange={setName}\r\n                        checkedValue={checkBoxChecked}\r\n                        onCheckBoxChange={setCheckBoxChecked}\r\n                    />\r\n                    {\r\n                        props.id === '4' ? \r\n                        <React.Fragment>\r\n                            <TextInput \r\n                                id={props.id}\r\n                                required\r\n                                check={false}\r\n                                labelName=\"Add Broadcast Body\"\r\n                                label=\"Add Broadcast Content\"\r\n                                value={body}\r\n                                onChange={setBody}\r\n                                checkedValue={checkBoxChecked}\r\n                                onCheckBoxChange={setCheckBoxChecked}\r\n                            />\r\n                            <TextInput \r\n                                id={props.id}\r\n                                required\r\n                                check={false}\r\n                                labelName=\"Add Broadcast Nav Link\"\r\n                                label=\"Add Relative Link\"\r\n                                value={url}\r\n                                onChange={setUrl}\r\n                                checkedValue={checkBoxChecked}\r\n                                onCheckBoxChange={setCheckBoxChecked}\r\n                            /> \r\n                        </React.Fragment>\r\n                        : \r\n                        <React.Fragment />\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={addDetail}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeDetail}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddNewModal;\r\n","import React from 'react';\r\nimport { Row, Col, Label } from 'reactstrap';\r\nimport { InputLabel, Select, OutlinedInput, MenuItem, \r\n        Checkbox, ListItemText, FormControl} from '@mui/material';\r\n\r\nconst CheckBoxInput = (props) => {\r\n    \r\n    return (\r\n        <FormControl sx={{width: '100%'}}>\r\n            <Row className='music-detail-fields'>\r\n                <Col className=\"mt-2 mb-3\" xs=\"5\">\r\n                    <Label className=\"label-styling-checkbox\" style={{ justifyContent: \"flex-end\" }}\r\n                        for={props.id}>\r\n                        {props.labelName}\r\n                    </Label>\r\n                </Col>\r\n                <Col className=\"mt-2 mb-3\" xs=\"7\">\r\n                    <InputLabel \r\n                        id={`demo-multiple-checkbox-label ${props.id}`}\r\n                        className=\"customized-form-label\"\r\n                    >\r\n                        {props.label}\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-multiple-checkbox-label\"\r\n                        id=\"demo-multiple-checkbox\"\r\n                        multiple\r\n                        className=\"music-input-detail\"\r\n                        value={props.type}\r\n                        onChange={props.handleChange}\r\n                        input={<OutlinedInput label=\"Tag\" />}\r\n                        renderValue={(selected) => {\r\n                            if(selected.length === 0){\r\n                                return <em>Select Artist</em>;\r\n                            }\r\n                            return selected.join(', ');\r\n                        }}\r\n                        MenuProps={props.MenuProps}\r\n                    >\r\n                    {props.names.map((name) => (\r\n                        <MenuItem key={Math.floor(Math.random() * 10000 + 1)} value={name.name || name.type || name}>\r\n                            <Checkbox checked={props.type.indexOf(name.name || name.type || name) > -1} />\r\n                            <ListItemText primary={name.name || name.type || name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default CheckBoxInput;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport CheckBoxInput from './checkBoxInput';\r\nimport NewImageUpload from './newImageUpload';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n    style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n    },\r\n    },\r\n};\r\n\r\nconst NewMusicAdd = (props) => {\r\n\r\n    const [genreList, setGenreList] = useState([]);\r\n    const [artistList, setArtistList] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n\r\n    const {genre, category, musicName, artist, musicImgPath, musicImgName, addMusicWidget, hiddenFileInput, musicDuration,\r\n        hiddenMusicInput, uploadMusic, handleClick, handleChange, saveUploadMusic, handleMusicClick, fav, setFav,\r\n        uploadMusicImage, handleGenreChange, removeMusicDetails, removeSelectedSong, removeSelectedImage,\r\n        updateAddMusicWidget, handleCategoryChange, musicTitle, albumTitle, setMusicTitle, setAlbumTitle} = props;\r\n\r\n    useEffect(() => {\r\n\r\n        let genreController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let categoryController = new AbortController();\r\n\r\n        const getGenreList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setGenreList(data);\r\n                    genreController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setGenreList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setGenreList([]);\r\n            }\r\n        };\r\n        \r\n        const getArtistList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setArtistList(data);\r\n                    artistController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setArtistList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setArtistList([]);\r\n            }\r\n        };\r\n\r\n        const getCategoryList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setCategoryList(data);\r\n                    categoryController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setCategoryList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setCategoryList([]);\r\n            }\r\n        };\r\n\r\n        getGenreList();\r\n        getArtistList();\r\n        getCategoryList();\r\n\r\n        return () => {\r\n            genreController?.abort();\r\n            artistController?.abort();\r\n            categoryController?.abort();\r\n        };\r\n\r\n    }, []);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Modal\r\n                isOpen={addMusicWidget}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='xl'\r\n                toggle={updateAddMusicWidget}\r\n            >\r\n                <ModalHeader toggle={updateAddMusicWidget}>\r\n                    <span className='modal-header-title'>\r\n                        Add New Song\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <div className='music-details'>\r\n                                \r\n\r\n                                <TextInput \r\n                                    required\r\n                                    id=\"song-name\"\r\n                                    labelName=\"Song Name\"\r\n                                    label=\"Enter Song Name\"\r\n                                    check={true}\r\n                                    value={musicTitle}\r\n                                    onChange={setMusicTitle}\r\n                                    checkedValue={fav}\r\n                                    onCheckBoxChange={setFav}\r\n                                />\r\n                                <TextInput \r\n                                    id=\"album-name\"\r\n                                    labelName=\"Album Name\"\r\n                                    label=\"Enter Album Name\"\r\n                                    value={albumTitle}\r\n                                    onChange={setAlbumTitle}\r\n                                />\r\n\r\n                                <CheckBoxInput \r\n                                    id=\"artist-name\" labelName=\"Artist Name\"\r\n                                    label=\"Select Artist\" type={artist}\r\n                                    handleChange={handleChange} MenuProps={MenuProps}\r\n                                    names={artistList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"genre-name\" labelName=\"Genre Name\"\r\n                                    label=\"Select Genre\" type={genre}\r\n                                    handleChange={handleGenreChange} MenuProps={MenuProps}\r\n                                    names={genreList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"category-name\" labelName=\"Category Name\"\r\n                                    label=\"Select Category\" type={category}\r\n                                    handleChange={handleCategoryChange} MenuProps={MenuProps}\r\n                                    names={categoryList}\r\n                                />\r\n\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n\r\n                            <Row>\r\n                                <div className='music-upload-button'>\r\n                                    <div className='music-upload-detail d-flex justify-content-center align-items-center'>\r\n                                        <span className='music-image-title' style={{textAlign: \"center\"}}>\r\n                                            <div>\r\n                                                \" {musicName.trim().length === 0 ? \"Select File\" : musicName} \"\r\n                                            </div>\r\n                                            <div>\r\n                                                Duration: {musicDuration !== 0 ? calculateSongTime(musicDuration) : '00:00'}\r\n                                            </div>\r\n                                        </span>\r\n                                        {musicName.trim().length === 0 ? \r\n                                            <React.Fragment /> : \r\n                                            <Button close title='Remove song' onClick={removeSelectedSong}/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className='music-upload-detail'>\r\n                                        <input \r\n                                            type=\"file\" \r\n                                            accept='audio/*'\r\n                                            onChange={uploadMusic} \r\n                                            ref={hiddenMusicInput}\r\n                                            style={{display: \"none\"}}\r\n                                        />\r\n                                        <Button \r\n                                            onClick={handleMusicClick}\r\n                                            color='dark'\r\n                                            outline={true}\r\n                                        >\r\n                                            Upload Song\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Row>\r\n\r\n                            <NewImageUpload \r\n                                musicImgName={musicImgName}\r\n                                musicImgPath={musicImgPath}\r\n                                removeSelectedImage={removeSelectedImage}\r\n                                uploadMusicImage={uploadMusicImage}\r\n                                hiddenFileInput={hiddenFileInput}\r\n                                handleClick={handleClick}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={saveUploadMusic}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeMusicDetails}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewMusicAdd;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'type', label: 'Genre Type', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst GenreTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n  \r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminGenreFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                              : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? (`${(rowsPerPage*page) + (index+1)}.`) : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editGenre(row.id, 'genre')} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default GenreTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'title', label: 'Title', minWidth: 100, align: \"left\" },\r\n  { id: 'body', label: 'Body', minWidth: 100, align: \"left\" },\r\n  { id: 'timestamp', label: 'Time', minWidth: 100, align: \"center\" },\r\n];\r\n\r\nconst BroadcastTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminCategoryFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default BroadcastTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'name', label: 'Artist Name', minWidth: 150, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst ArtistsTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminArtistFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editArtist(row.id, \"artist\")} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ArtistsTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: \"Sr. No.\", minWidth: 80, align: \"center\" },\r\n  { id: 'musicTitle', label: 'Music Name', minWidth: 170 },\r\n  { id: 'albumTitle', label: 'Album Name', minWidth: 130 },\r\n  { id: 'artists', label: 'Artists', minWidth: 70 },\r\n  { id: 'genre', label: 'Genre', minWidth: 70 },\r\n  { id: 'category', label: 'Category', minWidth: 70 },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nexport default function StickyHeadTable(props) {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminMusicFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className={`admin-table-content admin-table-heading ${isDark ? \"dark\" : \"light\"}`}\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell\r\n                  className={`admin-table-content admin-table-heading ${isDark ? \"dark\" : \"light\"}`}\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className={`admin-table-content admin-table-heading ${isDark ? \"dark\" : \"light\"}`}\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                        let value;\r\n                        if(column.id !== 'srno')\r\n                          value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div key={item} className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === \"srno\" ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.floor(Math.random() * 10000 + 1)} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editRow(row.id)} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.floor(Math.random() * 10000 + 1)} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'type', label: 'Category Type', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst CategoryTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminCategoryFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} \r\n                                  {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editCategory(row.id, 'category')} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default CategoryTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext, useRef } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { blue } from '@mui/material/colors';\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\nimport ViewListIcon from '@mui/icons-material/ViewList';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nimport Button from '@mui/material/Button';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from '../Notification/Notification';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'playlist_name', label: 'Playlist Title', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst commands = [  {name: 'Edit Playlist Name', icon: <DriveFileRenameOutlineIcon />}, \r\n                    {name: 'Add / Remove Songs', icon: <ViewListIcon />}];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst SimpleDialog = (props) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleClose = () => {\r\n        onClose(-1);\r\n    };\r\n\r\n    const handleListItemClick = (value) => {\r\n        onClose(commands.findIndex(command => command.name === value.name));\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <DialogTitle>Select Edit Type</DialogTitle>\r\n            <List sx={{ pt: 0 }}>\r\n                {commands.map((command) => (\r\n                    <ListItem button onClick={() => handleListItemClick(command)} key={command.name}>\r\n                        <ListItemAvatar>\r\n                            <Avatar sx={{ bgcolor: blue[100], color: blue[600] }}>\r\n                                {command.icon}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={command.name} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst PlaylistTable = (props) => {\r\n    const descriptionElementRef = useRef(null);\r\n\r\n    const { setRows } = props;\r\n\r\n    const isDark = useContext(IsDark);\r\n\r\n    const label = {\r\n        inputProps: {\r\n            'aria-label': \"Favourite Check\"\r\n        }\r\n    };\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const rows = props.rows || [];\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [updateElement, setUpdateElement] = useState(0);\r\n\r\n    const [openMusicList, setOpenMusicList] = useState(false);\r\n    const [editMusicList, setEditMusicList] = useState({});\r\n    const [existingMusicList, setExistingMusicList] = useState([]);\r\n\r\n    const [openAddMusicList, setOpenAddMusicList] = useState(false);\r\n    const [addMusicList, setAddMusicList] = useState([]);\r\n    const [checked, setChecked] = useState([]);\r\n\r\n    const handleAddMusicOpen = async () => {\r\n        try{\r\n            setLoader(true);\r\n            const response = await axios.get(apiLinks.getMusicIdNameAlbum);\r\n            if(response.data.code === 200){\r\n                setChecked([...existingMusicList]);\r\n                setAddMusicList(response.data.message);\r\n            }\r\n            else{\r\n                setAddMusicList([]);\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error while getting music list\", err);\r\n            setAddMusicList([]);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n        setOpenAddMusicList(true);\r\n    };\r\n\r\n    const handleAddMusicClose = () => {\r\n        setAddMusicList([]);\r\n        setChecked([]);\r\n        setOpenAddMusicList(false);\r\n    };\r\n\r\n    const saveAddMusic = async () => {\r\n        let abortController = new AbortController();\r\n        try{\r\n            setLoader(true);\r\n            const songId = checked.map(item => item.id);\r\n            const response = await axios.put(apiLinks.updatePlaylistSongs+editMusicList.id, \r\n                {\r\n                    data: songId,\r\n                }, \r\n                {\r\n                    signal: abortController.signal,\r\n                }\r\n            );\r\n            if(response.data.code === 200){\r\n                abortController = null;\r\n                Success(response.data.message);\r\n                handleAddMusicClose();\r\n                handleSongListClose();\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error Occured while saving playlist data\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n\r\n        abortController?.abort();\r\n    };\r\n\r\n    const handleClickOpen = (id) => {\r\n        setUpdateElement(id);\r\n        setOpen(true);\r\n    };\r\n\r\n    const getSelectedPlaylistSongs = async (playlist) => {\r\n        let signalAborter = new AbortController();\r\n\r\n        try{\r\n            setLoader(true);\r\n            const response = await axios.get(apiLinks.getPlaylistById+playlist.id, {\r\n                signal: signalAborter.signal\r\n            });\r\n\r\n            if(response.data.code === 200){\r\n                setExistingMusicList(response.data.message);\r\n                signalAborter = null;\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n                setExistingMusicList([]);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error while fetching playlist song list\", err);\r\n            Error(err.message);\r\n            setExistingMusicList([]);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n        signalAborter?.abort();\r\n    };\r\n\r\n    const handleClose = (index) => {\r\n        if(index === -1){\r\n            setUpdateElement(0);\r\n        }\r\n        else if(index === 0){\r\n            props.editPlaylist(updateElement, \"playlist\");\r\n        }\r\n        else if(index === 1){\r\n            const list = rows.filter(row => row.id === updateElement);\r\n            setEditMusicList(list[0]);\r\n            getSelectedPlaylistSongs(list[0]);\r\n            setOpenMusicList(prev => !prev);\r\n        }\r\n        else{\r\n            Error(\"Invalid Dialog Option Selected\");\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSongListClose = () => {\r\n        setExistingMusicList([]);\r\n        setOpenMusicList(false);\r\n    };\r\n\r\n    const handleSongListSave = async () => {\r\n        let abortController = new AbortController();\r\n        try{\r\n            setLoader(true);\r\n            const songId = existingMusicList.map(item => item.id);\r\n            const response = await axios.put(apiLinks.updatePlaylistSongs+editMusicList.id, \r\n                {\r\n                    data: songId,\r\n                },\r\n                {\r\n                    signal: abortController.signal,\r\n                }\r\n            );\r\n            if(response.data.code === 200){\r\n                abortController = null;\r\n                Success(response.data.message);\r\n                handleSongListClose();\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error Occured while saving playlist data\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n        abortController?.abort();\r\n    };\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n        mode: isDark ? \"dark\" : \"light\"\r\n        }\r\n    });\r\n\r\n    const handleToggle = (value) => {\r\n        const currentIndex = checked.findIndex(check => check.id === value.id);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } \r\n        else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const deletePlaylistSong = (item) => {\r\n        const index = existingMusicList.findIndex(music => music.id === item.id);\r\n        if(index === -1){\r\n            Error(\"Invalid Item\");\r\n        }\r\n        else{\r\n            const newList = [...existingMusicList];\r\n            newList.splice(index, 1);\r\n            setExistingMusicList(newList);\r\n        }\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [props.rows]);\r\n\r\n    const updateFavState = async (checked, id) => {\r\n        try{\r\n        const response = await axios.put(apiLinks.updateAdminPlaylistFav+id, {\r\n            state: !checked\r\n        }, {\r\n            headers: {\r\n            'content-type': \"application/json\"\r\n            }\r\n        });\r\n        if(response.data.code === 200){\r\n            const data = props.rows.filter(row => row.id === id);\r\n            data[0].show = !checked;\r\n            setRows(prev => prev.filter(row => {\r\n                if(row.id === id){\r\n                return data;\r\n                }\r\n                else{\r\n                return row;\r\n                }\r\n            }))\r\n            // Success(response.data.message);\r\n        }\r\n        else{\r\n            console.log(\"Error Occured\", response.data.message);\r\n            // Error(response.data.message);\r\n        }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            Error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n        \r\n        <SimpleDialog\r\n            open={open}\r\n            onClose={handleClose}\r\n        />\r\n\r\n        <Dialog\r\n            fullScreen\r\n            open={openMusicList}\r\n            onClose={handleSongListClose}\r\n            TransitionComponent={Transition}\r\n        >\r\n            <AppBar sx={{ position: 'relative' }}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={handleSongListClose}\r\n                        aria-label=\"close\"\r\n                    >\r\n                    <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                        Add / Remove Songs\r\n                    </Typography>\r\n                    <Button autoFocus color=\"inherit\" onClick={handleAddMusicOpen}>\r\n                        Add\r\n                    </Button>\r\n                    <Button autoFocus color=\"inherit\" onClick={handleSongListSave}>\r\n                        Save\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <List dense={false}>\r\n                {\r\n                    existingMusicList.length !== 0 ? \r\n                        existingMusicList.map(item => {\r\n                            return (\r\n                                <ListItem \r\n                                    key={item.id}\r\n                                    secondaryAction={\r\n                                        <IconButton edge=\"end\" aria-label=\"delete\" \r\n                                            onClick={() => deletePlaylistSong(item)}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                >\r\n                                    <ListItemAvatar>\r\n                                        <Avatar\r\n                                            alt={item.musicTitle}\r\n                                            src={apiLinks.getImage+item.musicImageKey}\r\n                                        />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={item.musicTitle}\r\n                                        secondary={item.albumTitle}\r\n                                    />\r\n                                </ListItem>\r\n                            )\r\n                        }) :\r\n                        <DialogContentText\r\n                            id=\"scroll-dialog-description\"\r\n                            ref={descriptionElementRef}\r\n                            tabIndex={-1}\r\n                        >\r\n                            <span style={{ textAlign: \"center\", display: \"block\", fontSize: \"1.5rem\" }}>\r\n                                'Songs are not available'\r\n                            </span>\r\n                        </DialogContentText>\r\n                }\r\n            </List>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n            open={openAddMusicList}\r\n            onClose={handleAddMusicClose}\r\n            scroll={'paper'}\r\n            aria-labelledby=\"scroll-dialog-title\"\r\n            aria-describedby=\"scroll-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"scroll-dialog-title\">Add Songs to \"{editMusicList['playlist_name']}\"</DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                    {\r\n                        addMusicList.length !== 0 ? \r\n                        <List dense sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                            {addMusicList.map((value) => {\r\n                                const labelId = `checkbox-list-secondary-label-${value.id}`;\r\n                                return (\r\n                                    <ListItem\r\n                                        key={value.id}\r\n                                        secondaryAction={\r\n                                            <Checkbox\r\n                                                edge=\"end\"\r\n                                                onChange={() => handleToggle(value)}\r\n                                                checked={checked.findIndex(music => music.id === value.id) !== -1}\r\n                                                inputProps={{ 'aria-labelledby': labelId }}\r\n                                            />\r\n                                        }\r\n                                        disablePadding\r\n                                    >\r\n                                        <ListItemButton>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar\r\n                                                alt={value.musicTitle}\r\n                                                src={apiLinks.getImage+value.musicImageKey}\r\n                                            />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText id={labelId} primary={value.musicTitle} secondary={value.albumTitle} />\r\n                                        </ListItemButton>\r\n                                    </ListItem>\r\n                                );\r\n                            })}\r\n                        </List> :\r\n                        <DialogContentText\r\n                            id=\"scroll-dialog-description\"\r\n                            ref={descriptionElementRef}\r\n                            tabIndex={-1}\r\n                        >\r\n                            <span style={{ textAlign: \"center\", display: \"block\" }}>\r\n                                'Songs are not available'\r\n                            </span>\r\n                        </DialogContentText>\r\n                    }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleAddMusicClose}>Cancel</Button>\r\n                <Button onClick={saveAddMusic}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        {\r\n            loader ?\r\n            <SpinnerGrow /> :\r\n            <React.Fragment />\r\n        }\r\n\r\n        <ThemeProvider theme={theme}>\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n            <TableContainer>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                <TableRow>\r\n\r\n                    {columns.map((column) => (\r\n                    <TableCell\r\n                        className=\"admin-table-content admin-table-heading\"\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                    > \r\n                        {column.label}\r\n                    </TableCell>\r\n                    ))}\r\n\r\n                    <TableCell\r\n                        className=\"admin-table-content admin-table-heading\"\r\n                        align='center'\r\n                        key=\"edit\"\r\n                        style={{ maxWidth: 60 }}\r\n                    >\r\n                        Edit\r\n                    </TableCell>\r\n\r\n                    <TableCell\r\n                        className=\"admin-table-content admin-table-heading\"\r\n                        align=\"center\"\r\n                        key=\"delete\"\r\n                        style={{ maxWidth: 100 }}\r\n                    >\r\n                        Delete\r\n                    </TableCell>\r\n\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {rows\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row, index) => {\r\n                    return (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                        {columns.map((column, idx) => {\r\n                            let value;\r\n                            if(column.id !== 'srno')\r\n                                value = row[column.id];\r\n                            return (\r\n                            <TableCell\r\n                                className=\"admin-table-content\" key={idx} align={column.align}>\r\n                                {typeof value === 'object' ? \r\n                                value.map((item) => {\r\n                                    return (\r\n                                    <div className=\"admin-table-array-setup\">\r\n                                        <ArrowRightIcon />\r\n                                        {item}\r\n                                    </div>\r\n                                    );\r\n                                })\r\n                                : column.id === 'show' ? \r\n                                <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                                : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                            </TableCell>\r\n                            );\r\n                        })}\r\n                        <TableCell\r\n                            className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                            <Edit className=\"table-edit-delete-button\" onClick={() => handleClickOpen(row.id)} />\r\n                        </TableCell>\r\n                        <TableCell\r\n                            className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                            <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                        </TableCell>\r\n                        </TableRow>\r\n                    );\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n            className=\"custom-table-pagination\"\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n        </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlaylistTable;\r\n","import React from 'react';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\nexport const DeleteWarning = (props) => {\r\n\r\n    return (\r\n        <Modal \r\n            centered={true}\r\n            scrollable={false}\r\n            backdrop\r\n            isOpen={true}\r\n            toggle={() => props.toggle()}\r\n        >   \r\n            <ModalHeader \r\n                toggle={() => props.toggle()}\r\n            >\r\n                Warning\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                Are you sure to delete \"{props.musicTitle}\" ?\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    outline\r\n                    onClick={() => props.deleteRow()}\r\n                    color=\"success\"\r\n                >\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                        Confirm <DoneIcon /> \r\n                    </div>\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport { apiLinks } from '../../connection.config';\r\n\r\nconst EditImageUpload = (props) => {\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"image-preview\">\r\n                <img \r\n                    className='image-preview-img' \r\n                    src={props.musicImgPath || (props.imageKey && (apiLinks.getImage + props.imageKey))} \r\n                    alt={props.artistImgName || props.musicImgName} \r\n                />\r\n            </div>\r\n            <div className='image-upload-button'>\r\n                <div className='music-upload-space'>\r\n                    <span className='music-image-title' style={{ flexDirection: \"row\" }}>\r\n                        \" {props.artistImgName !== \"\" ? props.artistImgName : props.imageKey} \" &nbsp;&nbsp;\r\n                        <input \r\n                            accept='image/*'\r\n                            type=\"file\" \r\n                            onChange={props.uploadMusicImage} \r\n                            ref={props.hiddenFileInput}\r\n                            style={{display: \"none\"}}\r\n                        />\r\n                        {\r\n                            props.musicImgName === \"\" ? \r\n                                <React.Fragment /> : \r\n                                <Button \r\n                                    onClick={props.handleClick}\r\n                                    color='dark'\r\n                                    outline={true}\r\n                                    style={{\r\n                                        padding: \"2px 6px\",\r\n                                        display: \"flex\",\r\n                                    }}\r\n                                >\r\n                                    <EditIcon title=\"Edit Image\" />\r\n                                </Button>\r\n                        }\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditImageUpload;","import axios from 'axios';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport PlayCircleIcon from '@mui/icons-material/PlayCircle';\r\nimport StopCircleIcon from '@mui/icons-material/StopCircle';\r\nimport PauseCircleIcon from '@mui/icons-material/PauseCircle';\r\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\r\n\r\nimport TextInput from './textInput';\r\nimport CheckBoxInput from './checkBoxInput';\r\nimport EditImageUpload from './editImageUpload';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from \"../Notification/Notification\";\r\nimport { SpinnerRotate } from \"../spinner/spinner-grow\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n    style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n    },\r\n    },\r\n};\r\n\r\nconst EditExistingMusic = (props) => {\r\n    \r\n    const audioRef = useRef();\r\n\r\n    const [load, setLoad] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [currentPaused, setCurrentPaused] = useState(false);\r\n\r\n    const [musicKey, setMusicKey] = useState(\"\");\r\n    const [musicImgKey, setMusicImgKey] = useState(\"\");\r\n\r\n    const {genre, category, artist, musicTitle, albumTitle, editMusicWidget, editId, hiddenMusicInput,\r\n            handleChange,  setMusicTitle, setLoader, updateRow, fav, setFav, uploadMusic, musicName, \r\n            setAlbumTitle, handleGenreChange, handleCategoryChange, handleMusicClick, musicPath, \r\n            updateEditMusicWidget, hiddenFileInput, musicDuration } = props;\r\n\r\n    const [genreList, setGenreList] = useState([]);\r\n    const [artistList, setArtistList] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    \r\n    const [artistImg, setArtistImg] = useState({});\r\n    const [artistImgPath, setArtistPath] = useState('');\r\n    const [artistImgName, setArtistImgName] = useState('');\r\n  \r\n    const closeWidget = () => {\r\n        updateEditMusicWidget();\r\n    };\r\n\r\n    const handleClick = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n\r\n    const uploadArtistImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setArtistImg(event.target.files);\r\n            setArtistImgName(event.target.files[0].name);\r\n            setArtistPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n\r\n    const stopSong = () => {\r\n        \r\n        audioRef.current.pause();\r\n        audioRef.current.currentTime = 0;\r\n        \r\n        setPlaying(prev => !prev);\r\n        if(currentPaused)\r\n            setCurrentPaused(prev => !prev);\r\n    };\r\n\r\n    const pauseSong = () => {\r\n        if(currentPaused)\r\n            audioRef.current.play();\r\n        else\r\n            audioRef.current.pause();\r\n        setCurrentPaused(prev => !prev);\r\n    };\r\n\r\n    const updateSongState = async () => {\r\n        if(musicPath.length){\r\n            audioRef.current.src = URL.createObjectURL(musicPath[0]);\r\n        }\r\n        setPlaying(prev => !prev);\r\n        if(playing === false){\r\n            try{\r\n                setLoad(true);\r\n                audioRef.current.play();\r\n                audioRef.current.onended = () => {\r\n                    setCurrentPaused(prev => !prev);\r\n                    setPlaying(prev => !prev);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured while fetching audio\", err);\r\n                Error(err.message);\r\n            }\r\n            finally{\r\n\r\n                if(audioRef.current){\r\n                    audioRef.current.oncanplaythrough  = () => {\r\n                        setLoad(false);\r\n                    }\r\n\r\n                    if(!(audioRef.current.paused) && audioRef.current.readyState > 0)\r\n                        setLoad(false);\r\n                }\r\n\r\n            }\r\n        }\r\n        else{\r\n            audioRef.current.pause();\r\n        }\r\n    };\r\n\r\n    const saveEditFile = async () => {\r\n\r\n        try{\r\n            setLoader(true);\r\n            \r\n            const today = new Date().toISOString();\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"show\", fav);\r\n            formData.append(\"date\", today);\r\n            formData.append(\"musicTitle\", musicTitle);\r\n            formData.append(\"albumTitle\", albumTitle);\r\n            formData.append(\"songImage\", artistImg[0]);\r\n            formData.append(\"musicFile\", musicPath[0]);\r\n            formData.append(\"duration\", musicDuration);\r\n            formData.append(\"genre\", JSON.stringify(genre));\r\n            formData.append(\"artist\", JSON.stringify(artist));\r\n            formData.append(\"category\", JSON.stringify(category));\r\n\r\n            const response = await axios.put(apiLinks.updateAdminData+editId, formData, {\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                }\r\n            });\r\n            \r\n            if(response.data.code === 200){\r\n                updateRow(response.data.data);\r\n                Success(response.data.message);\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error Occured while updating data\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n            closeWidget();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let imgFileController = new AbortController();\r\n        let audioFileController = new AbortController();\r\n\r\n        const getImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getImageKey+editId, {\r\n                    signal: imgFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.musicImageKey);\r\n                    imgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        getImageFileKey();\r\n\r\n        const getAudioFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAudioKey+editId, {\r\n                    signal: audioFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicKey(response.data.message.musicKey);\r\n                    audioFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        getAudioFileKey();\r\n\r\n        return () => {\r\n            imgFileController?.abort();\r\n            audioFileController?.abort();\r\n        }\r\n\r\n    }, [editId]);\r\n\r\n    useEffect(() => {\r\n\r\n        let genreController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let categoryController = new AbortController();\r\n\r\n        const getGenreList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.type);\r\n                    setGenreList(data);\r\n                    genreController =  null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setGenreList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setGenreList([]);\r\n            }\r\n        };\r\n        \r\n        const getArtistList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.name);\r\n                    setArtistList(data);\r\n                    artistController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setArtistList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setArtistList([]);\r\n            }\r\n        };\r\n\r\n        const getCategoryList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.type);\r\n                    setCategoryList(data);\r\n                    categoryController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setCategoryList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setCategoryList([]);\r\n            }\r\n        };\r\n\r\n        getGenreList();\r\n        getArtistList();\r\n        getCategoryList();\r\n\r\n        return () => {\r\n            genreController?.abort();\r\n            artistController?.abort();\r\n            categoryController?.abort();\r\n        };\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Modal\r\n                isOpen={editMusicWidget}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='xl'\r\n                toggle={closeWidget}\r\n            >\r\n                <ModalHeader toggle={closeWidget}>\r\n                    <span className='modal-header-title'>\r\n                        Edit Existing Song\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <div className='music-details'>\r\n                                \r\n                                <TextInput \r\n                                    required\r\n                                    id=\"song-name\"\r\n                                    labelName=\"Song Name\"\r\n                                    label=\"Enter Song Name\"\r\n                                    value={musicTitle}\r\n                                    onChange={setMusicTitle}\r\n                                    // check={true}\r\n                                    checkedValue={fav}\r\n                                    onCheckBoxChange={setFav}\r\n                                />\r\n                                <TextInput \r\n                                    id=\"album-name\"\r\n                                    labelName=\"Album Name\"\r\n                                    label=\"Enter Album Name\"\r\n                                    value={albumTitle}\r\n                                    onChange={setAlbumTitle}\r\n                                />\r\n\r\n                                <CheckBoxInput \r\n                                    id=\"artist-name\" labelName=\"Artist Name\"\r\n                                    label=\"Select Artist\" type={artist}\r\n                                    handleChange={handleChange} MenuProps={MenuProps}\r\n                                    names={artistList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"genre-name\" labelName=\"Genre Name\"\r\n                                    label=\"Select Genre\" type={genre}\r\n                                    handleChange={handleGenreChange} MenuProps={MenuProps}\r\n                                    names={genreList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"category-name\" labelName=\"Category Name\"\r\n                                    label=\"Select Category\" type={category}\r\n                                    handleChange={handleCategoryChange} MenuProps={MenuProps}\r\n                                    names={categoryList}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n\r\n                            <Row>\r\n                                <div className='music-upload-button'>\r\n                                    <div className='music-upload-detail'>\r\n                                        <span className='music-image-title' style={{textAlign: \"center\", flexDirection: \"row\"}}>\r\n                                            <LibraryMusicIcon /> &ensp; \" {musicName || musicTitle+\".mp3\"} \"\r\n                                            <span \r\n                                                className='pl-3 existing-music-play-container' \r\n                                            >\r\n                                                {\r\n                                                    playing ?\r\n                                                        (\r\n                                                            load ? \r\n                                                                <SpinnerRotate \r\n                                                                    size=\"sm\"\r\n                                                                    color=\"dark\"\r\n                                                                /> : \r\n                                                                <>\r\n                                                                    {\r\n                                                                        currentPaused ? \r\n                                                                        <PlayCircleIcon title=\"Resume Playing\" onClick={pauseSong} /> :\r\n                                                                        <PauseCircleIcon title=\"Pause Playing\" onClick={pauseSong} />\r\n                                                                    }\r\n                                                                    <StopCircleIcon title=\"Stop Playing\" onClick={stopSong} />\r\n                                                                </> \r\n                                                        )\r\n                                                        :\r\n                                                        <PlayCircleIcon title=\"Play this Song\" onClick={updateSongState} />\r\n                                                }\r\n                                            </span>\r\n                                            <div className='music-upload-button'>\r\n                                                <div className='music-upload-detail d-flex justify-content-center align-items-center'>\r\n                                                    <div className='music-upload-detail'>\r\n                                                        <input \r\n                                                            type=\"file\" \r\n                                                            accept='audio/*'\r\n                                                            onChange={uploadMusic} \r\n                                                            ref={hiddenMusicInput}\r\n                                                            style={{display: \"none\"}}\r\n                                                        />\r\n                                                        <Button \r\n                                                            onClick={handleMusicClick}\r\n                                                            color='dark'\r\n                                                            outline={true}\r\n                                                            style={{\r\n                                                                padding: \"2px 6px\",\r\n                                                                display: \"flex\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <EditIcon title=\"Edit Image\" />\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className='audio-duration'>\r\n                                        <audio ref={audioRef} \r\n                                            src={(musicKey && (apiLinks.getAudio + musicKey))}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </Row>\r\n\r\n                            <EditImageUpload \r\n                                imageKey = {musicImgKey}\r\n                                handleClick={handleClick}\r\n                                musicImgPath={artistImgPath}\r\n                                artistImgName={artistImgName}\r\n                                musicImgName={`${musicTitle}`}\r\n                                hiddenFileInput={hiddenFileInput}\r\n                                uploadMusicImage={uploadArtistImage}\r\n                            />\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={saveEditFile}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditExistingMusic;\r\n","import React, {useEffect, useState, useRef} from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport EditImageUpload from './editImageUpload';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from '../Notification/Notification';\r\n\r\nconst EditExistingModal = (props) => {\r\n\r\n    const hiddenFileInput = useRef(null);\r\n\r\n    const { editId, fav, setFav } = props;\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [name, setName] = useState(props.value || '');\r\n    const [musicImgKey, setMusicImgKey] = useState(\"\");\r\n    \r\n    const [artistImg, setArtistImg] = useState({});\r\n    const [artistImgPath, setArtistPath] = useState('');\r\n    const [artistImgName, setArtistImgName] = useState('');\r\n  \r\n    const handleClick = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n\r\n    const setData = () => {\r\n\r\n        const data = {\r\n            id: props.editId,\r\n            type: name,\r\n            name: name,\r\n            show: fav,\r\n            'playlist_name': name,\r\n        };\r\n\r\n        const editedRow = props.rows.filter(item => item.id !== props.editId);\r\n        props.setRows([data, ...editedRow]);\r\n\r\n    };\r\n\r\n    const addDetail = async () => {\r\n        try{\r\n            setLoader(true);\r\n            const names = name;\r\n            \r\n            const formData = {\r\n                'type': names,\r\n                'name': names,\r\n                'show': fav,\r\n                'old': props.value,\r\n            };\r\n\r\n            let response = {};\r\n\r\n            if(props.id === '1'){\r\n                const formData = new FormData();\r\n                formData.append(\"show\", fav);\r\n                formData.append(\"name\", name);\r\n                formData.append(\"old\", props.value);\r\n                formData.append(\"musicImgKey\", musicImgKey);\r\n                formData.append(\"artistImg\", artistImg[0]);\r\n\r\n                response = await axios.put(apiLinks.updateAdminArtist+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"multipart/form-data\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === '2'){\r\n                response = await axios.put(apiLinks.updateAdminGenre+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === '3'){\r\n                response = await axios.put(apiLinks.updateAdminCategory+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                response = await axios.put(apiLinks.updateAdminPlaylist+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n\r\n            if(Object.keys(response).length === 0 && response.constructor === Object){\r\n                const error = new Error();\r\n                error.message = \"Something went wrong, could add data now\";\r\n                throw error;\r\n            }\r\n            else{\r\n                if(response.data.code === 200){\r\n                    Success(response.data.message);\r\n                    setData();   \r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n                // props.toggle(false);\r\n            }\r\n        \r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const uploadArtistImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setArtistImg(event.target.files);\r\n            setArtistImgName(event.target.files[0].name);\r\n            setArtistPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n\r\n    const removeDetail = () => {\r\n        props.toggle(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let artistImgFileController = new AbortController();\r\n        let playlistImgFileController = new AbortController();\r\n\r\n        const getArtistImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getArtistImgKey+editId, {\r\n                    signal: artistImgFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.artistImgKey);\r\n                    artistImgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n        \r\n        const getPlaylistImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getPlaylistImgKey+editId, {\r\n                    signal: playlistImgFileController.signal,\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.image);\r\n                    playlistImgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        if(props.id === \"1\"){\r\n            getArtistImageFileKey();\r\n        }\r\n\r\n        if(props.id === \"4\"){\r\n            getPlaylistImageFileKey();\r\n        }\r\n        \r\n        return () => {\r\n            artistImgFileController?.abort();\r\n            playlistImgFileController?.abort();\r\n        }\r\n\r\n    }, [editId, props.id]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            \r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n\r\n            <Modal\r\n                isOpen={true}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='lg'\r\n                toggle={() => props.toggle(false)}\r\n            >\r\n                <ModalHeader toggle={() => props.toggle(false)}>\r\n                    <span className='modal-header-title'>\r\n                        {props.header}\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {props.id === '1' || props.id === '4' ? \r\n                        <EditImageUpload \r\n                            imageKey = {musicImgKey}\r\n                            musicImgName={`${name}`}\r\n                            handleClick={handleClick}\r\n                            musicImgPath={artistImgPath}\r\n                            artistImgName={artistImgName}\r\n                            hiddenFileInput={hiddenFileInput}\r\n                            uploadMusicImage={uploadArtistImage}\r\n                        /> : \r\n                        <React.Fragment />\r\n                    }\r\n                    <TextInput \r\n                        id={props.id}\r\n                        required\r\n                        labelName={props.id === '4' ? \"Edit Playlist Name\" : '1' ? \"Edit Name\" : \"Edit Type\"}\r\n                        label={props.id === '4' ? \"Enter Playlist Name\" : '1' ? \"Enter Artist Name\" : \"Enter Type\"}\r\n                        value={name}\r\n                        onChange={setName}\r\n                        // check={true}\r\n                        checkedValue={fav}\r\n                        onCheckBoxChange={setFav}\r\n                    />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={addDetail}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeDetail}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditExistingModal;\r\n","import axios from 'axios';\r\nimport Menu from '@mui/material/Menu';\r\nimport Badge from '@mui/material/Badge';\r\nimport Switch from '@mui/material/Switch';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport { Navbar, NavItem, Nav, NavbarToggler, NavbarBrand, NavLink,\r\n        Offcanvas, OffcanvasHeader, OffcanvasBody, Container } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faMusic, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Subscribe } from \"../../../client\";\r\nimport { IsDark, SetIsDark } from \"../../../App\";\r\nimport { apiLinks } from \"../../../connection.config.js\";\r\n\r\nimport \"./admin-navigation.css\";\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n    width: 62,\r\n    height: 34,\r\n    padding: 7,\r\n    '& .MuiSwitch-switchBase': {\r\n      margin: 1,\r\n      padding: 0,\r\n      transform: 'translateX(6px)',\r\n      '&.Mui-checked': {\r\n        color: '#fff',\r\n        transform: 'translateX(22px)',\r\n        '& .MuiSwitch-thumb:before': {\r\n          backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n            '#fff',\r\n          )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n        },\r\n        '& + .MuiSwitch-track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n        },\r\n      },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\r\n      width: 32,\r\n      height: 32,\r\n      '&:before': {\r\n        content: \"''\",\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        left: 0,\r\n        top: 0,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          '#fff',\r\n        )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n      },\r\n    },\r\n    '& .MuiSwitch-track': {\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n      borderRadius: 20 / 2,\r\n    },\r\n}));\r\n\r\nconst AdminNavigation = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    const isDark = useContext(IsDark);\r\n    const setIsDark = useContext(SetIsDark);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [notificationData, setNotificationData] = useState([]);\r\n\r\n    const updateNavClick = () => {\r\n        setIsOpen(prev => !prev);\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const getNotificationData = async () => {\r\n        if(window?.localStorage?.getItem(\"endpoint\")){\r\n            const endpoint = window.localStorage.getItem(\"endpoint\");\r\n            const response = await axios.get(apiLinks.getBroadcastNotifications, {\r\n                params: {\r\n                    endpoint: endpoint\r\n                }\r\n            });\r\n            if(response.data.code === 200){\r\n                setNotificationData(response.data.message);\r\n            }\r\n            else{\r\n                setNotificationData([]);\r\n            }\r\n        }\r\n        else{\r\n            Notification.requestPermission().then(permission => {\r\n                if(permission === \"granted\"){\r\n                    Subscribe();\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleClick = async (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        await getNotificationData();\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNotificationData();\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"admin-Navigation-container\">\r\n                <Navbar\r\n                    color={isDark ? \"dark\" : \"light\"}\r\n                    dark={isDark}\r\n                    light={!isDark}\r\n                    expand=\"true\"\r\n                    sticky=\"true\"\r\n                    className=\"one-row\"\r\n                >\r\n                    <NavbarBrand onClick={() => navigate('/')} className=\"me-auto\">\r\n                        <div className=\"navbarHead\">\r\n                            SANGEET\r\n                        </div>\r\n                    </NavbarBrand>\r\n                    <MaterialUISwitch checked={isDark} onClick={setIsDark} />\r\n\r\n                    <Tooltip title=\"Notifications\">\r\n                        <IconButton\r\n                            sx={{\r\n                                marginRight: \"15px\"\r\n                            }}\r\n                            onClick={handleClick}\r\n                            size=\"small\"\r\n                            aria-controls={open ? 'account-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                        >\r\n                            <Badge badgeContent={notificationData.length || '0'} className=\"notification-count\" >\r\n                                <NotificationsIcon sx={{ fontSize: 30, color: isDark ? \"rgb(0, 255, 0)\" : \"rgb(0, 0, 0)\" }} />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        id=\"account-menu\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        onClick={handleClose}\r\n                        PaperProps={{\r\n                            elevation: 0,\r\n                            className: `notification-message-container ${isDark ? \"dark\" : \"light\"}`,\r\n                            sx: {\r\n                                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                                mt: 1.5,\r\n                                '& .MuiAvatar-root': {\r\n                                    width: 32,\r\n                                    height: 32,\r\n                                    ml: -0.5,\r\n                                    mr: 1,\r\n                                },\r\n                                '&:before': {\r\n                                    content: '\"\"',\r\n                                    display: 'block',\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    right: 0,\r\n                                    width: 10,\r\n                                    height: 10,\r\n                                    bgcolor: `${isDark ? \"#0A0F18\" : \"#eee\"}`,\r\n                                    transform: 'translateY(-50%) rotate(45deg)',\r\n                                    zIndex: 0,\r\n                                },\r\n                            },\r\n                        }}\r\n                        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                    >\r\n                        {\r\n                            notificationData.length > 0 ?\r\n                                notificationData.map(notification => \r\n                                    <MenuItem key={notification.id} onClick={() => navigate(notification.url)}>\r\n                                        <div>\r\n                                            <div className=\"notification-row mb-2\">\r\n                                                <div className=\"notification-image-container\">\r\n                                                    <img className=\"notification-image\"\r\n                                                        src={apiLinks.getImage + notification.image} alt={notification.title} />\r\n                                                </div>\r\n                                                <div className=\"notification-text-container\">\r\n                                                    <div className=\"notification-title\">\r\n                                                        {notification.title}\r\n                                                    </div>\r\n                                                    <div className=\"notification-body\">\r\n                                                        {notification.body}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Divider />\r\n                                        </div>\r\n                                    </MenuItem>\r\n                                ) : \r\n                                <div className=\"no-notifications-container\">\r\n                                    <h5 className=\"no-notifications\">\r\n                                        No Notifications Available\r\n                                    </h5>\r\n                                </div>\r\n                        }\r\n                    </Menu>\r\n\r\n                    <NavbarToggler className=\"me-2\" onClick={updateNavClick} />\r\n                    \r\n                    <Offcanvas isOpen={isOpen} className=\"offcanvas-tag\" scrollable={false}\r\n                        toggle={updateNavClick} direction=\"end\">\r\n                        <OffcanvasHeader toggle={updateNavClick} className=\"custom-close-icon-canvas-header\"/>\r\n                        <OffcanvasBody className=\"navbar-menu-links\">\r\n                            <Nav className=\"ms-auto\" navbar>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate('/')}>\r\n                                        <FontAwesomeIcon icon={faHome} /> \r\n                                            <span className=\"extra-spacing\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faMusic} /> \r\n                                            <span className=\"extra-spacing\" /> Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                {/* <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faBell} /> \r\n                                            <span className=\"extra-spacing\" /> Notifications\r\n                                    </NavLink>\r\n                                </NavItem> */}\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate('/admin')}>\r\n                                        <FontAwesomeIcon icon={faSignInAlt} /> \r\n                                            <span className=\"extra-spacing\" /> Login / SignUp \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </OffcanvasBody>\r\n                    </Offcanvas>\r\n                </Navbar>\r\n            </div>\r\n            <Container className=\"pt-5 pb-5\"/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminNavigation;","import axios from 'axios';\r\nimport React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport {Container, Nav, NavItem, NavLink, TabContent, TabPane, Row, Col} from 'reactstrap';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { Backdrop } from '@mui/material';\r\nimport SpeedDial from '@mui/material/SpeedDial';\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport DomainIcon from '@mui/icons-material/Domain';\r\nimport PlaylistAddIcon from '@mui/icons-material/PlaylistAdd';\r\nimport CellTowerIcon from '@mui/icons-material/CellTower';\r\n\r\nimport AddNewModal from '../components/Admin/addNewModal';\r\nimport NewMusicAdd from '../components/Admin/newMusicAdd';\r\n\r\nimport GenreTable from '../components/Tables/Genre-table';\r\nimport BroadcastTable from '../components/Tables/broadcast';\r\nimport ArtistsTable from '../components/Tables/artists-table';\r\nimport StickyHeadTable from \"../components/Tables/music-table\";\r\nimport CategoryTable from '../components/Tables/category-table';\r\nimport PlaylistTable from '../components/Tables/playlist-table';\r\n\r\nimport { IsDark, PlayerContext } from \"../App\";\r\nimport { apiLinks } from '../connection.config';\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport { DeleteWarning } from '../components/Warning/Warning';\r\nimport EditExistingMusic from '../components/Admin/editExistingMusic';\r\nimport EditExistingModal from '../components/Admin/editExistingModal';\r\nimport { Success, Error } from '../components/Notification/Notification';\r\nimport AdminNavigation from '../components/navigation/Navigation-bar/admin-navigation';\r\n\r\n\r\nimport \"./admin.css\";\r\n\r\nlet genreRows = [], artistRows = [], categoryRows = [], \r\n    musicRows = [], broadcastRows = [], playlistRows = [];\r\n\r\nconst Admin = () => {\r\n    const isDark = useContext(IsDark);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n    const hiddenFileInput = useRef(null);\r\n    const hiddenMusicInput = useRef(null);\r\n    const audioDurationRef = useRef(null);\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [tabId, setTabId] = useState(1);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    \r\n    const [rows, setRows] = useState([]);\r\n\r\n    const [editId, setEditId] = useState(0);\r\n    const [header, setHeader] = useState(\"\");\r\n    const [modalId, setModalId] = useState('0');\r\n    const [deleteId, setDeleteId] = useState(0);\r\n    const [warning, setWarning] = useState(false);\r\n    const [catGenValue, setCatGenValue] = useState('');\r\n    const [deleteItemName, setDeleteItemName] = useState('');\r\n\r\n    const [genre, setGenre] = useState([]);\r\n    const [artist, setArtist] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n\r\n    const [showBroadCast, setShowBroadCast] = useState(false);\r\n    const [addMusicWidget, setAddMusicWidget] = useState(false);\r\n    const [createPlaylist, setCreatePlaylist] = useState(false);\r\n    const [addGenreWidget, setAddGenreWidget] = useState(false);\r\n    const [editMusicWidget, setEditMusicWidget] = useState(false);\r\n    const [addArtistWidget, setAddArtistWidget] = useState(false);\r\n    const [addCategoryWidget, setAddCategoryWidget] = useState(false);\r\n    const [editExistingWidget, setEditExistingWidget] = useState(false);\r\n    \r\n    const [fav, setFav] = useState(false);\r\n    const [music, setMusic] = useState({});\r\n    const [musicName, setMusicName] = useState('');\r\n    const [musicPath, setMusicPath] = useState([]);\r\n    const [musicDuration, setMusicDuration] = useState(0);\r\n\r\n    const [musicTitle, setMusicTitle] = useState('');\r\n    const [albumTitle, setAlbumTitle] = useState('');\r\n    \r\n    const [musicImg, setMusicImg] = useState({});\r\n    const [musicImgName, setMusicImgName] = useState(\"\");\r\n    const [musicImgPath, setMusicImgPath] = useState('/assets/images/default-music-upload-image.png');\r\n\r\n    const updateTabId = (id) => {\r\n        setTabId(id);\r\n        window?.localStorage?.setItem(\"tabId\", id);\r\n    };\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    \r\n    const updateAddMusicWidget = () => {\r\n        removeMusicDetails();\r\n        setAddMusicWidget(prev => !prev);\r\n    };\r\n\r\n    const broadCast = () => setShowBroadCast(prev => !prev);\r\n    const updateCreatePlaylist = () => setCreatePlaylist(prev => !prev);\r\n    const updateAddGenreWidget = () => setAddGenreWidget(prev => !prev);\r\n    const updateAddArtistWidget = () => setAddArtistWidget(prev => !prev);\r\n    const updateAddCategoryWidget = () => setAddCategoryWidget(prev => !prev);\r\n    \r\n    const updateEditMusicWidget = () => {\r\n        setMusic({});\r\n        setMusicName('');\r\n        setEditMusicWidget(prev => !prev);\r\n    };\r\n\r\n    const defaultProps = {\r\n        options: rows,\r\n        getOptionLabel: (option) => (option.musicTitle && `${option.musicTitle} - ${option.albumTitle}`) || option.name || option.type || option.title || option.playlist_name,\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n        if(window?.localStorage){\r\n            const id = window?.localStorage?.getItem(\"tabId\");\r\n            if(id && 0 < id < 7){\r\n                setTabId(parseInt(id));\r\n            }\r\n        }\r\n\r\n        let musicController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let genreController = new AbortController();\r\n        let categoryController = new AbortController();\r\n        let broadCastController = new AbortController();\r\n        let playlistController = new AbortController();\r\n        \r\n        const getMusicData = async () => {\r\n    \r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllAudio, {\r\n                    signal: musicController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  musicRows = response.data.message;\r\n                  musicController = null;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                // Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getArtistsData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  artistController = null;\r\n                  artistRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getGenreData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  genreController = null;\r\n                  genreRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getCategoryData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  categoryRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        const getBroadCastData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getBroadcast, {\r\n                    signal: broadCastController.signal,\r\n                });\r\n                if(response.data?.code === 200){\r\n                    setRows(response.data.message);\r\n                    broadcastRows = response.data.message;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                    setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        const getPlaylistData = async () => {\r\n            \r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllPlaylist, {\r\n                    signal: playlistController.signal,\r\n                });\r\n                if(response.data?.code === 200){\r\n                    setRows(response.data.message);\r\n                    playlistRows = response.data.message;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                    setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        if(tabId === 1) \r\n            getMusicData();\r\n        else if(tabId === 2) \r\n            getArtistsData();\r\n        else if(tabId === 3) \r\n            getGenreData();\r\n        else if(tabId === 4)\r\n            getCategoryData();\r\n        else if(tabId === 5)\r\n            getBroadCastData();\r\n        else\r\n            getPlaylistData();\r\n\r\n        return () => {\r\n            musicController?.abort();\r\n            artistController?.abort();\r\n            genreController?.abort();\r\n            categoryController?.abort();\r\n            setLoader(false);\r\n        }\r\n    \r\n    }, [tabId]);\r\n\r\n    const getSearchedAutoCompleteRow = (value) => {\r\n        if(value && value.id){\r\n            let searchedData = [];\r\n            if(tabId === 1){\r\n                searchedData = musicRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 2){\r\n                searchedData = artistRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 3){\r\n                searchedData = genreRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 4){\r\n                searchedData = categoryRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 5){\r\n                searchedData = broadcastRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 6){\r\n                searchedData = playlistRows.filter(row => row.id === value.id);\r\n            }\r\n            setRows(searchedData);\r\n        }\r\n        else{\r\n            if(tabId === 1){\r\n                setRows(musicRows);\r\n            }\r\n            else if(tabId === 2){\r\n                setRows(artistRows)\r\n            }\r\n            else if(tabId === 3){\r\n                setRows(genreRows);\r\n            }\r\n            else if(tabId === 4){\r\n                setRows(categoryRows);\r\n            }\r\n            else if(tabId === 5){\r\n                setRows(broadcastRows);\r\n            }\r\n            else if(tabId === 6){\r\n                setRows(playlistRows);\r\n            }\r\n        }\r\n    };\r\n\r\n    const getSearchedRow = (event) => {\r\n        if(event.target.value.length){\r\n            const data = event.target.value;\r\n            let searchedData = [];\r\n            if(tabId === 1){\r\n                searchedData = [...musicRows.filter(row => row.musicTitle.toLowerCase().includes(data.toLowerCase())), \r\n                                ...musicRows.filter(row => row.albumTitle.toLowerCase().includes(data.toLowerCase()))]\r\n                                .filter((item, index, self) => index === self.findIndex((entry) => entry.id === item.id));\r\n            }\r\n            else if(tabId === 2){\r\n                searchedData = artistRows.filter(row => row.name.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 3){\r\n                searchedData = genreRows.filter(row => row.type.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 4){\r\n                searchedData = categoryRows.filter(row => row.type.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 5){\r\n                searchedData = broadcastRows.filter(row => row.title.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 6){\r\n                searchedData = playlistRows.filter(row => row['playlist_name'].toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            setRows(searchedData);\r\n        }\r\n        else{\r\n            if(tabId === 1){\r\n                setRows(musicRows);\r\n            }\r\n            else if(tabId === 2){\r\n                setRows(artistRows)\r\n            }\r\n            else if(tabId === 3){\r\n                setRows(genreRows);\r\n            }\r\n            else if(tabId === 4){\r\n                setRows(categoryRows);\r\n            }\r\n            else if(tabId === 5){\r\n                setRows(broadcastRows);\r\n            }\r\n            else if(tabId === 6){\r\n                setRows(playlistRows);\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateRow = (data) => {\r\n        const rowData = rows.map(row => {\r\n            if(row.id === data.id){\r\n                return data;\r\n            }\r\n            else{\r\n                return row;\r\n            }\r\n        });\r\n\r\n        setRows(rowData);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        \r\n        setArtist(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleGenreChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setGenre(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleCategoryChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setCategory(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n    \r\n    const handleClick = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n\r\n    const handleMusicClick = () => {\r\n        hiddenMusicInput.current.click();\r\n    };\r\n    \r\n    const uploadMusicImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setMusicImg(event.target.files);\r\n            setMusicImgName(event.target.files[0].name);\r\n            setMusicImgPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n    \r\n    const uploadMusic = (event) => {\r\n        if(event.target.files[0]){\r\n            window.URL = window.URL || window.webkitURL;\r\n            audioDurationRef.current = document.createElement(\"audio\");\r\n            audioDurationRef.current.preload = 'metadata';\r\n\r\n            audioDurationRef.current.onloadedmetadata = () => {\r\n                window.URL.revokeObjectURL(audioDurationRef.current.src);\r\n                const duration = Math.floor(audioDurationRef.current.duration);\r\n                setMusicDuration(duration);\r\n            };\r\n\r\n            audioDurationRef.current.src = URL.createObjectURL(event.target.files[0]);\r\n\r\n            setMusic(event.target.files);\r\n            setMusicPath(event.target.files);\r\n            setMusicName(event.target.files[0].name);\r\n        }\r\n    };\r\n    \r\n    const removeSelectedSong = () => {\r\n        setMusic({});\r\n        setMusicName(\"\");\r\n        setMusicDuration(0);\r\n        audioDurationRef.current = null;\r\n        audioDurationRef?.current?.remove();\r\n    };\r\n    \r\n    const removeSelectedImage = () => {\r\n        setMusicImg({});\r\n        setMusicImgName('');\r\n        setMusicImgPath('/assets/images/default-music-upload-image.png');\r\n    };\r\n    \r\n    const removeMusicDetails = () => {\r\n        setFav(false);\r\n\r\n        setGenre([]);\r\n        setArtist([]);\r\n        setCategory([]);\r\n\r\n        removeSelectedSong();\r\n        \r\n        setMusicTitle(\"\");\r\n        setAlbumTitle(\"\");\r\n\r\n        removeSelectedImage();\r\n    };\r\n\r\n    const saveUploadMusic = async () => {\r\n        setLoader(true);\r\n        const today = new Date().toISOString();\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"show\", fav);\r\n        formData.append(\"date\", today);\r\n        formData.append(\"genre\", genre);\r\n        formData.append(\"artist\", artist);\r\n        formData.append(\"category\", category);\r\n        formData.append('musicFile', music[0]);\r\n        formData.append('musicTitle', musicTitle);\r\n        formData.append('albumTitle', albumTitle);\r\n        formData.append(\"duration\", musicDuration);\r\n        formData.append('musicImageFile', musicImg[0]);\r\n\r\n        try{\r\n            const response = await axios.post(apiLinks.postSong, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            if(response.data.code === 200){\r\n                if(tabId === 1){\r\n                    musicRows.push(...(response.data.rowData));\r\n                    // setRows(prevData => [...prevData, ...(response.data.rowData)]);\r\n                }\r\n                else{\r\n                    updateTabId(1);\r\n                }\r\n                \r\n                removeMusicDetails();\r\n                setAddMusicWidget(false);\r\n                Success(\"Uploaded Successfully\");\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error Occured - \", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const editRow = (id) => {\r\n        const editableRow = rows.filter(entry => entry.id === id);\r\n        // console.log(editableRow);\r\n\r\n        setFav(editableRow[0].show);\r\n        setEditId(id);\r\n        setGenre(editableRow[0].genre);\r\n        setArtist(editableRow[0].artists);\r\n        setCategory(editableRow[0].category);\r\n        setMusicTitle(editableRow[0].musicTitle);\r\n        setAlbumTitle(editableRow[0].albumTitle);\r\n        setEditMusicWidget(true);\r\n    };\r\n\r\n    const editArtistGenreCategoryPlaylist = (id, domain=\"\") => {\r\n\r\n        const editTableRow = rows.filter(entry => entry.id === id);\r\n\r\n        if(editTableRow.length){\r\n            setFav(editTableRow[0].show);\r\n            setEditId(id);\r\n            setEditExistingWidget(prev => !prev);\r\n            setCatGenValue(editTableRow[0].name || editTableRow[0].type || editTableRow[0].playlist_name);\r\n\r\n            if(domain === \"artist\"){\r\n                setHeader('Edit Artist');\r\n                setModalId('1');\r\n            }\r\n            else if(domain === 'genre'){\r\n                setHeader(\"Edit Genre\");\r\n                setModalId('2');\r\n            }\r\n            else if(domain === 'category'){\r\n                setHeader(\"Edit Category\");\r\n                setModalId('3');\r\n            }\r\n            else if(domain === 'playlist'){\r\n                setHeader(\"Edit Playlist\");\r\n                setModalId('4');\r\n            }\r\n            else{\r\n                Error(\"Domain Not Valid for Edit\");\r\n            }\r\n        }\r\n        else{\r\n            Error(\"No such row id found\");\r\n        }\r\n    };\r\n\r\n    const toggleWarning = (id = 0) => {\r\n        const name = rows.filter(row => row.id === id);\r\n\r\n        if(id && tabId === 1){\r\n            setDeleteItemName(name[0].musicTitle);\r\n        }\r\n        else if(id && tabId === 2){\r\n            setDeleteItemName(name[0].name);\r\n        }\r\n        else if(id && tabId === 3){\r\n            setDeleteItemName(name[0].type);\r\n        }\r\n        \r\n        else if(id && tabId === 4){\r\n            setDeleteItemName(name[0].type);\r\n        }\r\n        else if(id && tabId === 5){\r\n            setDeleteItemName(name[0].title);\r\n        }\r\n        else if(id && tabId === 6){\r\n            setDeleteItemName(name[0]['playlist_name'])\r\n        }\r\n\r\n        setDeleteId(id);\r\n        setWarning(prev => !prev);\r\n    };\r\n\r\n    const deleteRow = async () => {\r\n        const id = deleteId;\r\n\r\n        try{\r\n            setLoader(true);\r\n            let response = {};\r\n            if(tabId === 1){\r\n                response = await axios.delete(apiLinks.deleteMusic+id);\r\n            }\r\n            else if(tabId === 2){\r\n                response = await axios.delete(apiLinks.deleteArtist+id);\r\n            }\r\n            else if(tabId === 3){\r\n                response = await axios.delete(apiLinks.deleteGenre+id);\r\n            }\r\n            else if(tabId === 4){\r\n                response = await axios.delete(apiLinks.deleteCategory+id);\r\n            }\r\n            else if(tabId === 5){\r\n                response = await axios.delete(apiLinks.deleteBroadcast+id);\r\n            }\r\n            else if(tabId === 6){\r\n                response = await axios.delete(apiLinks.deletePlaylist+id);\r\n            }\r\n\r\n            if(response?.data?.code === 200){\r\n                // if(tabId === 1){\r\n                //     musicRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                // else if(tabId === 2){\r\n                //     artistRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                // else if(tabId === 3){\r\n                //     genreRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                // else if(tabId === 4){\r\n                //     categoryRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                // else if(tabId === 5){\r\n                //     broadcastRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                setRows(prev => prev.filter(row => row.id !== id));\r\n                Success(response.data.message);\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error occured while deleting\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n            toggleWarning();\r\n        }\r\n    };\r\n    \r\n    const actions = [\r\n        { icon: <CellTowerIcon />, name: \"BroadCast\", click: broadCast }, \r\n        { icon: <DomainIcon />, name: 'Add Genre', click: updateAddGenreWidget },\r\n        { icon: <MusicNoteIcon />, name: 'Add Song', click: updateAddMusicWidget },\r\n        { icon: <PersonAddIcon />, name: 'Add Artist', click: updateAddArtistWidget },\r\n        { icon: <CategoryIcon />, name: 'Add Category', click: updateAddCategoryWidget },\r\n        { icon: <PlaylistAddIcon />, name: \"Create Playlist\", click: updateCreatePlaylist },\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='admin-page'>\r\n                {loader ? \r\n                    <SpinnerGrow color=\"success\" />: \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    warning ?\r\n                    <DeleteWarning \r\n                        musicTitle={deleteItemName}\r\n                        toggle={toggleWarning}\r\n                        deleteRow={deleteRow}\r\n                    />: \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    editMusicWidget ? \r\n                    <EditExistingMusic\r\n                        fav={fav}\r\n                        genre={genre}\r\n                        artist={artist}\r\n                        editId={editId}\r\n                        loader={loader}\r\n                        category={category}\r\n                        musicName={musicName}\r\n                        musicPath={musicPath}\r\n                        musicTitle={musicTitle}\r\n                        albumTitle={albumTitle}\r\n                        musicDuration={musicDuration}\r\n                        editMusicWidget={editMusicWidget}\r\n                        hiddenFileInput={hiddenFileInput}\r\n                        hiddenMusicInput={hiddenMusicInput}\r\n\r\n                        setFav={setFav}\r\n                        updateRow={updateRow}\r\n                        setLoader={setLoader}\r\n                        uploadMusic={uploadMusic}\r\n                        handleChange={handleChange}\r\n                        setMusicTitle={setMusicTitle}\r\n                        setAlbumTitle={setAlbumTitle}\r\n                        handleMusicClick={handleMusicClick}\r\n                        handleGenreChange={handleGenreChange}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        updateEditMusicWidget={updateEditMusicWidget}\r\n\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    addMusicWidget ? \r\n                    <NewMusicAdd \r\n                        fav={fav}\r\n                        genre={genre}\r\n                        artist={artist}\r\n                        category={category}\r\n                        musicName={musicName}\r\n                        musicTitle={musicTitle}\r\n                        albumTitle={albumTitle}\r\n                        musicImgPath={musicImgPath}\r\n                        musicImgName={musicImgName}\r\n                        musicDuration={musicDuration}\r\n                        addMusicWidget={addMusicWidget}\r\n                        hiddenFileInput={hiddenFileInput}\r\n                        hiddenMusicInput={hiddenMusicInput}\r\n\r\n                        setFav={setFav}\r\n                        uploadMusic={uploadMusic}\r\n                        handleClick={handleClick}\r\n                        handleChange={handleChange}\r\n                        setMusicTitle={setMusicTitle}\r\n                        setAlbumTitle={setAlbumTitle}\r\n                        saveUploadMusic={saveUploadMusic}\r\n                        handleMusicClick={handleMusicClick}\r\n                        uploadMusicImage={uploadMusicImage}\r\n                        handleGenreChange={handleGenreChange}\r\n                        removeMusicDetails={removeMusicDetails}\r\n                        removeSelectedSong={removeSelectedSong}\r\n                        removeSelectedImage={removeSelectedImage}\r\n                        updateAddMusicWidget={updateAddMusicWidget}\r\n                        handleCategoryChange={handleCategoryChange}\r\n\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {editExistingWidget ? \r\n                    <EditExistingModal \r\n                        fav={fav}\r\n                        rows={rows}\r\n                        id={modalId}\r\n                        editId={editId}\r\n                        header={header}\r\n                        value={catGenValue}\r\n\r\n                        setFav={setFav}\r\n                        setRows={setRows}\r\n                        toggle={setEditExistingWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n\r\n                {addArtistWidget ? \r\n                    <AddNewModal \r\n                        id='1'\r\n                        tabId={tabId}\r\n                        header=\"Add New Artist\"\r\n                        artistRows={artistRows}\r\n                        toggle={setAddArtistWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n                \r\n                {addGenreWidget ? \r\n                    <AddNewModal \r\n                        id='2'\r\n                        tabId={tabId}\r\n                        genreRows={genreRows}\r\n                        header=\"Add New Genre\"\r\n                        toggle={setAddGenreWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n                \r\n                {addCategoryWidget ? \r\n                    <AddNewModal \r\n                        id='3'\r\n                        tabId={tabId}\r\n                        header=\"Add New Category\"\r\n                        categoryRows={categoryRows}\r\n                        toggle={setAddCategoryWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    showBroadCast ? \r\n                    <AddNewModal \r\n                        id='4'\r\n                        tabId={tabId}\r\n                        header=\"BroadCast News\"\r\n                        toggle={setShowBroadCast}\r\n                        broadcastRows={broadcastRows}\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    createPlaylist ? \r\n                    <AddNewModal \r\n                        id='5'\r\n                        tabId={tabId}\r\n                        header=\"Add New Playlist\"\r\n                        toggle={setCreatePlaylist}\r\n                        playlistRows={playlistRows}\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                <AdminNavigation />\r\n\r\n                {/* <Container fluid>\r\n                     */}\r\n                <Box className='add-button-speed-dial' sx={{ height: 300, transform: 'translateZ(0px)', \r\n                        flexGrow: 1, bottom: `${currentSong.id ? \"8rem\" : \".5rem\"}` }}>\r\n                    <Backdrop open={open} />\r\n                    <SpeedDial\r\n                        ariaLabel=\"SpeedDial tooltip example\"\r\n                        sx={{ position: 'absolute', bottom: 16, right: 16 }}\r\n                        icon={<SpeedDialIcon />}\r\n                        onClose={handleClose}\r\n                        onOpen={handleOpen}\r\n                        open={open}\r\n                        className=\"speed-dial-custom\"\r\n                    >\r\n                        {actions.map((action, index) => (\r\n                            <SpeedDialAction\r\n                                key={action.name}\r\n                                icon={action.icon}\r\n                                tooltipTitle={action.name}\r\n                                tooltipOpen\r\n                                onClick={action.click}\r\n                            />\r\n                        ))}\r\n                    </SpeedDial>\r\n                </Box>\r\n                <Container className={`page-content ${isDark ? \"dark\" : \"light\"} mb-3`}\r\n                    style={currentSong.id ? {height: \"calc(100vh - 230px)\"} : {height: \"calc(100vh - 120px)\"}}\r\n                >\r\n                    <div>\r\n                        <div className=\"d-flex navtabs-autocomplete\">\r\n                            <Nav tabs className=\"align-bottom-flex\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 1 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(1)}\r\n                                    >\r\n                                        Music Data\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 2 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(2)}\r\n                                    >\r\n                                        Artists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 3 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(3)}\r\n                                    >\r\n                                        Genre\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 4 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(4)}\r\n                                    >\r\n                                        Category\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 6 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(6)}\r\n                                    >\r\n                                        Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 5 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(5)}\r\n                                    >\r\n                                        BroadCasts\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Autocomplete\r\n                                {...defaultProps}\r\n                                id={`auto-complete`}\r\n                                className={`autoComplete ${isDark ? \"dark\" : \"light\"}`}\r\n                                onChange={(evt, val) => getSearchedAutoCompleteRow(val)}\r\n                                autoComplete\r\n                                includeInputInList\r\n                                renderInput={(params) => (\r\n                                <TextField {...params} label={  tabId === 1 ? \"Search Music\" : \r\n                                                                tabId === 2 ? \"Search Artist\" : \r\n                                                                tabId === 3 ? \"Search Genre\" : \r\n                                                                tabId === 4 ? \"Search Category\":\r\n                                                                tabId === 5 ? \"Search Title\" : \r\n                                                                \"Search Playlist\"} \r\n                                    className=\"input-div\" variant=\"standard\" \r\n                                    onChange={getSearchedRow}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <TabContent activeTab={tabId}>\r\n                            <TabPane tabId={1}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <StickyHeadTable \r\n                                            id=\"table\"\r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            editRow={editRow}\r\n                                            toggleWarning={toggleWarning}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={2}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ArtistsTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editArtist={editArtistGenreCategoryPlaylist}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={3}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <GenreTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editGenre={editArtistGenreCategoryPlaylist}\r\n                                        /> \r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={4}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <CategoryTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editCategory={editArtistGenreCategoryPlaylist}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane>\r\n                            <TabPane tabId={5}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <BroadcastTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane>\r\n                            <TabPane tabId={6}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <PlaylistTable \r\n                                            rows={rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editPlaylist={editArtistGenreCategoryPlaylist}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane>  \r\n                        </TabContent>\r\n                    </div>\r\n                </Container>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n","// for song list\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useContext } from \"react\";\r\nimport PlayCircle from \"@mui/icons-material/PlayCircle\";\r\nimport PauseCircle from \"@mui/icons-material/PauseCircle\";\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\n\r\nimport { CalculateTimeContext, SongList } from \"../../pages/Artist\";\r\nimport { PlayerContext, PlayPause, Playing, LoadAudio, IsDark } from \"../../App\";\r\n\r\nimport \"./body.css\";\r\n\r\nconst Body = (props) => {\r\n    \r\n    const isDark = useContext(IsDark);\r\n    const paused = useContext(Playing);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentPlayer = useContext(PlayerContext);\r\n    const calculateTimeContext = useContext(CalculateTimeContext);\r\n\r\n    const [playId, setPlayId] = useState(0);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const updatePlayId = (value) => {\r\n        setPlayId(value);\r\n    };\r\n\r\n    const updatePlayPause = (event) => {\r\n        const e = {\r\n            ...event, \r\n            code: \"Space\",\r\n            preventDefault: () => {}\r\n        };\r\n\r\n        playPauseState(e);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container> \r\n                <div className=\"song-list\">\r\n                    {\r\n                        songList.map((song, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className={`table-row ${isDark ? \"dark\" : \"light\"}`}\r\n                                        key={song.id}\r\n                                        style={currentPlayer.id && currentPlayer.id === song.id ? {color: isDark ? \"#eee\" : \"#111\"}: null}\r\n                                        onMouseEnter={(e) => {updatePlayId(song.id)}}\r\n                                        onMouseLeave={(e) => {updatePlayId(0)}}\r\n                                        onClick={e => loadAudio(songList, song, e)}\r\n                                    >\r\n                                        <div className=\"srno-title\">\r\n                                            <div className=\"srno\">\r\n                                                {\r\n                                                    currentPlayer.id && currentPlayer.id === song.id ?\r\n                                                    <span\r\n                                                        onMouseEnter={() => setPlaying(true)}\r\n                                                        onMouseLeave={() => setPlaying(false)}\r\n                                                    > \r\n                                                        {\r\n                                                            !paused ?\r\n                                                                <PlayCircle \r\n                                                                    onClick = {e => updatePlayPause(e)}\r\n                                                                /> :\r\n                                                                playing ?\r\n                                                                    <PauseCircle \r\n                                                                        onClick = {e => updatePlayPause(e)}\r\n                                                                    />:\r\n                                                                    <EqualizerIcon />\r\n                                                        }\r\n                                                    </span>:\r\n                                                    playId === song.id ? \r\n                                                        <PlayCircle /> :\r\n                                                        index+1\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"title\">\r\n                                                <div className=\"music-title\">\r\n                                                    {song.musicTitle}\r\n                                                </div>\r\n                                                <div className=\"d-flex custom-artists\">\r\n                                                    {\r\n                                                        song.artists?.map((art, index) => {\r\n                                                            return props.artist !== art ?(\r\n                                                                <div className=\"\" key={index}>\r\n                                                                    <span className=\"song-list-artist\">\r\n                                                                        <Link to={`/artist/${art}`}>\r\n                                                                                {art}\r\n                                                                        </Link>\r\n                                                                    </span>\r\n                                                                    <span className=\"song-list-artist-separation\">\r\n                                                                        {song.artists.length - 1 > index ? \",\": \"\"}&nbsp;\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            ) : <React.Fragment key={index} />\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"duration\">\r\n                                                {song.duration ? calculateTimeContext(song.duration) : '--:--'}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        index < songList.length - 1 ? (\r\n                                            <div className=\"custom-bottom-border\" key={index} />\r\n                                        ) : <React.Fragment />\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;","import { Container } from \"reactstrap\";\r\nimport React, { useContext } from \"react\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\nimport PlayCircleFilledIcon from '@mui/icons-material/PlayCircleFilled';\r\n\r\nimport { IsDark, LoadAudio } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\nimport { CalculateTimeContext, Duration, SongList } from \"../../pages/Artist\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const totalDuration = useContext(Duration);\r\n    const calculateTotalDuration = useContext(CalculateTimeContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className=\"mt-3\">\r\n                <div className=\"album-container\">\r\n                    <div className={`album-image-container ${isDark ? \"dark\" : \"light\"}`}>\r\n                        <img \r\n                            className=\"album-image\"\r\n                            src={apiLinks.getArtistImgFromName + props.artist} \r\n                            alt={props.artist} />\r\n                    </div>\r\n                    <div className=\"album-details\">\r\n                        <div className=\"album-heading\">\r\n                            Artist\r\n                        </div>\r\n                        <div className=\"album-name\">\r\n                            {props.artist}\r\n                        </div>\r\n                        <div className=\"album-duration\">\r\n                            Duration&nbsp;<CircleIcon style={{ fontSize: '.5rem' }} />&nbsp;{ calculateTotalDuration(totalDuration) }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <PlayCircleFilledIcon \r\n                        className={`artist-play-button ${isDark ? \"dark\" : \"light\"}`} \r\n                        onClick={(e) => loadAudio(songList, songList[0], e)}\r\n                    />\r\n\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","// for related artists\r\nimport Slider from 'react-slick';\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { IsDark } from '../../App';\r\nimport { AlbumList } from '../../pages/Artist';\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./footer.css\";\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n          breakpoint: 1200,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 991,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Footer = (props) => {\r\n\r\n    const isDark = useContext(IsDark);\r\n    const albumList = useContext(AlbumList);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Container key=\"artist-container\" className=\"mt-5\">\r\n                { albumList.length ? \r\n                    <Container className=\"slider-container\">\r\n                        <h2 className={`category-list-heading ${isDark ? \"dark\" : \"light\"}`} title=\"Artists\">Artist's Album</h2>\r\n                        <Slider {...settings}>\r\n                        { albumList.map((album, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container\">\r\n                                        <img \r\n                                            src={apiLinks.getImage + album.musicImageKey} \r\n                                            alt={album.albumTitle} \r\n                                            className=\"artist-card-image\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className=\"pt-3 pb-3 artist-name\" title={album.albumTitle}>\r\n                                                <Link to={`/album/${album.albumTitle}`} className={`artist-name ${isDark ? \"dark\" : \"light\"}`}>\r\n                                                    {album.albumTitle}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3\" fluid />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport Body from \"../components/Artist/body\";\r\nimport Header from \"../components/Artist/header\";\r\nimport Footer from \"../components/Artist/footer\";\r\nimport { apiLinks } from \"../connection.config\";\r\nimport { Error } from \"../components/Notification/Notification\";\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\nimport { PlayerContext, IsDark } from \"../App\";\r\n\r\nimport \"./artist.css\";\r\n\r\nexport const SongList = React.createContext();\r\nexport const Duration = React.createContext();\r\nexport const AlbumList = React.createContext();\r\nexport const CalculateTimeContext = React.createContext();\r\n\r\nconst Artist = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n    const params = useParams();\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [songList, setSongList] = useState([]);\r\n    const [albumList, setAlbumList] = useState([]);\r\n    const [totalDuration, setTotalDuration] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        const getArtistDetails = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getArtistDetails + params.artistName, {\r\n                    headers: {\r\n                        'content-type': \"application/json\"\r\n                    },\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    // console.log(response.data.message);\r\n                    const duration = response.data.message.reduce((partial_sum, a) => partial_sum + a.duration, 0);\r\n                    const album = [];\r\n                    response.data.message.map(item => album.includes(item.albumTitle) ? null : album.push(item));\r\n\r\n                    setAlbumList(album);\r\n                    setTotalDuration(duration);\r\n                    setSongList(response.data.message);\r\n                    abortController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                // Error(err.message);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        getArtistDetails();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [params]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <div className={`page-content ${isDark ? \"dark\" : \"light\"}`}\r\n                style={currentSong.id ? {height: \"calc(100vh - 215px)\"} : {height: \"calc(100vh - 70px)\"}}> \r\n                <CalculateTimeContext.Provider value={calculateSongTime}>\r\n                    <SongList.Provider value={songList}>\r\n                        <Duration.Provider value={totalDuration}>\r\n                            <AlbumList.Provider value={albumList}>\r\n                                <Header artist={params.artistName} />\r\n                                <Body artist={params.artistName} />\r\n                                <Footer artist={params.artistName} />\r\n                            </AlbumList.Provider>\r\n                        </Duration.Provider>\r\n                    </SongList.Provider>\r\n                </CalculateTimeContext.Provider>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Artist;\r\n","import React, { useState, useRef, useEffect, useCallback, \r\n        forwardRef, useImperativeHandle, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\r\nimport { SpinnerRotate } from \"../spinner/spinner-grow\";\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious';\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\r\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\r\nimport VolumeDownIcon from '@mui/icons-material/VolumeDown';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nimport { LoadAudio, IsDark } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst MusicPlayer = forwardRef((props, ref) => {\r\n    const theme = useTheme();\r\n\r\n    const audioRef = useRef(null);\r\n    const borderRef = useRef(null);\r\n    const volumeRef = useRef(null);\r\n\r\n    const isDark = useContext(IsDark);\r\n    const loadAudio = useContext(LoadAudio);\r\n\r\n    const { playing, setPlaying } = props;\r\n\r\n    const [style, setStyle] = useState({display: 'none'});\r\n\r\n    // const [playing, setPlaying] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [playlist, setPlaylist] = useState([]);\r\n    const [currentSong, setCurrentSong] = useState({});\r\n    const [currentSongIdx, setCurrentSongIdx] = useState(0);\r\n\r\n    const [volume, setVolume] = useState(1.0);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [endTime, setEndTime] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    const updateBorderRef = useCallback(() => {\r\n        setCurrentTime(audioRef.current.currentTime);\r\n    }, []);\r\n\r\n    const playPauseSong = () => {\r\n        if(playing){\r\n            audioRef.current.pause();\r\n        }\r\n        else{\r\n            audioRef.current.play();\r\n        }\r\n        setPlaying(prev => !prev);\r\n    };\r\n\r\n    const prevSong = useCallback(() => {\r\n        if(currentSongIdx > 0){\r\n            props.setCurrentSong(playlist[currentSongIdx - 1]);\r\n        }\r\n    }, [props, currentSongIdx, playlist]);\r\n\r\n    const nextSong = useCallback(() => {\r\n        if(currentSongIdx < (playlist.length - 1)){\r\n            audioRef.current.pause(); \r\n            props.setCurrentSong(playlist[currentSongIdx + 1]);\r\n        }\r\n    }, [currentSongIdx, playlist, props]);\r\n\r\n    const volumeInc = () => {\r\n        if(volume < 1){\r\n            const vol = parseFloat(volume.toFixed(1)) + 0.1;\r\n            volumeRef.current.value = vol;\r\n            audioRef.current.volume = vol;\r\n            setVolume(vol);\r\n        }\r\n    };\r\n\r\n    const volumeDec = () => {\r\n        if(volume > 0){\r\n            const vol = parseFloat(volume.toFixed(1)) - 0.1;\r\n            volumeRef.current.value = vol;\r\n            audioRef.current.volume = vol;\r\n            setVolume(vol);\r\n        }\r\n    };\r\n\r\n    const handleMute = (vol) => {\r\n        setVolume(vol);\r\n        audioRef.current.volume = vol;\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        handlePlayPause(){\r\n            playPauseSong();\r\n        },\r\n        handleNextSong(){\r\n            nextSong();\r\n        },\r\n        handlePrevSong(){\r\n            prevSong();\r\n        },\r\n        handleVolumeInc(){\r\n            volumeInc();\r\n        },\r\n        handleVolumeDec(){\r\n            volumeDec();\r\n        },\r\n        }),\r\n    )\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n\r\n        const loadMusic = async () => {\r\n            try{\r\n                setLoading(true);\r\n                audioRef.current.src = await (apiLinks.getAudio + props.currentSong.musicKey);\r\n                const playPromise = audioRef.current.play();\r\n                audioRef.current.volume = volume;\r\n\r\n                setEndTime(props.currentSong.duration);\r\n\r\n                if (playPromise !== undefined) {\r\n                    playPromise.then(_ => {\r\n                      abortController = null;\r\n                    })\r\n                    .catch(error => {\r\n                      setPlaying(false);\r\n                    });\r\n                }\r\n\r\n                const currentSongIndex = props.playlist?.findIndex(obj => obj.id === props.currentSong?.id);\r\n                setCurrentSongIdx(currentSongIndex);\r\n\r\n                audioRef.current.onended = () => {\r\n                    if(currentSongIndex < props.playlist?.length - 1){\r\n                        loadAudio(props.playlist, props.playlist[currentSongIndex + 1], null);\r\n                    }\r\n                    else{\r\n                        loadAudio([], {}, null);\r\n                    }\r\n                    setPlaying(false);\r\n                };\r\n            }\r\n            catch(err){\r\n                console.log(\"An Error occured while loading music\", err);\r\n                // Error(err.message);\r\n            }\r\n            finally{\r\n                audioRef.current.oncanplaythrough = () => {\r\n                    setLoading(false);\r\n                    setPlaying(true);\r\n                };\r\n                \r\n                if(!(audioRef.current.paused) && audioRef.current.readyState > 0)\r\n                setLoading(false);\r\n            }\r\n        };\r\n        \r\n        if(props.currentSong?.musicTitle !== currentSong.musicTitle){\r\n            setPlaylist(props.playlist);\r\n            setCurrentSong(props.currentSong);\r\n            loadMusic();\r\n        }\r\n\r\n        return () => {\r\n            abortController?.abort();\r\n        }\r\n        \r\n    }, \r\n    [   props.currentSong, props.playlist, props, currentSongIdx, playlist, ref, volume, setPlaying, \r\n        props?.currentSong?.musicTitle, currentSong?.musicTitle, nextSong, updateBorderRef, loadAudio\r\n    ]);\r\n\r\n    return(\r\n        <>\r\n            <div className={`mt-2 bottom-navigation-container ${isDark ? \"player-dark\" : \"player-light\"}`}>\r\n                {/* <div ref={borderRef} className=\"top-one-row\"/> */}\r\n                <Slider\r\n                    ref={borderRef}\r\n                    aria-label=\"time-indicator\"\r\n                    size=\"small\"\r\n                    default={0}\r\n                    step={1}\r\n                    max={endTime}\r\n                    value={currentTime}\r\n                    onChange={(e) => {\r\n                        audioRef.current.currentTime = parseFloat(e.target.value);\r\n                        setCurrentTime(e.target.value);\r\n                    }}\r\n                    sx={{\r\n                        color: 'rgb(64, 226, 0)',\r\n                        height: 4,\r\n                        padding: '0 !important',\r\n                        '& .MuiSlider-thumb': {\r\n                        width: 15,\r\n                        height: 15,\r\n                        transition: '0.3s cubic-bezier(.47,1.64,.41,.8)',\r\n                        '&:before': {\r\n                            boxShadow: '0 2px 12px 0 rgba(0,0,0,0.4)',\r\n                        },\r\n                        '&:hover, &.Mui-focusVisible': {\r\n                            boxShadow: `0px 0px 0px 8px ${\r\n                            theme.palette.mode === 'dark'\r\n                                ? 'rgb(255 255 255 / 16%)'\r\n                                : 'rgb(0 0 0 / 16%)'\r\n                            }`,\r\n                        },\r\n                        '&.Mui-active': {\r\n                            width: 25,\r\n                            height: 25,\r\n                        },\r\n                        },\r\n                        '& .MuiSlider-rail': {\r\n                        opacity: 0.28,\r\n                        },\r\n                    }}\r\n                />\r\n                <div className=\"custom-bottom-navigation\" >\r\n                    <div className={`timeline start ${isDark ? \"dark-time\" : \"light-time\"}`}>{calculateSongTime(currentTime)}</div>\r\n                    <div className={`timeline end ${isDark ? \"dark-time\" : \"light-time\"}`}>{endTime !== Infinity ? calculateSongTime(endTime): '--:--'}</div>\r\n                    <div className=\"musicDetails\">\r\n                        <div className=\"image-box\">\r\n                            <div className=\"navbarHead-img-container\">\r\n                                <img \r\n                                    className={`navbarHead-img ${!currentSong.musicImageKey && \"hover-img\"}`} \r\n                                    src={currentSong.musicImageKey ? apiLinks.getImage + currentSong.musicImageKey : \"/assets/svg/dvd.svg\"} \r\n                                    alt=\"player-img\" \r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"music-detail-box\">\r\n                            <h5 className=\"music-title\">\r\n                                {currentSong.musicTitle}\r\n                            </h5>\r\n                            <h6 className=\"music-album\">\r\n                                <Link className={`${isDark ? \"dark-link-hover\" : \"light-link-hover\"}`} to={`/album/${currentSong.albumTitle}`}>\r\n                                    {currentSong.albumTitle}\r\n                                </Link>\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"custom-button-group-container\">\r\n                        <div className={`custom-button-group ${isDark ? \"dark\" : \"light\"}`}>\r\n                            <SkipPreviousIcon \r\n                                onClick={currentSongIdx > 0 ? prevSong : null}\r\n                                className={currentSongIdx === 0 ? `disabled-svg ${isDark ? \"dark\" : \"light\"}`: ''}\r\n                                style={currentSongIdx > 0 ? \r\n                                    { cursor: 'pointer'} : { cursor: 'not-allowed' }} \r\n                            />\r\n                            {\r\n                                loading ?\r\n                                    <SpinnerRotate \r\n                                        size=\"\"\r\n                                        color=\"success\"\r\n                                    /> :\r\n                                    playing ?\r\n                                        <PauseIcon title=\"Pause Song\" onClick={playPauseSong} /> : \r\n                                        <PlayArrowIcon title=\"Play Song\" onClick={playPauseSong} />\r\n                            }\r\n                            <SkipNextIcon \r\n                                onClick={currentSongIdx < (playlist.length - 1) ? nextSong: null}\r\n                                className={currentSongIdx === (playlist.length - 1) ? `disabled-svg ${isDark ? \"dark\" : \"light\"}`: ''}\r\n                                style={\r\n                                        currentSongIdx < (playlist.length - 1) ? \r\n                                            { cursor: 'pointer'} : { cursor: 'not-allowed' }} \r\n                            />\r\n                            <span \r\n                                className=\"volume-range-slider\"\r\n\r\n                                onClick={e => {\r\n                                    setStyle(prev => {\r\n                                        return {\r\n                                            display: prev.display === 'block' ? 'none' : 'block'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                            >\r\n                                {\r\n                                    volume > 0.5 ?\r\n                                        <VolumeUpIcon className=\"volume-svg\" /> :\r\n                                        volume > 0 ?\r\n                                            <VolumeDownIcon className=\"volume-svg\" /> :\r\n                                            <VolumeOffIcon className=\"volume-svg\" />\r\n                                }\r\n                                <input style={style} min={0} max={1} step={0.1} onChange={e => handleMute(parseFloat(e.target.value))}\r\n                                    type=\"range\" orient=\"vertical\" className=\"volume-slider\" ref={volumeRef} defaultValue={volume} />\r\n                            </span>\r\n                        </div>\r\n                        <audio ref={audioRef} preload=\"auto\" onTimeUpdate={updateBorderRef} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <Container className=\"mt-3 pt-5 pb-5\"/> */}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default MusicPlayer;","import React, { useState, useRef, useEffect } from 'react';\nimport { Flip, ToastContainer } from 'react-toastify';\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nimport Home from './pages/Home.js';\nimport Error from './pages/Error.js';\nimport Album from './pages/Album.js';\nimport Admin from './pages/admin.js';\nimport Artist from \"./pages/Artist.js\";\nimport { Subscribe, Unsubscribe } from './client/index';\nimport * as serviceWorker from './client/serviceWorker.js';\nimport MusicPlayer from \"./components/MusicPlayer/index.js\";\n\nimport './App.css';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const IsDark = React.createContext();\nexport const SetIsDark = React.createContext();\nexport const Playing = React.createContext();\nexport const LoadAudio = React.createContext();\nexport const PlayPause = React.createContext();\nexport const PlayerContext = React.createContext();\n\nfunction App() {\n  library.add(faHome);\n  \n  const player = useRef(null);\n\n  const [isDark, setIsDark] = useState(true);\n  const [playlist, setPlaylist] = useState([]);\n  const [playing, setPlaying] = useState(false);\n  const [currentSong, setCurrentSong] = useState({});\n\n  const loadAudio = (ll, item, e) => {\n    if(e)\n        e.preventDefault();\n    setPlaylist(ll);\n    setCurrentSong(item);\n    // console.log(ll, item);\n  };\n\n  const handleKeyPress = (e) => {\n    switch(e.code){\n        case 'Space':  \n            if(player.current)\n              e.preventDefault();\n              player?.current?.handlePlayPause();\n            break;\n        case 'ArrowLeft':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handlePrevSong();\n            break;\n        case 'ArrowRight':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleNextSong();\n            break;\n        case 'ArrowUp':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleVolumeInc();\n            break;\n        case 'ArrowDown':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleVolumeDec();\n            break;\n        default:\n            break;\n    }\n    return false;\n  };\n\n  const updateDark = () => {\n    window?.localStorage?.setItem(\"mode\", !isDark);\n    setIsDark(prev => !prev);\n  };\n\n  useEffect(() => {\n    if(Object.keys(currentSong).length > 0){\n      document.title = currentSong.musicTitle;\n    }\n    else{\n      document.title = \"Sangeet - Ad Free Music App\"\n    }\n  }, [currentSong]);\n\n  useEffect(() => {\n\n    if(\"Notification\" in window){\n      if(Notification.permission === \"default\"){\n          Notification.requestPermission().then((permission) => {\n              if(permission === \"granted\"){\n                  Subscribe();\n              }\n              else{\n                Unsubscribe();\n              }\n          })\n      }\n      else if(Notification.permission === \"granted\"){\n          Subscribe();\n          // console.log(\"already subscribed\");\n      }\n      else{\n        Unsubscribe();\n      }\n    }\n    else{\n        console.log(\"Notification is not supported\");\n    }\n    \n    setIsDark(window?.localStorage?.getItem(\"mode\") === 'true' ? true : false);\n    \n    window?.addEventListener('keydown', handleKeyPress, false);\n\n    return () => {\n      document.removeEventListener('keypress', handleKeyPress);\n    };\n  }, []);\n  \n  return (\n    <React.Fragment>\n      <PlayerContext.Provider value={currentSong}>\n        <PlayPause.Provider value={handleKeyPress}>\n          <Playing.Provider value={playing}>\n            <LoadAudio.Provider value={loadAudio}>\n              <IsDark.Provider value={isDark}>\n                <SetIsDark.Provider value={updateDark}>\n                  <div className={`app-bg ${isDark ? \"dark\" : \"light\"}`}>\n                    <Router>\n                      <Routes>\n\n                        <Route exact path=\"/\" element={<Home />} />\n                        <Route path=\"/album/:albumName\" element={<Album />} />\n                        <Route path=\"/artist/:artistName\" element={<Artist />} />\n                        <Route path=\"/admin/\" element={<Admin />} />\n                        <Route path=\"*\" element={<Error />} />\n\n                      </Routes>\n                      {\n                          playlist.length ? \n                              <MusicPlayer \n                                  ref={player}\n                                  currentSong={currentSong}\n                                  playlist={playlist}\n                                  setCurrentSong={setCurrentSong}\n                                  playing={playing}\n                                  setPlaying={setPlaying}\n                              />\n                              : <React.Fragment />\n                      }\n                    </Router>\n                  </div>\n                  <ToastContainer \n                      position='top-right'\n                      autoClose={3000}\n                      hideProgressBar={false}\n                      newestOnTop={true}\n                      closeOnClick={true}\n                      rtl={false}\n                      pauseOnFocusLoss\n                      draggable\n                      pauseOnHover\n                      theme=\"dark\"\n                      transition={Flip}\n                  />\n                </SetIsDark.Provider>\n              </IsDark.Provider>\n            </LoadAudio.Provider>\n          </Playing.Provider>\n        </PlayPause.Provider>\n      </PlayerContext.Provider>\n    </React.Fragment>\n  );\n}\n\nserviceWorker.register();\n\nexport default App;\n","export function register(){\r\n    if('serviceWorker' in navigator){\r\n        const url = \"http://localhost:3000/sw.js\";\r\n        // const url = \"http://3.109.59.110:5000/\"\r\n        navigator.serviceWorker.register(url, {\r\n            scope: '/',\r\n        })\r\n        .then(function(registration) {\r\n            registration.addEventListener('updatefound', function() {\r\n              // If updatefound is fired, it means that there's\r\n              // a new service worker being installed.\r\n              const installingWorker = registration.installing;\r\n              console.log('A new service worker is being installed:',\r\n                installingWorker);\r\n            });\r\n\r\n            registration.addEventListener('pushsubscriptionchange', function(event) {\r\n                console.log(\"Pushsubscriptionchange\", event);\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.log('Service worker registration failed:', error);\r\n        });\r\n    }\r\n    else {\r\n        console.log('Service workers are not supported.');\r\n    }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}