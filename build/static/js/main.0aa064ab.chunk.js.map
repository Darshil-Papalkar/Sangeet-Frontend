{"version":3,"sources":["connection.config.js","components/spinner/spinner-grow.js","components/Notification/Notification.js","components/navigation/Navigation-bar/navigation.js","pages/Home.js","pages/Error.js","components/Album/body.js","components/Album/header.js","components/Album/footer.js","pages/Album.js","components/Admin/textInput.js","components/Admin/newImageUpload.js","components/Admin/addNewModal.js","components/Admin/checkBoxInput.js","components/Admin/newMusicAdd.js","client/index.js","components/Tables/Genre-table.js","components/Tables/artists-table.js","components/Tables/music-table.js","components/Tables/category-table.js","components/Admin/editImageUpload.js","components/Admin/editExistingMusic.js","components/Warning/Warning.js","components/Admin/editExistingModal.js","components/navigation/Navigation-bar/admin-navigation.js","pages/admin.js","components/Artist/body.js","components/Artist/header.js","components/Artist/footer.js","pages/Artist.js","components/MusicPlayer/index.js","App.js","client/serviceWorker.js","reportWebVitals.js","index.js"],"names":["apiLinks","baseURL","subscribe","broadcast","status","getAudio","getImage","getAudioKey","getImageKey","getArtistImgKey","getArtistImgFromName","getAlbumDetails","getArtistDetails","getAllAudio","getAllAudioDetails","getAllArtists","getAllGenre","getAllCategory","postSong","addArtists","addGenre","addCategory","deleteMusic","deleteArtist","deleteGenre","deleteCategory","updateAdminData","updateAdminArtist","updateAdminGenre","updateAdminCategory","updateAdminMusicFav","updateAdminGenreFav","updateAdminArtistFav","updateAdminCategoryFav","SpinnerRotate","props","color","size","SpinnerGrow","isOpen","autoFocus","scrollable","keyboard","contentClassName","backdrop","centered","fullscreen","className","type","Success","message","autoClose","toast","success","position","hideProgressBar","closeOnClick","pauseOnFocusLoss","pauseOnHover","draggable","progress","undefined","Error","error","transition","Bounce","Navigation","navigate","useNavigate","useState","setIsOpen","updateNavClick","prev","dark","expand","onClick","toggle","direction","navbar","icon","faHome","faMusic","faBell","faSignInAlt","musicList","reducer","state","action","artistData","filter","item","show","genreData","categoryData","term","genreList","artistList","albumList","categoryList","i","length","list","genre","data","j","find","push","albumTitle","artists","artist","name","category","settings","dots","arrows","lazyLoad","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","easing","responsive","breakpoint","Home","loadAudio","useContext","LoadAudio","loader","setLoader","useReducer","dispatch","useEffect","abortController","AbortController","getAudioData","a","axios","get","signal","response","code","console","log","abort","Fragment","fluid","Object","keys","map","catList","ll","sort","b","keyA","Date","timeStamp","keyB","title","src","musicImageKey","alt","musicTitle","style","cursor","e","to","id","textAlign","Body","paused","Playing","songList","SongList","playPauseState","PlayPause","currentPlayer","PlayerContext","calculateTimeContext","CalculateTimeContext","playId","setPlayId","playing","setPlaying","updatePlayId","value","updatePlayPause","event","preventDefault","song","index","onMouseEnter","onMouseLeave","art","duration","Header","Artists","totalDuration","Duration","calculateTotalDuration","idx","fontSize","Footer","React","createContext","Album","params","useParams","setSongList","setArtists","setTotalDuration","getAlbum","albumName","headers","Set","songs","flat","reduce","partial_sum","Provider","time","Infinity","minutes","Math","floor","seconds","String","TextInput","xs","justifyContent","for","required","labelName","alignSelf","check","TextField","onChange","target","label","variant","Checkbox","onCheckBoxChange","checked","checkedValue","inputProps","checkedIcon","NewImageUpload","musicImgPath","musicImgName","close","removeSelectedImage","accept","uploadMusicImage","ref","hiddenFileInput","display","handleClick","outline","AddNewModal","useRef","setName","checkBoxChecked","setCheckBoxChecked","artistImg","setArtistImg","artistImgName","setArtistImgName","artistImgPath","setArtistPath","setData","tabId","artistRows","rowData","genreRows","categoryRows","addDetail","controller","names","split","nam","trim","formData","FormData","append","post","types","constructor","header","files","URL","createObjectURL","current","click","CheckBoxInput","FormControl","sx","width","InputLabel","Select","labelId","multiple","handleChange","input","OutlinedInput","renderValue","selected","join","MenuProps","MenuItem","indexOf","ListItemText","primary","random","PaperProps","maxHeight","ITEM_HEIGHT","NewMusicAdd","setGenreList","setArtistList","setCategoryList","musicName","addMusicWidget","musicDuration","hiddenMusicInput","uploadMusic","saveUploadMusic","handleMusicClick","fav","setFav","handleGenreChange","removeMusicDetails","removeSelectedSong","updateAddMusicWidget","handleCategoryChange","setMusicTitle","setAlbumTitle","genreController","artistController","categoryController","getGenreList","getArtistList","getCategoryList","lg","calculateSongTime","urlBase64ToUint8Array","base64String","base64","repeat","replace","rawData","window","atob","outputArray","Uint8Array","charCodeAt","Subscribe","navigator","serviceWorker","ready","registration","pushManager","userVisibleOnly","applicationServerKey","process","subscription","today","toISOString","JSON","stringify","Broadcast","columns","minWidth","align","maxWidth","GenreTable","setRows","rows","page","setPage","rowsPerPage","setRowsPerPage","updateFavState","put","row","Paper","overflow","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","hover","role","tabIndex","Edit","editGenre","Delete","toggleWarning","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","ArtistsTable","editArtist","StickyHeadTable","editRow","CategoryTable","editCategory","EditImageUpload","imageKey","EditExistingMusic","audioRef","load","setLoad","currentPaused","setCurrentPaused","musicKey","setMusicKey","musicImgKey","setMusicImgKey","editMusicWidget","editId","updateRow","updateEditMusicWidget","closeWidget","pauseSong","play","pause","updateSongState","onended","err","oncanplaythrough","readyState","saveEditFile","imgFileController","audioFileController","getImageFileKey","getAudioFileKey","currentTime","DeleteWarning","deleteRow","EditExistingModal","editedRow","artistImgKey","AdminNavigation","sticky","musicRows","Admin","audioDurationRef","open","setOpen","setTabId","catGenValue","setCatGenValue","setEditId","modalId","setModalId","setHeader","warning","setWarning","deleteId","setDeleteId","deleteItemName","setDeleteItemName","setGenre","setArtist","setCategory","setAddMusicWidget","addGenreWidget","setAddGenreWidget","addArtistWidget","setAddArtistWidget","addCategoryWidget","setAddCategoryWidget","setEditMusicWidget","editExistingWidget","setEditExistingWidget","music","setMusic","setMusicName","setMusicDuration","musicImg","setMusicImg","setMusicImgName","setMusicImgPath","updateTabId","defaultProps","options","getOptionLabel","option","musicController","getMusicData","getArtistsData","getGenreData","getCategoryData","getSearchedRow","searchedData","toLowerCase","includes","remove","editArtistGenreCategory","domain","editTableRow","entry","delete","actions","webkitURL","document","createElement","preload","onloadedmetadata","revokeObjectURL","Box","height","transform","flexGrow","Backdrop","SpeedDial","ariaLabel","bottom","right","SpeedDialIcon","onClose","onOpen","SpeedDialAction","tooltipTitle","tooltipOpen","tabs","Autocomplete","evt","val","getSearchedAutoCompleteRow","autoComplete","includeInputInList","renderInput","activeTab","editableRow","AlbumList","album","Artist","setAlbumList","artistName","MusicPlayer","forwardRef","borderRef","volumeRef","setStyle","loading","setLoading","playlist","setPlaylist","currentSong","setCurrentSong","currentSongIdx","setCurrentSongIdx","volume","setVolume","setCurrentTime","endTime","setEndTime","updateBorderRef","useCallback","percent","playPauseSong","prevSong","nextSong","useImperativeHandle","handlePlayPause","handleNextSong","handlePrevSong","handleVolumeInc","vol","parseFloat","toFixed","volumeInc","handleVolumeDec","volumeDec","loadMusic","playPromise","then","_","catch","currentSongIndex","findIndex","obj","min","max","step","orient","defaultValue","onTimeUpdate","register","scope","addEventListener","installingWorker","installing","App","library","add","player","handleKeyPress","Notification","permission","requestPermission","removeEventListener","exact","path","element","newestOnTop","rtl","theme","Flip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"iqBAAaA,EAAW,CAEpBC,QAAU,6BAKdD,EAASE,UAAYF,EAASC,QAAQ,eACtCD,EAASG,UAAYH,EAASC,QAAQ,YAGtCD,EAASI,OAASJ,EAASC,QAAQ,SACnCD,EAASK,SAAWL,EAASC,QAAQ,SACrCD,EAASM,SAAWN,EAASC,QAAQ,SACrCD,EAASO,YAAcP,EAASC,QAAQ,YACxCD,EAASQ,YAAcR,EAASC,QAAQ,YACxCD,EAASS,gBAAkBT,EAASC,QAAQ,kBAC5CD,EAASU,qBAAuBV,EAASC,QAAQ,wBACjDD,EAASW,gBAAkBX,EAASC,QAAQ,SAC5CD,EAASY,iBAAmBZ,EAASC,QAAQ,UAC7CD,EAASa,YAAcb,EAASC,QAAQ,cACxCD,EAASc,mBAAqBd,EAASC,QAAQ,qBAC/CD,EAASe,cAAgBf,EAASC,QAAQ,gBAC1CD,EAASgB,YAAchB,EAASC,QAAQ,cACxCD,EAASiB,eAAiBjB,EAASC,QAAQ,iBAG3CD,EAASkB,SAAWlB,EAASC,QAAQ,aACrCD,EAASmB,WAAanB,EAASC,QAAQ,iBACvCD,EAASoB,SAAWpB,EAASC,QAAQ,eACrCD,EAASqB,YAAcrB,EAASC,QAAQ,kBAGxCD,EAASsB,YAActB,EAASC,QAAQ,qBACxCD,EAASuB,aAAevB,EAASC,QAAQ,sBACzCD,EAASwB,YAAcxB,EAASC,QAAQ,qBACxCD,EAASyB,eAAiBzB,EAASC,QAAQ,wBAG3CD,EAAS0B,gBAAkB1B,EAASC,QAAQ,oBAC5CD,EAAS2B,kBAAoB3B,EAASC,QAAQ,sBAC9CD,EAAS4B,iBAAmB5B,EAASC,QAAQ,qBAC7CD,EAAS6B,oBAAsB7B,EAASC,QAAQ,wBAEhDD,EAAS8B,oBAAsB9B,EAASC,QAAQ,wBAChDD,EAAS+B,oBAAsB/B,EAASC,QAAQ,wBAChDD,EAASgC,qBAAuBhC,EAASC,QAAQ,yBACjDD,EAASiC,uBAAyBjC,EAASC,QAAQ,2B,kBCK7CiC,EAAgB,SAACC,GAEnB,OACI,cAAC,IAAD,CACIC,MAAOD,EAAMC,OAAS,UACtBC,KAAMF,EAAME,MAAQ,GAFxB,yBAUOC,EA5DK,SAACH,GAEjB,OACI,cAAC,IAAD,CACII,QAAQ,EACRC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,iBAAiB,qBACjBC,SAAS,SACTC,UAAQ,EACRC,WAAW,KACXT,KAAK,KATT,SAWI,eAAC,IAAD,WACI,cAAC,IAAD,CACID,MAAOD,EAAMC,OAAS,UACtBC,KAAMF,EAAME,MAAQ,GACpBU,UAAU,oBACVC,KAAK,OAJT,wBASA,cAAC,IAAD,CACIZ,MAAOD,EAAMC,OAAS,UACtBC,KAAMF,EAAME,MAAQ,GACpBW,KAAK,OACLD,UAAU,qBAJd,wBASA,cAAC,IAAD,CACIX,MAAOD,EAAMC,OAAS,UACtBC,KAAMF,EAAME,MAAQ,GACpBU,UAAU,oBACVC,KAAK,OAJT,8BCpCHC,EAAU,SAACC,GAA6B,IAApBC,EAAmB,uDAAT,IAEvCC,IAAMC,QAAQH,EAAS,CACnBI,SAAU,YACVH,UAAWA,EACXI,iBAAiB,EACjBC,cAAc,EACdC,kBAAkB,EAClBC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAILC,EAAQ,SAACZ,GAA6B,IAApBC,EAAmB,uDAAT,IAErCC,IAAMW,MAAMb,EAAS,CACjBI,SAAU,YACVH,UAAWA,EACXI,iBAAiB,EACjBC,cAAc,EACdC,kBAAkB,EAClBC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVG,WAAYC,O,QCiDLC,G,OAnEI,SAAC/B,GAChB,IAAMgC,EAAWC,cAEjB,EAA4BC,oBAAS,GAArC,mBAAO9B,EAAP,KAAe+B,EAAf,KAEMC,EAAiB,WACnBD,GAAU,SAAAE,GAAI,OAAKA,MAGvB,OACI,qCAEI,qBAAKzB,UAAU,4BAAf,SACI,eAAC,IAAD,CACIX,MAAM,OACNqC,MAAI,EACJC,OAAO,QACP3B,UAAU,UAJd,UAMI,cAAC,IAAD,CAAaA,UAAU,UAAvB,SACI,qBAAKA,UAAU,aAAa4B,QAAS,kBAAMR,EAAS,MAApD,uBAIJ,cAAC,IAAD,CAAepB,UAAU,OAAO4B,QAASJ,IAEzC,eAAC,IAAD,CAAWhC,OAAQA,EAAQQ,UAAU,gBAAgBN,YAAY,EAC7DmC,OAAQL,EAAgBM,UAAU,MADtC,UAEI,cAAC,IAAD,CAAiBD,OAAQL,IAGzB,cAAC,IAAD,CAAexB,UAAU,oBAAzB,SACI,eAAC,IAAD,CAAKA,UAAU,UAAU+B,QAAM,EAA/B,UACI,cAAC,IAAD,CAAS/B,UAAU,cAAnB,SACI,eAAC,IAAD,CAASA,UAAU,mBAAmB4B,QAAS,kBAAMR,EAAS,MAA9D,UACI,cAAC,IAAD,CAAiBY,KAAMC,MACvB,sBAAMjC,UAAU,kBAFpB,aAKJ,cAAC,IAAD,CAASA,UAAU,cAAnB,SACI,eAAC,IAAD,CAASA,UAAU,mBAAnB,UACI,cAAC,IAAD,CAAiBgC,KAAME,MACvB,sBAAMlC,UAAU,kBAFpB,kBAKJ,cAAC,IAAD,CAASA,UAAU,cAAnB,SACI,eAAC,IAAD,CAASA,UAAU,mBAAnB,UACI,cAAC,IAAD,CAAiBgC,KAAMG,MACvB,sBAAMnC,UAAU,kBAFpB,sBAKJ,cAAC,IAAD,CAASA,UAAU,cAAnB,SACI,eAAC,IAAD,CAASA,UAAU,mBAAnB,UACI,cAAC,IAAD,CAAiBgC,KAAMI,MACvB,sBAAMpC,UAAU,kBAFpB,oCAUxB,cAAC,IAAD,CAAWA,UAAU,mBCzD3BqC,G,OAAY,IAEZC,EAAU,SAACC,EAAOC,GACpB,OAAOA,EAAOvC,MACV,IAAK,gBAiBD,IAhBA,IAAMwC,EAAaD,EAAOC,WAAWC,QAAO,SAAAC,GAAI,OAAkB,IAAdA,EAAKC,QACnDC,EAAYL,EAAOK,UAAUH,QAAO,SAAAC,GAAI,OAAkB,IAAdA,EAAKC,QACjDE,EAAeN,EAAOM,aAAaJ,QAAO,SAAAC,GAAI,OAAkB,IAAdA,EAAKC,QACvDG,EAAOP,EAAOrC,QAAQuC,QAAO,SAAAC,GAAI,OAAkB,IAAdA,EAAKC,QAO5CI,EAAY,GACZC,EAAa,GACbC,EAAY,GACZC,EAAe,GACfd,EAAYG,EAAOrC,QAEfiD,EAAE,EAAGA,EAAIL,EAAKM,OAAQD,IAAI,CAI9B,IADA,IAAIE,EAAOP,EAAKK,GAAGG,MAHW,aAK1B,IAAMC,EAAOF,EAAKG,GACfZ,EAAUa,MAAK,SAAAH,GAAK,OAAIA,EAAMtD,OAASuD,YACf1C,IAApBkC,EAAUQ,GACTR,EAAUQ,GAAQ,CAACT,EAAKK,IAGxBJ,EAAUQ,GAAMG,KAAKZ,EAAKK,MAP9BK,EAAE,EAAGA,EAAIH,EAAKD,OAAQI,IAAK,SAcZ3C,IAApBoC,EADHI,EAAOP,EAAKK,GAAGQ,YAEXV,EAAUI,GAAQ,CAACP,EAAKK,IAGxBF,EAAUI,GAAMK,KAAKZ,EAAKK,IAI9BE,EAAOP,EAAKK,GAAGS,QA1Be,iBA4B1B,IAAML,EAAOF,EAAKG,GACfhB,EAAWiB,MAAK,SAAAI,GAAM,OAAIA,EAAOC,OAASP,YACjB1C,IAArBmC,EAAWO,GACVP,EAAWO,GAAQ,CAACT,EAAKK,IAGzBH,EAAWO,GAAMG,KAAKZ,EAAKK,MAPvC,IAAIK,EAAE,EAAGA,EAAIH,EAAKD,OAAQI,IAAK,IAa/BH,EAAOP,EAAKK,GAAGY,SAxCe,iBA0C1B,IAAMR,EAAOF,EAAKG,GACfX,EAAaY,MAAK,SAAAM,GAAQ,OAAIA,EAAS/D,OAASuD,YACrB1C,IAAvBqC,EAAaK,GACZL,EAAaK,GAAQ,CAACT,EAAKK,IAG3BD,EAAaK,GAAMG,KAAKZ,EAAKK,MAPzC,IAAIK,EAAE,EAAGA,EAAIH,EAAKD,OAAQI,IAAK,IAuBnC,MAVa,CACTT,YACAE,YACAD,aACAE,eACAd,aAOR,IAAK,cAED,OADAtB,EAAMyB,EAAOrC,SACNoC,EACX,QACI,OAAOA,IAIb0B,EAAW,CACbC,MAAM,EACNC,QAAQ,EACRvD,WAAW,EACXwD,SAAU,WACVC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,cAAc,EACdC,OAAQ,SACRC,WAAY,CACR,CACIC,WAAY,KACZX,SAAU,CACRM,aAAc,IAGpB,CACIK,WAAY,KACZX,SAAU,CACRM,aAAc,IAGpB,CACEK,WAAY,KACZX,SAAU,CACRM,aAAc,IAGlB,CACIK,WAAY,IACZX,SAAU,CACRM,aAAc,IAGpB,CACEK,WAAY,IACZX,SAAU,CACRM,aAAc,IAGlB,CACEK,WAAY,IACZX,SAAU,CACRM,aAAc,IAGlB,CACIK,WAAY,IACZX,SAAU,CACRM,aAAc,MA0KbM,EApKF,SAACzF,GACV,IAAM0F,EAAYC,qBAAWC,IAE7B,EAA4B1D,oBAAS,GAArC,mBAAO2D,EAAP,KAAeC,EAAf,KAEA,EAAyBC,qBAAW7C,EAASD,GAA7C,mBAAOiB,EAAP,KAAa8B,EAAb,KA8CA,OA1CAC,qBAAU,WAEN,IAAIC,EAAkB,IAAIC,gBAEpBC,EAAY,uCAAG,4BAAAC,EAAA,sEAEbP,GAAU,GAFG,SAGUQ,IAAMC,IAAI1I,EAASc,mBAAoB,CAC1D6H,OAAQN,EAAgBM,SAJf,OAMa,OAHpBC,EAHO,QAMDrC,KAAKsC,KACbV,EAAS,CAAGnF,KAAM,gBACNE,QAAS0F,EAASrC,KAAKrD,QACvBsC,WAAYoD,EAASrC,KAAKf,WAC1BI,UAAWgD,EAASrC,KAAKX,UACzBC,aAAc+C,EAASrC,KAAKV,eAIxCsC,EAAS,CAAEnF,KAAM,cAAeE,QAAS0F,EAASrC,KAAKrD,UAf9C,gDAmBb4F,QAAQC,IAAR,MACAZ,EAAS,CAAEnF,KAAM,cAAeE,QAAS,KAAIA,UApBhC,yBAuBb+E,GAAU,GAvBG,4EAAH,qDA6BlB,OAFAM,IAEO,WACAF,IACgB,OAAfA,QAAe,IAAfA,KAAiBW,QACjBf,GAAU,OAInB,IAGC,sBAAKlF,UAAU,MAAf,UACKiF,EACG,cAAC,EAAD,CAAa5F,MAAM,YACnB,cAAC,IAAM6G,SAAP,IAEJ,cAAC,EAAD,IACA,cAAC,IAAD,CAAoCC,OAAK,EAAzC,SACK7C,EAAKH,aACFiD,OAAOC,KAAK/C,EAAKH,cAAcmD,KAAI,SAAAC,GAC/B,IAAIC,EAAK,GAYT,OAVIA,EADW,iBAAZD,EACMjD,EAAKH,aAAaoD,GAASE,MAAK,SAAChB,EAAGiB,GACrC,IAAIC,EAAO,IAAIC,KAAKnB,EAAEoB,WAClBC,EAAO,IAAIF,KAAKF,EAAEG,WACtB,OAAGF,EAAOG,EAAa,EACfH,EAAOG,GAAc,EACjB,KAGXxD,EAAKH,aAAaoD,GAGvB,eAAC,IAAD,CAAyBvG,UAAU,yBAAyBmG,OAAK,EAAjE,UACI,oBAAInG,UAAU,wBAAwB+G,MAAOR,EAA7C,SAAuDA,IACvD,cAAC,IAAD,2BAAYtC,GAAZ,aACKuC,EAAGF,KAAI,SAAA3D,GACJ,OACI,sBAAmB3C,UAAU,8BAA7B,UACI,qBAAKA,UAAU,uBAAf,SACI,qBACIgH,IAAK/J,EAASM,SAAWoF,EAAKsE,cAC9BC,IAAKvE,EAAKwE,WACVnH,UAAU,iBAGlB,qBAAKA,UAAU,sBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,iBAAiB+G,MAAK,eAAUpE,EAAKwE,YAAnD,SACI,sBAAMC,MAAO,CAACC,OAAQ,WAAYzF,QAAS,SAAC0F,GAAD,OAAOxC,EAAU0B,EAAI7D,EAAM2E,IAAtE,SACK3E,EAAKwE,eAGd,oBAAIJ,MAAK,gBAAWpE,EAAKiB,YAAc5D,UAAU,cAAjD,SACI,cAAC,IAAD,CAAMuH,GAAE,iBAAY5E,EAAKiB,YAAc5D,UAAU,cAAjD,SACK2C,EAAKiB,sBAjBhBjB,EAAK6E,YALfjB,MAmD1B,cAAC,IAAML,SAAP,KAnES,sBAsEf,cAAC,IAAD,CAAkClG,UAAU,OAAOmG,OAAK,EAAxD,SACM7C,EAAKL,WACH,eAAC,IAAD,CAAWjD,UAAU,mBAAmBmG,OAAK,EAA7C,UACI,oBAAInG,UAAU,wBAAwB+G,MAAM,UAA5C,qBACA,cAAC,IAAD,2BAAY9C,GAAZ,aACEmC,OAAOC,KAAK/C,EAAKL,YAAYqD,KAAI,SAACxC,EAAQ0D,GACxC,OACI,sBAAcxH,UAAU,8BAAxB,UACI,qBAAKA,UAAU,8BAAf,SACI,qBACIgH,IAAK/J,EAASU,qBAAuBmG,EACrCoD,IAAKpD,EACL9D,UAAU,wBAGlB,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,YAAYoH,MAAO,CAACK,UAAW,UAA9C,SACI,oBAAIzH,UAAU,wBAAwB+G,MAAOjD,EAA7C,SACI,cAAC,IAAD,CAAMyD,GAAE,kBAAazD,GAAU9D,UAAU,cAAzC,SACK8D,YAZX0D,YAsBvB,cAAC,IAAMtB,SAAP,KA7BQ,oBA+Bf,cAAC,IAAD,CAAWlG,UAAU,YAAYmG,OAAK,QCzTnCpF,G,OARD,WACZ,OACI,8BACI,2C,4DCuHK2G,G,OAjHF,SAACtI,GAGV,IAAMuI,EAAS5C,qBAAW6C,IACpBC,EAAW9C,qBAAW+C,GACtBhD,EAAYC,qBAAWC,IACvB+C,EAAiBhD,qBAAWiD,IAC5BC,EAAgBlD,qBAAWmD,IAC3BC,EAAuBpD,qBAAWqD,GAExC,EAA4B9G,mBAAS,GAArC,mBAAO+G,EAAP,KAAeC,EAAf,KACA,EAA8BhH,oBAAS,GAAvC,mBAAOiH,EAAP,KAAgBC,EAAhB,KAEMC,EAAe,SAACC,GAClBJ,EAAUI,IAGRC,EAAkB,SAACC,GACrB,IAAMtB,EAAC,2BACAsB,GADA,IAEH9C,KAAM,QACN+C,eAAgB,eAGpBd,EAAeT,IAGnB,OACI,cAAC,IAAMpB,SAAP,UACI,cAAC,IAAD,UACI,qBAAKlG,UAAU,YAAf,SAEQ6H,EAASvB,KAAI,SAACwC,EAAMC,GAAW,IAAD,EAC1B,OACI,gCACI,sBAAK/I,UAAU,YAEXoH,MAAOa,EAAcT,IAAMS,EAAcT,KAAOsB,EAAKtB,GAAK,CAACnI,MAAO,QAAS,KAC3E2J,aAAc,SAAC1B,GAAOmB,EAAaK,EAAKtB,KACxCyB,aAAc,SAAC3B,GAAOmB,EAAa,IAJvC,UAMI,sBAAKzI,UAAU,aAAf,UACI,qBAAKA,UAAU,OAAO4B,QAAS,SAAA0F,GAAC,OAAIxC,EAAU+C,EAAUiB,EAAMxB,IAA9D,SAEQW,EAAcT,IAAMS,EAAcT,KAAOsB,EAAKtB,GAC9C,sBACIwB,aAAc,kBAAMR,GAAW,IAC/BS,aAAc,kBAAMT,GAAW,IAFnC,SAKSb,EAIGY,EACI,cAAC,IAAD,CACI3G,QAAW,SAAA0F,GAAC,OAAIqB,EAAgBrB,MAEpC,cAAC,IAAD,IAPJ,cAAC,IAAD,CACI1F,QAAW,SAAA0F,GAAC,OAAIqB,EAAgBrB,QAShDe,IAAWS,EAAKtB,GACZ,cAAC,IAAD,IACAuB,EAAM,IAGlB,sBAAK/I,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAf,SACK8I,EAAK3B,aAEV,qBAAKnH,UAAU,wBAAf,mBAEQ8I,EAAKjF,eAFb,aAEQ,EAAcyC,KAAI,SAAC4C,EAAKH,GACpB,OACI,sBAAK/I,UAAU,GAAf,UACI,sBAAMA,UAAU,mBAAhB,SAEgB,oBAARkJ,EACIA,EACA,cAAC,IAAD,CAAM3B,GAAE,kBAAa2B,GAArB,SACSA,MAIrB,uBAAMlJ,UAAU,8BAAhB,UACK8I,EAAKjF,QAAQR,OAAS,EAAI0F,EAAQ,IAAK,GAD5C,YAVmBA,cAoB/C,qBAAK/I,UAAU,WAAf,SACS8I,EAAKK,SAAWhB,EAAqBW,EAAKK,UAAY,YA3D1DL,EAAKtB,IA+DVuB,EAAQlB,EAASxE,OAAS,EACtB,qBAAKrD,UAAU,wBAA4B+I,GAC3C,cAAC,IAAM7C,SAAP,MAnEF6C,c,kBCS3BK,G,OA9CA,SAAChK,GAAW,IAAD,MAChByE,EAAUkB,qBAAWsE,GACrBxB,EAAW9C,qBAAW+C,GACtBwB,EAAgBvE,qBAAWwE,GAC3BC,EAAyBzE,qBAAWqD,GAE1C,OACI,cAAC,IAAMlC,SAAP,UACI,cAAC,IAAD,UACI,sBAAKlG,UAAU,kBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBACIA,UAAU,cACVgH,IAAK/J,EAASM,UAAT,UAAoBsK,EAAS,UAA7B,aAAoB,EAAaZ,eACtCC,IAAG,UAAEW,EAAS,UAAX,aAAE,EAAajE,eAE1B,sBAAK5D,UAAU,gBAAf,UACI,qBAAKA,UAAU,gBAAf,mBAGA,qBAAKA,UAAU,aAAf,mBACK6H,EAAS,UADd,aACK,EAAajE,aAElB,sBAAK5D,UAAU,gBAAf,UAEQ6D,EAAQR,OAAS,EACb,kBADJ,OAEIQ,QAFJ,IAEIA,OAFJ,EAEIA,EAASyC,KAAI,SAACxC,EAAQ2F,GAClB,OACI,iCACI,cAAC,IAAD,CAAMlC,GAAE,kBAAazD,GAArB,SACKA,IAEJ2F,EAAO5F,EAAQR,OAAS,EAAK,MAAQ,MAJ/BoG,MAN/B,SAca,cAAC,IAAD,CAAYrC,MAAO,CAAEsC,SAAU,WAd5C,QAckEF,EAAuBF,kBCpC3GrF,G,OAAW,CACbC,MAAM,EACNC,QAAQ,EACRvD,WAAW,EACXwD,SAAU,WACVC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,cAAc,EACdC,OAAQ,SACRC,WAAY,CACR,CACEC,WAAY,KACZX,SAAU,CACRM,aAAc,IAGlB,CACIK,WAAY,IACZX,SAAU,CACRM,aAAc,IAGpB,CACEK,WAAY,IACZX,SAAU,CACRM,aAAc,IAGlB,CACEK,WAAY,IACZX,SAAU,CACRM,aAAc,IAGlB,CACIK,WAAY,IACZX,SAAU,CACRM,aAAc,OAiDboF,EA3CA,SAACvK,GAAW,IAAD,EAElB6D,EAAa8B,qBAAWsE,GAG5B,OAFApG,EAAU,UAAGA,SAAH,aAAG,EAAYP,QAAO,SAAAoB,GAAM,MAAe,oBAAXA,KAGtC,eAAC,IAAMoC,SAAP,WACI,cAAC,IAAD,CAAkClG,UAAU,OAA5C,SACMiD,EAAWI,OACT,eAAC,IAAD,CAAWrD,UAAU,mBAArB,UACI,oBAAIA,UAAU,wBAAwB+G,MAAM,UAA5C,2BACA,cAAC,IAAD,2BAAY9C,GAAZ,aACEhB,EAAWqD,KAAI,SAACxC,EAAQ0D,GACtB,OACI,sBAAcxH,UAAU,8BAAxB,UACI,qBAAKA,UAAU,8BAAf,SACI,qBACIgH,IAAK/J,EAASU,qBAAuBmG,EACrCoD,IAAKpD,EACL9D,UAAU,wBAGlB,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,YAAYoH,MAAO,CAACK,UAAW,UAA9C,SACI,oBAAIzH,UAAU,wBAAwB+G,MAAOjD,EAA7C,SACI,cAAC,IAAD,CAAMyD,GAAE,kBAAazD,GAAU9D,UAAU,cAAzC,SACK8D,YAZX0D,YAsBvB,cAAC,IAAMtB,SAAP,KA7BQ,oBA+Bf,cAAC,IAAD,CAAWlG,UAAU,OAAOmG,OAAK,QChFhCkD,G,OAAUO,IAAMC,iBAChB/B,EAAW8B,IAAMC,gBACjBN,EAAWK,IAAMC,gBACjBzB,EAAuBwB,IAAMC,gBAsF3BC,EApFD,SAAC1K,GACX,IAAM2K,EAASC,cAEf,EAA4B1I,oBAAS,GAArC,mBAAO2D,EAAP,KAAeC,EAAf,KACA,EAAgC5D,mBAAS,IAAzC,mBAAOuG,EAAP,KAAiBoC,EAAjB,KACA,EAA8B3I,mBAAS,IAAvC,mBAAOuC,EAAP,KAAgBqG,EAAhB,KACA,EAA0C5I,mBAAS,GAAnD,mBAAOgI,EAAP,KAAsBa,EAAtB,KAwDA,OA5CA9E,qBAAU,WACN,IAAIC,EAAkB,IAAIC,gBAEpB6E,EAAQ,uCAAG,gCAAA3E,EAAA,sEAETP,GAAU,GAFD,SAGcQ,IAAMC,IAAI1I,EAASW,gBAAgBmM,EAAOM,UAAW,CACxEC,QAAS,CACL,eAAgB,oBAEpB1E,OAAQN,EAAgBM,SAPnB,OASiB,OANpBC,EAHG,QASGrC,KAAKsC,MACPhC,EADoB,YACP,IAAIyG,IAAI1E,EAASrC,KAAKrD,QAAQmG,KAAI,SAACkE,GAAD,OAAWA,EAAM3G,WAAS4G,SACzEtB,EAAWtD,EAASrC,KAAKrD,QAAQuK,QAAO,SAACC,EAAalF,GAAd,OAAoBkF,EAAclF,EAAE0D,WAAU,GAE5Fe,EAAWpG,GACXqG,EAAiBhB,GACjBc,EAAYpE,EAASrC,KAAKrD,SAC1BmF,EAAkB,MAGlBvE,EAAM8E,EAASrC,KAAKrD,SAnBf,gDAuBTY,EAAM,KAAIZ,SAvBD,yBA0BT+E,GAAU,GA1BD,4EAAH,qDAgCd,OAFAkF,IAEO,WACiB,IAAD,EAAhB9E,IACgB,QAAf,EAAAA,SAAA,SAAiBW,QACjBf,GAAU,OAInB,CAAC6E,IAGA,eAAC,IAAM7D,SAAP,WACKjB,EACG,cAAC,EAAD,CAAa5F,MAAM,YACnB,cAAC,IAAM6G,SAAP,IAEJ,cAAC,EAAD,IACA,cAACkC,EAAqBwC,SAAtB,CAA+BlC,MA7Db,SAACmC,GAEvB,GAAGA,IAASC,IAAS,CACjB,IAAMC,EAAUC,KAAKC,MAAMJ,EAAO,IAC5BK,EAAUF,KAAKC,MAAMJ,EAAO,IAClC,MAAM,GAAN,OAAUE,EAAU,GAAK,IAAMI,OAAOJ,GAAWI,OAAOJ,GAAxD,YAAoEG,EAAU,GAAK,IAAMC,OAAOD,GAAWC,OAAOD,IAEtH,OAAOL,GAsDH,SACI,cAAC/C,EAAS8C,SAAV,CAAmBlC,MAAOb,EAA1B,SACI,cAACwB,EAAQuB,SAAT,CAAkBlC,MAAO7E,EAAzB,SACI,eAAC0F,EAASqB,SAAV,CAAmBlC,MAAOY,EAA1B,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,iB,gOCrCb8B,GAlDG,SAAChM,GAgBf,OACI,eAAC,IAAD,CAAKY,UAAU,sBAAf,UACI,cAAC,IAAD,CAAKA,UAAU,YAAYqL,GAAG,IAA9B,SACI,cAAC,IAAD,CAAOrL,UAAU,gBAAgBoH,MAAO,CAACkE,eAAgB,YAAaC,IAAKnM,EAAMoI,GAAjF,SAEQpI,EAAMoM,SACN,qCACKpM,EAAMqM,UADX,IACsB,sBAAMrE,MAAO,CAAC/H,MAAO,OAAQqM,UAAW,cAAxC,kBAEtBtM,EAAMqM,cAIlB,cAAC,IAAD,CAAKzL,UAAU,YAAYqL,GAAIjM,EAAMuM,MAAQ,IAAM,IAAnD,SACI,cAACC,GAAA,EAAD,CACIlD,MAAOtJ,EAAMsJ,MACbmD,SApBM,SAACjD,GACnBxJ,EAAMyM,SAASjD,EAAMkD,OAAOpD,QAoBhB1I,UAAU,qBACVwH,GAAE,4BAAuBpI,EAAMoI,IAC/BuE,MAAO3M,EAAM2M,MACbC,QAAQ,eAIZ5M,EAAMuM,MACN,cAAC,IAAD,CAAK3L,UAAU,YAAYqL,GAAG,IAA9B,SACI,cAACY,GAAA,EAAD,yBAAUJ,SAlCF,SAACjD,GACrBxJ,EAAM8M,iBAAiBtD,EAAMkD,OAAOK,UAiCaA,QAAS/M,EAAMgN,cAxCtD,CACVC,WAAY,CACR,aAAc,qBAsCN,IAA6ErK,KAAM,cAAC,KAAD,IAAoBsK,YAAa,cAAC,KAAD,SAExH,cAAC,IAAMpG,SAAP,QCNDqG,GA1CQ,SAACnN,GAEpB,OACI,eAAC,IAAM8G,SAAP,WACI,qBAAKlG,UAAU,gBAAf,SACI,qBACIA,UAAU,oBACVgH,IAAK5H,EAAMoN,aACXtF,IAAK9H,EAAMqN,iBAGnB,sBAAKzM,UAAU,sBAAf,UACI,sBAAKA,UAAU,sEAAf,UACI,uBAAMA,UAAU,oBAAhB,eAC8B,KAAvBZ,EAAMqN,aAAsB,eAAiBrN,EAAMqN,aAD1D,QAI2B,KAAvBrN,EAAMqN,aAAsB,cAAC,IAAMvG,SAAP,IAC5B,cAAC,IAAD,CAAQa,MAAM,eAAe2F,OAAK,EAAC9K,QAASxC,EAAMuN,yBAG1D,sBAAK3M,UAAU,qBAAf,UACI,uBACI4M,OAAO,UACP3M,KAAK,OACL4L,SAAUzM,EAAMyN,iBAChBC,IAAK1N,EAAM2N,gBACX3F,MAAO,CAAC4F,QAAS,UAErB,cAAC,IAAD,CACIpL,QAASxC,EAAM6N,YACf5N,MAAM,OACN6N,SAAS,EAHb,oCCyKLC,GA/LK,SAAC/N,GAEjB,IAAM2N,EAAkBK,iBAAO,MAE/B,EAA4B9L,oBAAS,GAArC,mBAAO2D,EAAP,KAAeC,EAAf,KAEA,EAAwB5D,mBAAS,IAAjC,mBAAOyC,EAAP,KAAasJ,EAAb,KACA,EAA8C/L,oBAAS,GAAvD,mBAAOgM,EAAP,KAAwBC,EAAxB,KAEA,EAAkCjM,mBAAS,IAA3C,mBAAOkM,EAAP,KAAkBC,EAAlB,KACA,EAA0CnM,mBAAS,IAAnD,mBAAOoM,EAAP,KAAsBC,EAAtB,KACA,EAAuCrM,mBAAS,oCAAhD,mBAAOsM,EAAP,KAAsBC,EAAtB,KAcMlB,EAAsB,WACxBc,EAAa,IACbE,EAAiB,IACjBE,EAAc,qCAGZC,EAAU,SAACjI,GAKiB,IAAD,EAJ7B,GAAqB,IAAhBzG,EAAM2O,OAA4B,MAAb3O,EAAMoI,IACX,IAAhBpI,EAAM2O,OAA4B,MAAb3O,EAAMoI,IACX,IAAhBpI,EAAM2O,OAA4B,MAAb3O,EAAMoI,GAExB,GAAmB,IAAhBpI,EAAM2O,OACL,EAAA3O,EAAM4O,YAAWrK,KAAjB,oBAA0BkC,EAASrC,KAAKyK,eAEvC,GAAmB,IAAhB7O,EAAM2O,MAAY,CAAC,IAAD,GACtB,EAAA3O,EAAM8O,WAAUvK,KAAhB,oBAAyBkC,EAASrC,KAAKyK,eAEtC,GAAmB,IAAhB7O,EAAM2O,MAAY,CAAC,IAAD,GACtB,EAAA3O,EAAM+O,cAAaxK,KAAnB,oBAA4BkC,EAASrC,KAAKyK,eAG1ClN,EAAM,0CAShBqN,EAAS,uCAAG,sCAAA3I,EAAA,yDACV4I,EAAa,IAAI9I,gBADP,SAKVL,GAAU,GACJoJ,EAAQvK,EAAKwK,MAAM,KAAKjI,KAAI,SAAAkI,GAAG,OAAIA,EAAIC,WAEvCC,EAAW,IAAIC,UACZC,OAAO,QAASN,GACzBI,EAASE,OAAO,OAAQtB,GACpBzH,EAAW,GAEC,MAAbzG,EAAMoI,GAbC,wBAcNkH,EAASE,OAAO,YAAapB,EAAU,IAdjC,UAeW9H,IAAMmJ,KAAK5R,EAASmB,WAAYsQ,EAAU,CACvD9I,OAAQyI,EAAWzI,SAhBjB,QAeNC,EAfM,kCAmBW,MAAbzG,EAAMoI,GAnBJ,kCAoBW9B,IAAMmJ,KAAK5R,EAASoB,SAAU,CAC3CyQ,MAAOR,EACP1L,KAAM0K,GACP,CACC1H,OAAQyI,EAAWzI,OACnB0E,QAAS,CACL,eAAgB,sBA1BlB,QAoBNzE,EApBM,gDA+BWH,IAAMmJ,KAAK5R,EAASqB,YAAa,CAC9CwQ,MAAOR,EACP1L,KAAM0K,GACP,CACC1H,OAAQyI,EAAWzI,OACnB0E,QAAS,CACL,eAAgB,sBArClB,QA+BNzE,EA/BM,kBA0C0B,IAAjCO,OAAOC,KAAKR,GAAUxC,QAAgBwC,EAASkJ,cAAgB3I,OA1CxD,uBA2CApF,EAAQ,IAAID,GACZZ,QAAU,2CACVa,EA7CA,QAgDoB,MAAvB6E,EAASrC,KAAKsC,MACbuI,EAAa,KACbnO,EAAQ2F,EAASrC,KAAKrD,SACtB2N,EAAQjI,IAGR9E,EAAM8E,EAASrC,KAAKrD,SAtDlB,0DA4DV4F,QAAQC,IAAI,KAAI7F,QAAhB,MA5DU,yBA+DA,QAAV,EAAAkO,SAAA,SAAYpI,QACZf,GAAU,GACV9F,EAAMyC,QAAO,GAjEH,6EAAH,qDA2Ef,OACI,eAAC,IAAMqE,SAAP,WAEKjB,EACG,cAAC,EAAD,CAAa5F,MAAM,YACnB,cAAC,IAAM6G,SAAP,IAGJ,eAAC,IAAD,CACI1G,QAAQ,EACRM,UAAU,EACVJ,YAAY,EACZG,UAAQ,EACRP,KAAK,KACLuC,OAAQ,kBAAMzC,EAAMyC,QAAO,IAN/B,UAQI,cAAC,IAAD,CAAaA,OAAQ,kBAAMzC,EAAMyC,QAAO,IAAxC,SACI,sBAAM7B,UAAU,qBAAhB,SACKZ,EAAM4P,WAGf,eAAC,IAAD,WACkB,MAAb5P,EAAMoI,GACH,cAAC,GAAD,CACIiF,aAAciB,EACdlB,aAAcoB,EACdjB,oBAAqBA,EACrBE,iBA5IE,SAACjE,GACpBA,EAAMkD,OAAOmD,MAAM,KAClBxB,EAAa7E,EAAMkD,OAAOmD,OAC1BtB,EAAiB/E,EAAMkD,OAAOmD,MAAM,GAAGlL,MACvC8J,EAAcqB,IAAIC,gBAAgBvG,EAAMkD,OAAOmD,MAAM,OAyIrClC,gBAAiBA,EACjBE,YAlJJ,WAChBF,EAAgBqC,QAAQC,WAmJR,cAAC,IAAMnJ,SAAP,IAEJ,cAAC,GAAD,CACIsB,GAAIpI,EAAMoI,GACVgE,UAAQ,EACRG,OAAO,EACPF,UAAwB,MAAbrM,EAAMoI,GAAa,eAAiB,eAC/CuE,MAAoB,MAAb3M,EAAMoI,GAAa,oBAAsB,8BAChDkB,MAAO3E,EACP8H,SAAUwB,EACVjB,aAAckB,EACdpB,iBAAkBqB,OAG1B,eAAC,IAAD,WACI,cAAC,IAAD,CACIlO,MAAM,UACNuC,QAASwM,EAFb,kBAMA,cAAC,IAAD,CAAQxM,QA1DH,WACjByL,EAAQ,IACRE,GAAmB,GACnBZ,KAuDY,+B,4DC5IL2C,GA/CO,SAAClQ,GAEnB,OACI,cAACmQ,GAAA,EAAD,CAAaC,GAAI,CAACC,MAAO,QAAzB,SACI,eAAC,IAAD,CAAKzP,UAAU,sBAAf,UACI,cAAC,IAAD,CAAKA,UAAU,YAAYqL,GAAG,IAA9B,SACI,cAAC,IAAD,CAAOrL,UAAU,yBAAyBoH,MAAO,CAAEkE,eAAgB,YAC/DC,IAAKnM,EAAMoI,GADf,SAEKpI,EAAMqM,cAGf,eAAC,IAAD,CAAKzL,UAAU,YAAYqL,GAAG,IAA9B,UACI,cAACqE,GAAA,EAAD,CACIlI,GAAE,uCAAkCpI,EAAMoI,IAC1CxH,UAAU,wBAFd,SAIKZ,EAAM2M,QAEX,cAAC4D,GAAA,EAAD,CACIC,QAAQ,+BACRpI,GAAG,yBACHqI,UAAQ,EACR7P,UAAU,qBACV0I,MAAOtJ,EAAMa,KACb4L,SAAUzM,EAAM0Q,aAChBC,MAAO,cAACC,GAAA,EAAD,CAAejE,MAAM,QAC5BkE,YAAa,SAACC,GACV,OAAuB,IAApBA,EAAS7M,OACD,+CAEJ6M,EAASC,KAAK,OAEzBC,UAAWhR,EAAMgR,UAdrB,SAgBChR,EAAMkP,MAAMhI,KAAI,SAACvC,GAAD,OACb,eAACsM,GAAA,EAAD,CAAsD3H,MAAO3E,EAAKA,MAAQA,EAAK9D,MAAQ8D,EAAvF,UACI,cAACkI,GAAA,EAAD,CAAUE,QAAS/M,EAAMa,KAAKqQ,QAAQvM,EAAKA,MAAQA,EAAK9D,MAAQ8D,IAAS,IACzE,cAACwM,GAAA,EAAD,CAAcC,QAASzM,EAAKA,MAAQA,EAAK9D,MAAQ8D,MAFtCiH,KAAKC,MAAsB,IAAhBD,KAAKyF,SAAmB,kBC3BpEL,GAAY,CACdM,WAAY,CACZtJ,MAAO,CACHuJ,UAAWC,IACXnB,MAAO,OA8OAoB,GAzOK,SAACzR,GAEjB,MAAkCkC,mBAAS,IAA3C,mBAAO0B,EAAP,KAAkB8N,EAAlB,KACA,EAAoCxP,mBAAS,IAA7C,mBAAO2B,EAAP,KAAmB8N,EAAnB,KACA,EAAwCzP,mBAAS,IAAjD,mBAAO6B,EAAP,KAAqB6N,EAArB,KAEOzN,EAGiGnE,EAHjGmE,MAAOS,EAG0F5E,EAH1F4E,SAAUiN,EAGgF7R,EAHhF6R,UAAWnN,EAGqE1E,EAHrE0E,OAAQ0I,EAG6DpN,EAH7DoN,aAAcC,EAG+CrN,EAH/CqN,aAAcyE,EAGiC9R,EAHjC8R,eAAgBnE,EAGiB3N,EAHjB2N,gBAAiBoE,EAGA/R,EAHA+R,cACpGC,EAEoGhS,EAFpGgS,iBAAkBC,EAEkFjS,EAFlFiS,YAAapE,EAEqE7N,EAFrE6N,YAAa6C,EAEwD1Q,EAFxD0Q,aAAcwB,EAE0ClS,EAF1CkS,gBAAiBC,EAEyBnS,EAFzBmS,iBAAkBC,EAEOpS,EAFPoS,IAAKC,EAEErS,EAFFqS,OAClG5E,EACoGzN,EADpGyN,iBAAkB6E,EACkFtS,EADlFsS,kBAAmBC,EAC+DvS,EAD/DuS,mBAAoBC,EAC2CxS,EAD3CwS,mBAAoBjF,EACuBvN,EADvBuN,oBAC7EkF,EAAoGzS,EAApGyS,qBAAsBC,EAA8E1S,EAA9E0S,qBAAsB3K,EAAwD/H,EAAxD+H,WAAYvD,EAA4CxE,EAA5CwE,WAAYmO,EAAgC3S,EAAhC2S,cAAeC,EAAiB5S,EAAjB4S,cAEvF3M,qBAAU,WAEN,IAAI4M,EAAkB,IAAI1M,gBACtB2M,EAAmB,IAAI3M,gBACvB4M,EAAqB,IAAI5M,gBAEvB6M,EAAY,uCAAG,8BAAA3M,EAAA,+EAEUC,IAAMC,IAAI1I,EAASgB,YAAa,CACnD2H,OAAQqM,EAAgBrM,SAHf,OAKa,OAHpBC,EAFO,QAKDrC,KAAKsC,MACPtC,EAAOqC,EAASrC,KAAKrD,QAC3B2Q,EAAatN,GACbyO,EAAkB,OAGlBlR,EAAM8E,EAASrC,KAAKrD,SACpB2Q,EAAa,KAZJ,gDAgBb/K,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SACV2Q,EAAa,IAlBA,yDAAH,qDAsBZuB,EAAa,uCAAG,8BAAA5M,EAAA,+EAESC,IAAMC,IAAI1I,EAASe,cAAe,CACrD4H,OAAQsM,EAAiBtM,SAHf,OAKY,OAHpBC,EAFQ,QAKFrC,KAAKsC,MACPtC,EAAOqC,EAASrC,KAAKrD,QAC3B4Q,EAAcvN,GACd0O,EAAmB,OAGnBnR,EAAM8E,EAASrC,KAAKrD,SACpB4Q,EAAc,KAZJ,gDAgBdhL,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SACV4Q,EAAc,IAlBA,yDAAH,qDAsBbuB,EAAe,uCAAG,8BAAA7M,EAAA,+EAEOC,IAAMC,IAAI1I,EAASiB,eAAgB,CACtD0H,OAAQuM,EAAmBvM,SAHf,OAKU,OAHpBC,EAFU,QAKJrC,KAAKsC,MACPtC,EAAOqC,EAASrC,KAAKrD,QAC3B6Q,EAAgBxN,GAChB2O,EAAqB,OAGrBpR,EAAM8E,EAASrC,KAAKrD,SACpB6Q,EAAgB,KAZJ,gDAgBhBjL,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SACV6Q,EAAgB,IAlBA,yDAAH,qDA0BrB,OAJAoB,IACAC,IACAC,IAEO,WAAO,IAAD,MACM,QAAf,EAAAL,SAAA,SAAiBhM,QACD,QAAhB,EAAAiM,SAAA,SAAkBjM,QACA,QAAlB,EAAAkM,SAAA,SAAoBlM,WAGzB,IAYH,OACI,cAAC,IAAMC,SAAP,UAEI,eAAC,IAAD,CACI1G,OAAQ0R,EACRpR,UAAU,EACVJ,YAAY,EACZG,UAAQ,EACRP,KAAK,KACLuC,OAAQgQ,EANZ,UAQI,cAAC,IAAD,CAAahQ,OAAQgQ,EAArB,SACI,sBAAM7R,UAAU,qBAAhB,4BAIJ,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKuS,GAAG,IAAR,SACI,sBAAKvS,UAAU,gBAAf,UAGI,cAAC,GAAD,CACIwL,UAAQ,EACRhE,GAAG,YACHiE,UAAU,YACVM,MAAM,kBACNJ,OAAO,EACPjD,MAAOvB,EACP0E,SAAUkG,EACV3F,aAAcoF,EACdtF,iBAAkBuF,IAEtB,cAAC,GAAD,CACIjK,GAAG,aACHiE,UAAU,aACVM,MAAM,mBACNrD,MAAO9E,EACPiI,SAAUmG,IAGd,cAAC,GAAD,CACIxK,GAAG,cAAciE,UAAU,cAC3BM,MAAM,gBAAgB9L,KAAM6D,EAC5BgM,aAAcA,EAAcM,UAAWA,GACvC9B,MAAOrL,IAEX,cAAC,GAAD,CACIuE,GAAG,aAAaiE,UAAU,aAC1BM,MAAM,eAAe9L,KAAMsD,EAC3BuM,aAAc4B,EAAmBtB,UAAWA,GAC5C9B,MAAOtL,IAEX,cAAC,GAAD,CACIwE,GAAG,gBAAgBiE,UAAU,gBAC7BM,MAAM,kBAAkB9L,KAAM+D,EAC9B8L,aAAcgC,EAAsB1B,UAAWA,GAC/C9B,MAAOnL,SAKnB,eAAC,IAAD,CAAKoP,GAAG,IAAR,UAEI,cAAC,IAAD,UACI,sBAAKvS,UAAU,sBAAf,UACI,sBAAKA,UAAU,uEAAf,UACI,uBAAMA,UAAU,oBAAoBoH,MAAO,CAACK,UAAW,UAAvD,UACI,qCACmC,IAA5BwJ,EAAUxC,OAAOpL,OAAe,cAAgB4N,EADvD,QAGA,6CACiC,IAAlBE,EAlF7B,SAACtG,GAEvB,GAAGA,IAASC,IAAS,CACjB,IAAMC,EAAUC,KAAKC,MAAMJ,EAAO,IAC5BK,EAAUF,KAAKC,MAAMJ,EAAO,IAClC,MAAM,GAAN,OAAUE,EAAU,GAAK,IAAMI,OAAOJ,GAAWI,OAAOJ,GAAxD,YAAoEG,EAAU,GAAK,IAAMC,OAAOD,GAAWC,OAAOD,IAEtH,OAAOL,EA2EkE2H,CAAkBrB,GAAiB,cAG/C,IAA5BF,EAAUxC,OAAOpL,OACd,cAAC,IAAM6C,SAAP,IACA,cAAC,IAAD,CAAQwG,OAAK,EAAC3F,MAAM,cAAcnF,QAASgQ,OAGnD,sBAAK5R,UAAU,sBAAf,UACI,uBACIC,KAAK,OACL2M,OAAO,UACPf,SAAUwF,EACVvE,IAAKsE,EACLhK,MAAO,CAAC4F,QAAS,UAErB,cAAC,IAAD,CACIpL,QAAS2P,EACTlS,MAAM,OACN6N,SAAS,EAHb,iCAWZ,cAAC,GAAD,CACIT,aAAcA,EACdD,aAAcA,EACdG,oBAAqBA,EACrBE,iBAAkBA,EAClBE,gBAAiBA,EACjBE,YAAaA,YAK7B,eAAC,IAAD,WACI,cAAC,IAAD,CACI5N,MAAM,UACNuC,QAAS0P,EAFb,kBAMA,cAAC,IAAD,CAAQ1P,QAAS+P,EAAjB,8BC/Odc,GAAwB,SAACC,GAU3B,IARA,IACMC,GAAUD,EADA,IAAIE,QAAQ,EAAIF,EAAarP,OAAS,GAAK,IAExDwP,QAAQ,KAAM,KACdA,QAAQ,KAAM,KAEXC,EAAUC,OAAOC,KAAKL,GACtBM,EAAc,IAAIC,WAAWJ,EAAQzP,QAElCD,EAAI,EAAGA,EAAI0P,EAAQzP,SAAUD,EACpC6P,EAAY7P,GAAK0P,EAAQK,WAAW/P,GAEtC,OAAO6P,GAGEG,GAAS,uCAAG,gCAAA3N,EAAA,yDACf,kBAAmB4N,UADJ,iEAGMA,UAAUC,cAAcC,MAH9B,cAGfC,EAHe,gBAMMA,EAAaC,YAAYtW,UAAU,CAC5DuW,iBAAiB,EACjBC,qBAAsBlB,GAzBLmB,6FAiBE,cAMfC,EANe,OAWfC,GAAQ,IAAIlN,MAAOmN,cAXJ,UAafrO,IAAMmJ,KAAK5R,EAASE,UAClB6W,KAAKC,UAAU,CAACJ,aAAcA,EAAcC,MAAOA,IAAS,CAChExJ,QAAS,CACL,eAAgB,sBAhBH,4CAAH,qDAqBT4J,GAAS,uCAAG,sBAAAzO,EAAA,sEACfC,IAAMC,IAAI1I,EAASG,UAAW,CAChCkN,QAAS,CACL,eAAgB,sBAHH,2CAAH,qD,wHCtBhB6J,GAAU,CACd,CAAE3M,GAAI,OAAQuE,MAAO,UAAWqI,SAAU,GAAIC,MAAO,UACrD,CAAE7M,GAAI,OAAQuE,MAAO,aAAcqI,SAAU,IAAKC,MAAO,QACzD,CAAE7M,GAAI,OAAQuE,MAAO,MAAOuI,SAAU,GAAID,MAAO,WA4JpCE,GAzJI,SAACnV,GAElB,IAAQoV,EAAYpV,EAAZoV,QAEFzI,EAAQ,CACZM,WAAY,CACR,aAAc,oBAIdoI,EAAOrV,EAAMqV,MAAQ,GAC3B,EAAwBnT,mBAAS,GAAjC,mBAAOoT,EAAP,KAAaC,EAAb,KACA,EAAsCrT,mBAAS,IAA/C,mBAAOsT,EAAP,KAAoBC,EAApB,KAWAxP,qBAAU,WACRsP,EAAQ,KACP,CAACvV,EAAMqV,OAEV,IAAMK,EAAc,uCAAG,WAAO3I,EAAS3E,GAAhB,iBAAA/B,EAAA,+EAEIC,IAAMqP,IAAI9X,EAAS+B,oBAAoBwI,EAAI,CAChEjF,OAAQ4J,GACP,CACD7B,QAAS,CACP,eAAgB,sBAND,OASO,OAPpBzE,EAFa,QASPrC,KAAKsC,OACTtC,EAAOpE,EAAMqV,KAAK/R,QAAO,SAAAsS,GAAG,OAAIA,EAAIxN,KAAOA,MAC5C,GAAG5E,MAAQuJ,EAChBqI,GAAQ,SAAA/S,GAAI,OAAIA,EAAKiB,QAAO,SAAAsS,GACxB,OAAGA,EAAIxN,KAAOA,EACLhE,EAGAwR,SAMbjP,QAAQC,IAAI,gBAAiBH,EAASrC,KAAKrD,SAvB1B,gDA4BnB4F,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SA7BS,yDAAH,wDAiCpB,OACE,eAAC8U,GAAA,EAAD,CAAOzF,GAAI,CAAEC,MAAO,OAAQyF,SAAU,UAAYlV,UAAU,UAA5D,UACE,cAACmV,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,UACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WAEGpB,GAAQ7N,KAAI,SAACkP,GAAD,OACX,cAACC,GAAA,EAAD,CACEzV,UAAU,0CAEVqU,MAAOmB,EAAOnB,MACdjN,MAAO,CAAEgN,SAAUoB,EAAOpB,SAAUE,SAAUkB,EAAOlB,UAJvD,SAMGkB,EAAOzJ,OAJHyJ,EAAOhO,OAQhB,cAACiO,GAAA,EAAD,CACEzV,UAAU,0CACVqU,MAAM,SAENjN,MAAO,CAAEkN,SAAU,IAJrB,iBAGM,QAKN,cAACmB,GAAA,EAAD,CACEzV,UAAU,0CACVqU,MAAM,SAENjN,MAAO,CAAEkN,SAAU,KAJrB,mBAGM,eAQV,cAACoB,GAAA,EAAD,UACGjB,EACEkB,MAAMjB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CtO,KAAI,SAAC0O,EAAKjM,GACT,OACE,eAACwM,GAAA,EAAD,CAAUK,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACG3B,GAAQ7N,KAAI,SAACkP,EAAQ/L,GAClB,IAAIf,EAGN,MAFmB,SAAd8M,EAAOhO,KACNkB,EAAQsM,EAAIQ,EAAOhO,KAEvB,cAACiO,GAAA,EAAD,CACEzV,UAAU,sBAAgCqU,MAAOmB,EAAOnB,MAD1D,SAEoB,kBAAV3L,EACNA,EAAMpC,KAAI,SAAC3D,GACT,OACE,sBAAK3C,UAAU,0BAAf,UACE,cAAC,KAAD,IACC2C,QAIS,SAAd6S,EAAOhO,GACT,cAACyE,GAAA,EAAD,yBAAUE,QAAS6I,EAAIQ,EAAOhO,IAAK5F,QAAS,SAAC0F,GAAD,OAAOwN,EAAeE,EAAIQ,EAAOhO,IAAKwN,EAAIxN,MAASuE,GAA/F,IAAsG/J,KAAM,cAAC,KAAD,IAAoBsK,YAAa,cAAC,KAAD,OAC9H,SAAdkJ,EAAOhO,GAAP,UAA4BoN,EAAYF,GAAS3L,EAAM,GAAvD,KAAgEL,GAZ9Be,MAgB3C,cAACgM,GAAA,EAAD,CACEzV,UAAU,sBAA0CqU,MAAM,SAASjN,MAAO,CAAEkN,SAAU,IADxF,SAEE,cAACyB,GAAA,EAAD,CAAM/V,UAAU,2BAA2B4B,QAAS,kBAAMxC,EAAM4W,UAAUhB,EAAIxN,GAAI,aAD7CwD,KAAKyF,UAG5C,cAACgF,GAAA,EAAD,CACEzV,UAAU,sBAA0CqU,MAAM,SAASjN,MAAO,CAAEkN,SAAU,KADxF,SAEE,cAAC2B,GAAA,EAAD,CAAQjW,UAAU,2BAA2B4B,QAAS,kBAAMxC,EAAM8W,cAAclB,EAAIxN,QAD/CwD,KAAKyF,YA5BKuE,EAAIxN,cAqCnE,cAAC2O,GAAA,EAAD,CACEnW,UAAU,0BACVoW,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAO7B,EAAKpR,OACZuR,YAAaA,EACbF,KAAMA,EACN6B,aApImB,SAAC3N,EAAO4N,GAC/B7B,EAAQ6B,IAoIJC,oBAjI0B,SAAC7N,GAC/BiM,GAAgBjM,EAAMkD,OAAOpD,OAC7BiM,EAAQ,UC1BNR,GAAU,CACd,CAAE3M,GAAI,OAAQuE,MAAO,UAAWqI,SAAU,GAAIC,MAAO,UACrD,CAAE7M,GAAI,OAAQuE,MAAO,cAAeqI,SAAU,IAAKC,MAAO,QAC1D,CAAE7M,GAAI,OAAQuE,MAAO,MAAOuI,SAAU,GAAID,MAAO,WA4JpCqC,GAzJM,SAACtX,GAEpB,IAAQoV,EAAYpV,EAAZoV,QAEFzI,EAAQ,CACZM,WAAY,CACR,aAAc,oBAIdoI,EAAOrV,EAAMqV,MAAQ,GAC3B,EAAwBnT,mBAAS,GAAjC,mBAAOoT,EAAP,KAAaC,EAAb,KACA,EAAsCrT,mBAAS,IAA/C,mBAAOsT,EAAP,KAAoBC,EAApB,KAWAxP,qBAAU,WACRsP,EAAQ,KACP,CAACvV,EAAMqV,OAEV,IAAMK,EAAc,uCAAG,WAAO3I,EAAS3E,GAAhB,iBAAA/B,EAAA,+EAEIC,IAAMqP,IAAI9X,EAASgC,qBAAqBuI,EAAI,CACjEjF,OAAQ4J,GACP,CACD7B,QAAS,CACP,eAAgB,sBAND,OASO,OAPpBzE,EAFa,QASPrC,KAAKsC,OACTtC,EAAOpE,EAAMqV,KAAK/R,QAAO,SAAAsS,GAAG,OAAIA,EAAIxN,KAAOA,MAC5C,GAAG5E,MAAQuJ,EAChBqI,GAAQ,SAAA/S,GAAI,OAAIA,EAAKiB,QAAO,SAAAsS,GACxB,OAAGA,EAAIxN,KAAOA,EACLhE,EAGAwR,SAMbjP,QAAQC,IAAI,gBAAiBH,EAASrC,KAAKrD,SAvB1B,gDA4BnB4F,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SA7BS,yDAAH,wDAiCpB,OACE,eAAC8U,GAAA,EAAD,CAAOzF,GAAI,CAAEC,MAAO,OAAQyF,SAAU,UAAYlV,UAAU,UAA5D,UACE,cAACmV,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,UACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WAEGpB,GAAQ7N,KAAI,SAACkP,GAAD,OACX,cAACC,GAAA,EAAD,CACEzV,UAAU,0CAEVqU,MAAOmB,EAAOnB,MACdjN,MAAO,CAAEgN,SAAUoB,EAAOpB,SAAUE,SAAUkB,EAAOlB,UAJvD,SAMGkB,EAAOzJ,OAJHyJ,EAAOhO,OAQhB,cAACiO,GAAA,EAAD,CACEzV,UAAU,0CACVqU,MAAM,SAENjN,MAAO,CAAEkN,SAAU,IAJrB,iBAGM,QAKN,cAACmB,GAAA,EAAD,CACEzV,UAAU,0CACVqU,MAAM,SAENjN,MAAO,CAAEkN,SAAU,KAJrB,mBAGM,eAQV,cAACoB,GAAA,EAAD,UACGjB,EACEkB,MAAMjB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CtO,KAAI,SAAC0O,EAAKjM,GACT,OACE,eAACwM,GAAA,EAAD,CAAUK,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACG3B,GAAQ7N,KAAI,SAACkP,EAAQ/L,GAClB,IAAIf,EAGN,MAFmB,SAAd8M,EAAOhO,KACNkB,EAAQsM,EAAIQ,EAAOhO,KAEvB,cAACiO,GAAA,EAAD,CACEzV,UAAU,sBAAgCqU,MAAOmB,EAAOnB,MAD1D,SAEoB,kBAAV3L,EACNA,EAAMpC,KAAI,SAAC3D,GACT,OACE,sBAAK3C,UAAU,0BAAf,UACE,cAAC,KAAD,IACC2C,QAIO,SAAd6S,EAAOhO,GACP,cAACyE,GAAA,EAAD,yBAAUE,QAAS6I,EAAIQ,EAAOhO,IAAK5F,QAAS,SAAC0F,GAAD,OAAOwN,EAAeE,EAAIQ,EAAOhO,IAAKwN,EAAIxN,MAASuE,GAA/F,IAAsG/J,KAAM,cAAC,KAAD,IAAoBsK,YAAa,cAAC,KAAD,OAC9H,SAAdkJ,EAAOhO,GAAP,UAA4BoN,EAAYF,GAAS3L,EAAM,GAAvD,KAAgEL,GAZ9Be,MAgB3C,cAACgM,GAAA,EAAD,CACEzV,UAAU,sBAA0CqU,MAAM,SAASjN,MAAO,CAAEkN,SAAU,IADxF,SAEE,cAACyB,GAAA,EAAD,CAAM/V,UAAU,2BAA2B4B,QAAS,kBAAMxC,EAAMuX,WAAW3B,EAAIxN,GAAI,cAD9CwD,KAAKyF,UAG5C,cAACgF,GAAA,EAAD,CACEzV,UAAU,sBAA0CqU,MAAM,SAASjN,MAAO,CAAEkN,SAAU,KADxF,SAEE,cAAC2B,GAAA,EAAD,CAAQjW,UAAU,2BAA2B4B,QAAS,kBAAMxC,EAAM8W,cAAclB,EAAIxN,QAD/CwD,KAAKyF,YA5BKuE,EAAIxN,cAqCnE,cAAC2O,GAAA,EAAD,CACEnW,UAAU,0BACVoW,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAO7B,EAAKpR,OACZuR,YAAaA,EACbF,KAAMA,EACN6B,aApImB,SAAC3N,EAAO4N,GAC/B7B,EAAQ6B,IAoIJC,oBAjI0B,SAAC7N,GAC/BiM,GAAgBjM,EAAMkD,OAAOpD,OAC7BiM,EAAQ,UC1BNR,GAAU,CACd,CAAE3M,GAAI,OAAQuE,MAAO,UAAWqI,SAAU,GAAIC,MAAO,UACrD,CAAE7M,GAAI,aAAcuE,MAAO,aAAcqI,SAAU,KACnD,CAAE5M,GAAI,aAAcuE,MAAO,aAAcqI,SAAU,KACnD,CAAE5M,GAAI,UAAWuE,MAAO,UAAWqI,SAAU,IAC7C,CAAE5M,GAAI,QAASuE,MAAO,QAASqI,SAAU,IACzC,CAAE5M,GAAI,WAAYuE,MAAO,WAAYqI,SAAU,IAC/C,CAAE5M,GAAI,OAAQuE,MAAO,MAAOuI,SAAU,GAAID,MAAO,WAGpC,SAASuC,GAAgBxX,GAEtC,IAAQoV,EAAYpV,EAAZoV,QAEFzI,EAAQ,CACZM,WAAY,CACR,aAAc,oBAIdoI,EAAOrV,EAAMqV,MAAQ,GAC3B,EAAwBnT,mBAAS,GAAjC,mBAAOoT,EAAP,KAAaC,EAAb,KACA,EAAsCrT,mBAAS,IAA/C,mBAAOsT,EAAP,KAAoBC,EAApB,KAWAxP,qBAAU,WACRsP,EAAQ,KACP,CAACvV,EAAMqV,OAEV,IAAMK,EAAc,uCAAG,WAAO3I,EAAS3E,GAAhB,iBAAA/B,EAAA,+EAEIC,IAAMqP,IAAI9X,EAAS8B,oBAAoByI,EAAI,CAChEjF,OAAQ4J,GACP,CACD7B,QAAS,CACP,eAAgB,sBAND,OASO,OAPpBzE,EAFa,QASPrC,KAAKsC,OACTtC,EAAOpE,EAAMqV,KAAK/R,QAAO,SAAAsS,GAAG,OAAIA,EAAIxN,KAAOA,MAC5C,GAAG5E,MAAQuJ,EAChBqI,GAAQ,SAAA/S,GAAI,OAAIA,EAAKiB,QAAO,SAAAsS,GACxB,OAAGA,EAAIxN,KAAOA,EACLhE,EAGAwR,SAMbjP,QAAQC,IAAI,gBAAiBH,EAASrC,KAAKrD,SAvB1B,gDA4BnB4F,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SA7BS,yDAAH,wDAiCpB,OACE,eAAC8U,GAAA,EAAD,CAAOzF,GAAI,CAAEC,MAAO,OAAQyF,SAAU,UAAYlV,UAAU,UAA5D,UACE,cAACmV,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,UACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACGpB,GAAQ7N,KAAI,SAACkP,GAAD,OACX,cAACC,GAAA,EAAD,CACEzV,UAAU,0CAEVqU,MAAOmB,EAAOnB,MACdjN,MAAO,CAAEgN,SAAUoB,EAAOpB,SAAUE,SAAUkB,EAAOlB,UAJvD,SAMGkB,EAAOzJ,OAJHyJ,EAAOhO,OAOhB,cAACiO,GAAA,EAAD,CACEzV,UAAU,0CACVqU,MAAM,SAENjN,MAAO,CAAEkN,SAAU,IAJrB,iBAGM,QAKN,cAACmB,GAAA,EAAD,CACEzV,UAAU,0CACVqU,MAAM,SAENjN,MAAO,CAAEkN,SAAU,KAJrB,mBAGM,eAOV,cAACoB,GAAA,EAAD,UACGjB,EACEkB,MAAMjB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CtO,KAAI,SAAC0O,EAAKjM,GACT,OACE,eAACwM,GAAA,EAAD,CAAUK,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACG3B,GAAQ7N,KAAI,SAACkP,EAAQ/L,GACpB,IAAIf,EAGJ,MAFiB,SAAd8M,EAAOhO,KACRkB,EAAQsM,EAAIQ,EAAOhO,KAEnB,cAACiO,GAAA,EAAD,CACEzV,UAAU,sBAAgCqU,MAAOmB,EAAOnB,MAD1D,SAEoB,kBAAV3L,EACNA,EAAMpC,KAAI,SAAC3D,GACT,OACE,sBAAgB3C,UAAU,0BAA1B,UACE,cAAC,KAAD,IACC2C,IAFOA,MAMA,SAAd6S,EAAOhO,GACP,cAACyE,GAAA,EAAD,yBAAUE,QAAS6I,EAAIQ,EAAOhO,IAAK5F,QAAS,SAAC0F,GAAD,OAAOwN,EAAeE,EAAIQ,EAAOhO,IAAKwN,EAAIxN,MAASuE,GAA/F,IAAsG/J,KAAM,cAAC,KAAD,IAAoBsK,YAAa,cAAC,KAAD,OAC9H,SAAdkJ,EAAOhO,GAAP,UAA4BoN,EAAYF,GAAS3L,EAAM,GAAvD,KAAgEL,GAZ9Be,MAgB3C,cAACgM,GAAA,EAAD,CACEzV,UAAU,sBAAkEqU,MAAM,SAASjN,MAAO,CAAEkN,SAAU,IADhH,SAEE,cAACyB,GAAA,EAAD,CAAM/V,UAAU,2BAA2B4B,QAAS,kBAAMxC,EAAMyX,QAAQ7B,EAAIxN,QADvCwD,KAAKC,MAAsB,IAAhBD,KAAKyF,SAAmB,IAG1E,cAACgF,GAAA,EAAD,CACEzV,UAAU,sBAAkEqU,MAAM,SAASjN,MAAO,CAAEkN,SAAU,KADhH,SAEE,cAAC2B,GAAA,EAAD,CAAQjW,UAAU,2BAA2B4B,QAAS,kBAAMxC,EAAM8W,cAAclB,EAAIxN,QAD/CwD,KAAKC,MAAsB,IAAhBD,KAAKyF,SAAmB,MA5BzBuE,EAAIxN,cAqCnE,cAAC2O,GAAA,EAAD,CACEnW,UAAU,0BACVoW,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAO7B,EAAKpR,OACZuR,YAAaA,EACbF,KAAMA,EACN6B,aAjImB,SAAC3N,EAAO4N,GAC/B7B,EAAQ6B,IAiIJC,oBA9H0B,SAAC7N,GAC/BiM,GAAgBjM,EAAMkD,OAAOpD,OAC7BiM,EAAQ,SC9BZ,IAAMR,GAAU,CACd,CAAE3M,GAAI,OAAQuE,MAAO,UAAWqI,SAAU,GAAIC,MAAO,UACrD,CAAE7M,GAAI,OAAQuE,MAAO,gBAAiBqI,SAAU,IAAKC,MAAO,QAC5D,CAAE7M,GAAI,OAAQuE,MAAO,MAAOuI,SAAU,GAAID,MAAO,WA4JpCyC,GAzJO,SAAC1X,GAErB,IAAQoV,EAAYpV,EAAZoV,QAEFzI,EAAQ,CACZM,WAAY,CACR,aAAc,oBAIdoI,EAAOrV,EAAMqV,MAAQ,GAC3B,EAAwBnT,mBAAS,GAAjC,mBAAOoT,EAAP,KAAaC,EAAb,KACA,EAAsCrT,mBAAS,IAA/C,mBAAOsT,EAAP,KAAoBC,EAApB,KAWAxP,qBAAU,WACRsP,EAAQ,KACP,CAACvV,EAAMqV,OAEV,IAAMK,EAAc,uCAAG,WAAO3I,EAAS3E,GAAhB,iBAAA/B,EAAA,+EAEIC,IAAMqP,IAAI9X,EAASiC,uBAAuBsI,EAAI,CACnEjF,OAAQ4J,GACP,CACD7B,QAAS,CACP,eAAgB,sBAND,OASO,OAPpBzE,EAFa,QASPrC,KAAKsC,OACTtC,EAAOpE,EAAMqV,KAAK/R,QAAO,SAAAsS,GAAG,OAAIA,EAAIxN,KAAOA,MAC5C,GAAG5E,MAAQuJ,EAChBqI,GAAQ,SAAA/S,GAAI,OAAIA,EAAKiB,QAAO,SAAAsS,GACxB,OAAGA,EAAIxN,KAAOA,EACLhE,EAGAwR,SAMbjP,QAAQC,IAAI,gBAAiBH,EAASrC,KAAKrD,SAvB1B,gDA4BnB4F,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SA7BS,yDAAH,wDAiCpB,OACE,eAAC8U,GAAA,EAAD,CAAOzF,GAAI,CAAEC,MAAO,OAAQyF,SAAU,UAAYlV,UAAU,UAA5D,UACE,cAACmV,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,UACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WAEGpB,GAAQ7N,KAAI,SAACkP,GAAD,OACX,cAACC,GAAA,EAAD,CACEzV,UAAU,0CAEVqU,MAAOmB,EAAOnB,MACdjN,MAAO,CAAEgN,SAAUoB,EAAOpB,SAAUE,SAAUkB,EAAOlB,UAJvD,SAMGkB,EAAOzJ,OAJHyJ,EAAOhO,OAQhB,cAACiO,GAAA,EAAD,CACEzV,UAAU,0CACVqU,MAAM,SAENjN,MAAO,CAAEkN,SAAU,IAJrB,iBAGM,QAKN,cAACmB,GAAA,EAAD,CACEzV,UAAU,0CACVqU,MAAM,SAENjN,MAAO,CAAEkN,SAAU,KAJrB,mBAGM,eAQV,cAACoB,GAAA,EAAD,UACGjB,EACEkB,MAAMjB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CtO,KAAI,SAAC0O,EAAKjM,GACT,OACE,eAACwM,GAAA,EAAD,CAAUK,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACG3B,GAAQ7N,KAAI,SAACkP,EAAQ/L,GAClB,IAAIf,EAGN,MAFmB,SAAd8M,EAAOhO,KACNkB,EAAQsM,EAAIQ,EAAOhO,KAEvB,cAACiO,GAAA,EAAD,CACEzV,UAAU,sBAAgCqU,MAAOmB,EAAOnB,MAD1D,SAEoB,kBAAV3L,EACNA,EAAMpC,KAAI,SAAC3D,GACT,OACE,sBAAK3C,UAAU,0BAAf,UACE,cAAC,KAAD,IACC2C,QAIO,SAAd6S,EAAOhO,GACP,cAACyE,GAAA,EAAD,yBAAUE,QAAS6I,EAAIQ,EAAOhO,IAAK5F,QAAS,SAAC0F,GAAD,OAAOwN,EAAeE,EAAIQ,EAAOhO,IAAKwN,EAAIxN,MAASuE,GAA/F,IAAsG/J,KAAM,cAAC,KAAD,IAAoBsK,YAAa,cAAC,KAAD,OAC9H,SAAdkJ,EAAOhO,GAAP,UAA4BoN,EAAYF,GAAS3L,EAAM,GAAvD,KAAgEL,GAZ9Be,MAgB3C,cAACgM,GAAA,EAAD,CACEzV,UAAU,sBAA0CqU,MAAM,SAASjN,MAAO,CAAEkN,SAAU,IADxF,SAEE,cAACyB,GAAA,EAAD,CAAM/V,UAAU,2BAA2B4B,QAAS,kBAAMxC,EAAM2X,aAAa/B,EAAIxN,GAAI,gBADhDwD,KAAKyF,UAG5C,cAACgF,GAAA,EAAD,CACEzV,UAAU,sBAA0CqU,MAAM,SAASjN,MAAO,CAAEkN,SAAU,KADxF,SAEE,cAAC2B,GAAA,EAAD,CAAQjW,UAAU,2BAA2B4B,QAAS,kBAAMxC,EAAM8W,cAAclB,EAAIxN,QAD/CwD,KAAKyF,YA5BKuE,EAAIxN,cAqCnE,cAAC2O,GAAA,EAAD,CACEnW,UAAU,0BACVoW,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAO7B,EAAKpR,OACZuR,YAAaA,EACbF,KAAMA,EACN6B,aApImB,SAAC3N,EAAO4N,GAC/B7B,EAAQ6B,IAoIJC,oBAjI0B,SAAC7N,GAC/BiM,GAAgBjM,EAAMkD,OAAOpD,OAC7BiM,EAAQ,U,+DClBGqC,GAvBS,SAAC5X,GAErB,OACI,eAAC,IAAM8G,SAAP,WACI,qBAAKlG,UAAU,gBAAf,SACI,qBACIA,UAAU,oBACVgH,IAAK5H,EAAM6X,UAAaha,EAASM,SAAW6B,EAAM6X,SAClD/P,IAAK9H,EAAMqN,iBAGnB,qBAAKzM,UAAU,sBAAf,SACI,qBAAKA,UAAU,qBAAf,SACI,uBAAMA,UAAU,oBAAhB,UACI,cAAC,KAAD,IADJ,aAC+C,KAAnBZ,EAAM6X,SAAkB,eAAiB7X,EAAM6X,SAD3E,gBCAd7G,GAAY,CACdM,WAAY,CACZtJ,MAAO,CACHuJ,UAAWC,IACXnB,MAAO,OAmcAyH,GA5bW,SAAC9X,GAEvB,IAAM+X,EAAW/J,mBAOjB,EAAwB9L,oBAAS,GAAjC,mBAAO8V,EAAP,KAAaC,EAAb,KACA,EAA8B/V,oBAAS,GAAvC,mBAAOiH,EAAP,KAAgBC,EAAhB,KACA,EAA0ClH,oBAAS,GAAnD,mBAAOgW,EAAP,KAAsBC,EAAtB,KAEA,EAAgCjW,mBAAS,IAAzC,mBAAOkW,EAAP,KAAiBC,EAAjB,KACA,EAAsCnW,mBAAS,IAA/C,mBAAOoW,EAAP,KAAoBC,EAApB,KAEOpU,EAG2BnE,EAH3BmE,MAAOS,EAGoB5E,EAHpB4E,SAAUF,EAGU1E,EAHV0E,OAAQqD,EAGE/H,EAHF+H,WAAYvD,EAGVxE,EAHUwE,WAAYgU,EAGtBxY,EAHsBwY,gBAAiBC,EAGvCzY,EAHuCyY,OACjE/H,EAE0B1Q,EAF1B0Q,aAAeiC,EAEW3S,EAFX2S,cAAe7M,EAEJ9F,EAFI8F,UAAW4S,EAEf1Y,EAFe0Y,UAAWtG,EAE1BpS,EAF0BoS,IAAKC,EAE/BrS,EAF+BqS,OACzDO,EAC0B5S,EAD1B4S,cAAeN,EACWtS,EADXsS,kBAAmBI,EACR1S,EADQ0S,qBAClCiG,EAA0B3Y,EAA1B2Y,sBAER,EAAkCzW,mBAAS,IAA3C,oBAAO0B,GAAP,MAAkB8N,GAAlB,MACA,GAAoCxP,mBAAS,IAA7C,qBAAO2B,GAAP,MAAmB8N,GAAnB,MACA,GAAwCzP,mBAAS,IAAjD,qBAAO6B,GAAP,MAAqB6N,GAArB,MAEMgH,GAAc,WAEhBD,KAyBEE,GAAY,WACXX,EACCH,EAAS/H,QAAQ8I,OAEjBf,EAAS/H,QAAQ+I,QACrBZ,GAAiB,SAAA9V,GAAI,OAAKA,MAGxB2W,GAAe,uCAAG,sBAAA3S,EAAA,sDAEpB,GADA+C,GAAW,SAAA/G,GAAI,OAAKA,MACL,IAAZ8G,EACC,IACI8O,GAAQ,GAGRF,EAAS/H,QAAQ8I,OACjBf,EAAS/H,QAAQiJ,QAAU,WACvBd,GAAiB,SAAA9V,GAAI,OAAKA,KAC1B+G,GAAW,SAAA/G,GAAI,OAAKA,MAI5B,MAAM6W,GACFvS,QAAQC,IAAI,qCAAsCsS,GAClDvX,EAAMuX,EAAInY,SAbd,QAiBOgX,EAAS/H,UACR+H,EAAS/H,QAAQmJ,iBAAoB,WACjCxS,QAAQC,IAAImR,EAAS/H,QAAQjG,UAK7BkO,GAAQ,KAGPF,EAAS/H,QAAQzH,QAAWwP,EAAS/H,QAAQoJ,WAAa,GAC3DnB,GAAQ,SAMpBF,EAAS/H,QAAQ+I,QArCD,2CAAH,qDA2CfM,GAAY,uCAAG,gCAAAhT,EAAA,sEAGbP,GAAU,GAEJ4O,GAAQ,IAAIlN,MAAOmN,cACnBrF,EAAW,CACb,WAAcvH,EACd,WAAcvD,EACd,OAAUoQ,KAAKC,UAAUnQ,GACzB,MAASkQ,KAAKC,UAAU1Q,GACxB,SAAYyQ,KAAKC,UAAUjQ,GAC3B,KAAQ8P,EACR,KAAQtC,GAbC,SAgBU9L,IAAMqP,IAAI9X,EAAS0B,gBAAgBkZ,EAAQnJ,EAAU,CACxEpE,QAAS,CACL,eAAiB,sBAlBZ,OAsBa,OANpBzE,EAhBO,QAsBDrC,KAAKsC,MACbgS,EAAUjS,EAASrC,KAAKA,MACxBtD,EAAQ2F,EAASrC,KAAKrD,UAGtBY,EAAM8E,EAASrC,KAAKrD,SA3BX,kDAiCb4F,QAAQC,IAAI,uCAAZ,MACAjF,EAAM,KAAIZ,SAlCG,yBAqCb+E,GAAU,GACV8S,KAtCa,6EAAH,qDAgNlB,OA1IA3S,qBAAU,WAEN,IAAIqT,EAAoB,IAAInT,gBACxBoT,EAAsB,IAAIpT,gBAExBqT,EAAe,uCAAG,4BAAAnT,EAAA,+EAEOC,IAAMC,IAAI1I,EAASQ,YAAYoa,EAAQ,CAC1DjS,OAAQ8S,EAAkB9S,SAHd,OAKU,OAHpBC,EAFU,QAKJrC,KAAKsC,MACb6R,EAAe9R,EAASrC,KAAKrD,QAAQ8G,eACrCyR,EAAoB,MAGpB3X,EAAM8E,EAASrC,KAAKrD,SAVR,gDAchB4F,QAAQC,IAAI,gBAAiB,KAAI7F,SACjCY,EAAM,KAAIZ,SAfM,yDAAH,qDAmBrByY,IAEA,IAAMC,EAAe,uCAAG,4BAAApT,EAAA,+EAEOC,IAAMC,IAAI1I,EAASO,YAAYqa,EAAQ,CAC1DjS,OAAQ+S,EAAoB/S,SAHhB,OAKU,OAHpBC,EAFU,QAKJrC,KAAKsC,MACb2R,EAAY5R,EAASrC,KAAKrD,QAAQqX,UAClCmB,EAAsB,MAGtB5X,EAAM8E,EAASrC,KAAKrD,SAVR,gDAchB4F,QAAQC,IAAI,gBAAiB,KAAI7F,SACjCY,EAAM,KAAIZ,SAfM,yDAAH,qDAqBrB,OAFA0Y,IAEO,WAAO,IAAD,IACQ,QAAjB,EAAAH,SAAA,SAAmBzS,QACA,QAAnB,EAAA0S,SAAA,SAAqB1S,WAG1B,CAAC4R,IAEJxS,qBAAU,WAEN,IAAI4M,EAAkB,IAAI1M,gBACtB2M,EAAmB,IAAI3M,gBACvB4M,EAAqB,IAAI5M,gBAEvB6M,EAAY,uCAAG,8BAAA3M,EAAA,+EAEUC,IAAMC,IAAI1I,EAASgB,YAAa,CACnD2H,OAAQqM,EAAgBrM,SAHf,OAKa,OAHpBC,EAFO,QAKDrC,KAAKsC,MACPtC,EAAOqC,EAASrC,KAAKrD,QAAQmG,KAAI,SAAA3D,GAAI,OAAIA,EAAK1C,QACpD6Q,GAAatN,GACbyO,EAAmB,OAGnBlR,EAAM8E,EAASrC,KAAKrD,SACpB2Q,GAAa,KAZJ,gDAgBb/K,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SACV2Q,GAAa,IAlBA,yDAAH,qDAsBZuB,EAAa,uCAAG,8BAAA5M,EAAA,+EAESC,IAAMC,IAAI1I,EAASe,cAAe,CACrD4H,OAAQsM,EAAiBtM,SAHf,OAKY,OAHpBC,EAFQ,QAKFrC,KAAKsC,MACPtC,EAAOqC,EAASrC,KAAKrD,QAAQmG,KAAI,SAAA3D,GAAI,OAAIA,EAAKoB,QACpDgN,GAAcvN,GACd0O,EAAmB,OAGnBnR,EAAM8E,EAASrC,KAAKrD,SACpB4Q,GAAc,KAZJ,gDAgBdhL,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SACV4Q,GAAc,IAlBA,yDAAH,qDAsBbuB,EAAe,uCAAG,8BAAA7M,EAAA,+EAEOC,IAAMC,IAAI1I,EAASiB,eAAgB,CACtD0H,OAAQuM,EAAmBvM,SAHf,OAKU,OAHpBC,EAFU,QAKJrC,KAAKsC,MACPtC,EAAOqC,EAASrC,KAAKrD,QAAQmG,KAAI,SAAA3D,GAAI,OAAIA,EAAK1C,QACpD+Q,GAAgBxN,GAChB2O,EAAqB,OAGrBpR,EAAM8E,EAASrC,KAAKrD,SACpB6Q,GAAgB,KAZJ,gDAgBhBjL,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SACV6Q,GAAgB,IAlBA,yDAAH,qDA0BrB,OAJAoB,IACAC,IACAC,IAEO,WAAO,IAAD,MACM,QAAf,EAAAL,SAAA,SAAiBhM,QACD,QAAhB,EAAAiM,SAAA,SAAkBjM,QACA,QAAlB,EAAAkM,SAAA,SAAoBlM,WAGzB,IAGC,cAAC,IAAMC,SAAP,UAEI,eAAC,IAAD,CACI1G,OAAQoY,EACR9X,UAAU,EACVJ,YAAY,EACZG,UAAQ,EACRP,KAAK,KACLuC,OAAQmW,GANZ,UAQI,cAAC,IAAD,CAAanW,OAAQmW,GAArB,SACI,sBAAMhY,UAAU,qBAAhB,kCAIJ,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKuS,GAAG,IAAR,SACI,sBAAKvS,UAAU,gBAAf,UAEI,cAAC,GAAD,CACIwL,UAAQ,EACRhE,GAAG,YACHiE,UAAU,YACVM,MAAM,kBACNrD,MAAOvB,EACP0E,SAAUkG,EAEV3F,aAAcoF,EACdtF,iBAAkBuF,IAEtB,cAAC,GAAD,CACIjK,GAAG,aACHiE,UAAU,aACVM,MAAM,mBACNrD,MAAO9E,EACPiI,SAAUmG,IAGd,cAAC,GAAD,CACIxK,GAAG,cAAciE,UAAU,cAC3BM,MAAM,gBAAgB9L,KAAM6D,EAC5BgM,aAAcA,EAAcM,UAAWA,GACvC9B,MAAOrL,KAEX,cAAC,GAAD,CACIuE,GAAG,aAAaiE,UAAU,aAC1BM,MAAM,eAAe9L,KAAMsD,EAC3BuM,aAAc4B,EAAmBtB,UAAWA,GAC5C9B,MAAOtL,KAEX,cAAC,GAAD,CACIwE,GAAG,gBAAgBiE,UAAU,gBAC7BM,MAAM,kBAAkB9L,KAAM+D,EAC9B8L,aAAcgC,EAAsB1B,UAAWA,GAC/C9B,MAAOnL,UAInB,eAAC,IAAD,CAAKoP,GAAG,IAAR,UAEI,cAAC,IAAD,UACI,sBAAKvS,UAAU,sBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,uBAAMA,UAAU,oBAAoBoH,MAAO,CAACK,UAAW,UAAvD,UACI,cAAC,KAAD,IADJ,aACmCrI,EAAM+H,WAAW,OADpD,KAEI,sBACInH,UAAU,qCADd,SAIQuI,EAEQ6O,EACI,cAAC,EAAD,CACI9X,KAAK,KACLD,MAAM,SAEV,qCAEQiY,EACA,cAAC,IAAD,CAAgBvQ,MAAM,iBAAiBnF,QAASqW,KAChD,cAAC,IAAD,CAAiBlR,MAAM,gBAAgBnF,QAASqW,KAEpD,cAAC,KAAD,CAAgBlR,MAAM,eAAenF,QAjWpF,WAEbuV,EAAS/H,QAAQ+I,QACjBhB,EAAS/H,QAAQ0J,YAAc,EAE/BtQ,GAAW,SAAA/G,GAAI,OAAKA,KACjB6V,GACCC,GAAiB,SAAA9V,GAAI,OAAKA,WA8VkB,cAAC,IAAD,CAAgBsF,MAAM,iBAAiBnF,QAASwW,YAKpE,qBAAKpY,UAAU,iBAAf,SACI,uBAAO8M,IAAKqK,EACRnQ,IAAKwQ,GAAava,EAASK,SAAWka,WAetD,cAAC,GAAD,CACIP,SAAYS,EACZjL,aAActF,YAM9B,cAAC,IAAD,UACI,cAAC,IAAD,CACI9H,MAAM,UACNuC,QAAS6W,GAFb,0B,qBCvcPM,GAAgB,SAAC3Z,GAE1B,OACI,eAAC,IAAD,CACIU,UAAU,EACVJ,YAAY,EACZG,UAAQ,EACRL,QAAQ,EACRqC,OAAQ,kBAAMzC,EAAMyC,UALxB,UAOI,cAAC,IAAD,CACIA,OAAQ,kBAAMzC,EAAMyC,UADxB,qBAKA,eAAC,IAAD,sCAC6BzC,EAAM+H,WADnC,SAGA,cAAC,IAAD,UACI,cAAC,IAAD,CACI+F,SAAO,EACPtL,QAAS,kBAAMxC,EAAM4Z,aACrB3Z,MAAM,UAHV,SAKI,sBAAKW,UAAU,mDAAf,qBACY,cAAC,KAAD,eC2JjBiZ,GA9KW,SAAC7Z,GAEvB,IAAQyY,EAAwBzY,EAAxByY,OAAQrG,EAAgBpS,EAAhBoS,IAAKC,EAAWrS,EAAXqS,OAErB,EAA4BnQ,oBAAS,GAArC,mBAAO2D,EAAP,KAAeC,EAAf,KACA,EAAwB5D,mBAASlC,EAAMsJ,OAAS,IAAhD,mBAAO3E,EAAP,KAAasJ,EAAb,KACA,EAAsC/L,mBAAS,IAA/C,mBAAOoW,EAAP,KAAoBC,EAApB,KAEM7J,EAAU,WAEZ,IAAMtK,EAAO,CACTgE,GAAIpI,EAAMyY,OACV5X,KAAM8D,EACNA,KAAMA,EACNnB,KAAM4O,GAEJ0H,EAAY9Z,EAAMqV,KAAK/R,QAAO,SAAAC,GAAI,OAAIA,EAAK6E,KAAOpI,EAAMyY,UAC9DzY,EAAMoV,QAAN,CAAehR,GAAf,mBAAwB0V,MAItB9K,EAAS,uCAAG,kCAAA3I,EAAA,kEAEVP,GAAU,GAGJwJ,EAAW,CACb,KAHEJ,EAAQvK,EAIV,KAAQuK,EACR,KAAQkD,GAGR3L,EAAW,GAEC,MAAbzG,EAAMoI,GAbC,iCAcW9B,IAAMqP,IAAI9X,EAAS2B,kBAAkBQ,EAAMyY,OAAQnJ,EAAU,CAC1EpE,QAAS,CACL,eAAgB,sBAhBlB,OAcNzE,EAdM,kCAoBW,MAAbzG,EAAMoI,GApBJ,kCAqBW9B,IAAMqP,IAAI9X,EAAS4B,iBAAiBO,EAAMyY,OAAQnJ,EAAU,CACzEpE,QAAS,CACL,eAAgB,sBAvBlB,QAqBNzE,EArBM,gDA4BWH,IAAMqP,IAAI9X,EAAS6B,oBAAoBM,EAAMyY,OAAQnJ,EAAU,CAC5EpE,QAAS,CACL,eAAgB,sBA9BlB,QA4BNzE,EA5BM,kBAmC0B,IAAjCO,OAAOC,KAAKR,GAAUxC,QAAgBwC,EAASkJ,cAAgB3I,OAnCxD,uBAoCApF,EAAQ,IAAID,GACZZ,QAAU,2CACVa,EAtCA,QAyCoB,MAAvB6E,EAASrC,KAAKsC,MACb5F,EAAQ2F,EAASrC,KAAKrD,SACtB2N,KAIA/M,EAAM8E,EAASrC,KAAKrD,SAExBf,EAAMyC,QAAO,GAjDP,0DAsDVkE,QAAQC,IAAR,MAtDU,yBAyDVd,GAAU,GAzDA,6EAAH,qDAgGf,OA/BAG,qBAAU,WAEN,IAAIqT,EAAoB,IAAInT,gBAEtBqT,EAAe,uCAAG,4BAAAnT,EAAA,+EAEOC,IAAMC,IAAI1I,EAASS,gBAAgBma,EAAQ,CAC9DjS,OAAQ8S,EAAkB9S,SAHd,OAKU,OAHpBC,EAFU,QAKJrC,KAAKsC,MACb6R,EAAe9R,EAASrC,KAAKrD,QAAQgZ,cACrCT,EAAoB,MAGpB3X,EAAM8E,EAASrC,KAAKrD,SAVR,gDAchB4F,QAAQC,IAAI,gBAAiB,KAAI7F,SACjCY,EAAM,KAAIZ,SAfM,yDAAH,qDAuBrB,MAJgB,MAAbf,EAAMoI,IACLoR,IAGG,kCAAMF,SAAN,aAAM,EAAmBzS,WAEjC,CAAC4R,EAAQzY,EAAMoI,KAGd,eAAC,IAAMtB,SAAP,WAEKjB,EACG,cAAC,EAAD,CAAa5F,MAAM,YACnB,cAAC,IAAM6G,SAAP,IAGJ,eAAC,IAAD,CACI1G,QAAQ,EACRM,UAAU,EACVJ,YAAY,EACZG,UAAQ,EACRP,KAAK,KACLuC,OAAQ,kBAAMzC,EAAMyC,QAAO,IAN/B,UAQI,cAAC,IAAD,CAAaA,OAAQ,kBAAMzC,EAAMyC,QAAO,IAAxC,SACI,sBAAM7B,UAAU,qBAAhB,SACKZ,EAAM4P,WAGf,eAAC,IAAD,WACkB,MAAb5P,EAAMoI,GACH,cAAC,GAAD,CACIyP,SAAYS,EACZjL,aAAY,UAAK1I,KAErB,cAAC,IAAMmC,SAAP,IAEJ,cAAC,GAAD,CACIsB,GAAIpI,EAAMoI,GACVgE,UAAQ,EACRC,UAAwB,MAAbrM,EAAMoI,GAAa,YAAc,YAC5CuE,MAAoB,MAAb3M,EAAMoI,GAAa,oBAAsB,aAChDkB,MAAO3E,EACP8H,SAAUwB,EAEVjB,aAAcoF,EACdtF,iBAAkBuF,OAG1B,eAAC,IAAD,WACI,cAAC,IAAD,CACIpS,MAAM,UACNuC,QAASwM,EAFb,kBAMA,cAAC,IAAD,CAAQxM,QAnFH,WACjBxC,EAAMyC,QAAO,IAkFD,+BCnGLuX,I,OAnES,SAACha,GACrB,IAAMgC,EAAWC,cAEjB,EAA4BC,oBAAS,GAArC,mBAAO9B,EAAP,KAAe+B,EAAf,KAEMC,EAAiB,WACnBD,GAAU,SAAAE,GAAI,OAAKA,MAGvB,OACI,qCACI,qBAAKzB,UAAU,kCAAf,SACI,eAAC,IAAD,CACIX,MAAM,OACNqC,MAAI,EACJC,OAAO,OACP0X,OAAO,OACPrZ,UAAU,UALd,UAOI,cAAC,IAAD,CAAa4B,QAAS,kBAAMR,EAAS,MAAMpB,UAAU,UAArD,SACI,qBAAKA,UAAU,aAAf,uBAIJ,cAAC,IAAD,CAAeA,UAAU,OAAO4B,QAASJ,IAEzC,eAAC,IAAD,CAAWhC,OAAQA,EAAQQ,UAAU,gBAAgBN,YAAY,EAC7DmC,OAAQL,EAAgBM,UAAU,MADtC,UAEI,cAAC,IAAD,CAAiBD,OAAQL,IAGzB,cAAC,IAAD,CAAexB,UAAU,oBAAzB,SACI,eAAC,IAAD,CAAKA,UAAU,UAAU+B,QAAM,EAA/B,UACI,cAAC,IAAD,CAAS/B,UAAU,cAAnB,SACI,eAAC,IAAD,CAASA,UAAU,mBAAmB4B,QAAS,kBAAMR,EAAS,MAA9D,UACI,cAAC,IAAD,CAAiBY,KAAMC,MACnB,sBAAMjC,UAAU,kBAFxB,aAKJ,cAAC,IAAD,CAASA,UAAU,cAAnB,SACI,eAAC,IAAD,CAASA,UAAU,mBAAnB,UACI,cAAC,IAAD,CAAiBgC,KAAME,MACnB,sBAAMlC,UAAU,kBAFxB,kBAKJ,cAAC,IAAD,CAASA,UAAU,cAAnB,SACI,eAAC,IAAD,CAASA,UAAU,mBAAnB,UACI,cAAC,IAAD,CAAiBgC,KAAMG,MACnB,sBAAMnC,UAAU,kBAFxB,sBAKJ,cAAC,IAAD,CAASA,UAAU,cAAnB,SACI,eAAC,IAAD,CAASA,UAAU,mBAAnB,UACI,cAAC,IAAD,CAAiBgC,KAAMI,MACnB,sBAAMpC,UAAU,kBAFxB,oCAUxB,cAAC,IAAD,CAAWA,UAAU,mBCnC7BkO,I,OAAY,IAAIF,GAAa,GAAIG,GAAe,GAAImL,GAAY,GAgzBrDC,GA9yBD,WACV,IAAMxM,EAAkBK,iBAAO,MACzBgE,EAAmBhE,iBAAO,MAC1BoM,EAAmBpM,iBAAO,MAEhC,EAAwB9L,oBAAS,GAAjC,mBAAOmY,EAAP,KAAaC,EAAb,KAEA,EAA0BpY,mBAAS,GAAnC,mBAAOyM,EAAP,KAAc4L,EAAd,KAEA,EAA4BrY,oBAAS,GAArC,mBAAO2D,EAAP,KAAeC,EAAf,KAEA,EAAwB5D,mBAAS,IAAjC,mBAAOmT,EAAP,KAAaD,EAAb,KAEA,EAAsClT,mBAAS,IAA/C,mBAAOsY,EAAP,KAAoBC,EAApB,KACA,EAA4BvY,mBAAS,GAArC,mBAAOuW,EAAP,KAAeiC,EAAf,KACA,EAA8BxY,mBAAS,KAAvC,mBAAOyY,EAAP,KAAgBC,EAAhB,KACA,EAA4B1Y,mBAAS,IAArC,mBAAO0N,EAAP,KAAeiL,EAAf,KACA,EAA8B3Y,oBAAS,GAAvC,mBAAO4Y,EAAP,KAAgBC,EAAhB,KACA,GAAgC7Y,mBAAS,GAAzC,qBAAO8Y,GAAP,MAAiBC,GAAjB,MACA,GAA4C/Y,mBAAS,IAArD,qBAAOgZ,GAAP,MAAuBC,GAAvB,MAEA,GAA0BjZ,mBAAS,IAAnC,qBAAOiC,GAAP,MAAciX,GAAd,MACA,GAA4BlZ,mBAAS,IAArC,qBAAOwC,GAAP,MAAe2W,GAAf,MACA,GAAgCnZ,mBAAS,IAAzC,qBAAO0C,GAAP,MAAiB0W,GAAjB,MAEA,GAA4CpZ,oBAAS,GAArD,qBAAO4P,GAAP,MAAuByJ,GAAvB,MACA,GAA4CrZ,oBAAS,GAArD,qBAAOsZ,GAAP,MAAuBC,GAAvB,MACA,GAA8CvZ,oBAAS,GAAvD,qBAAOwZ,GAAP,MAAwBC,GAAxB,MACA,GAAkDzZ,oBAAS,GAA3D,qBAAO0Z,GAAP,MAA0BC,GAA1B,MACA,GAA8C3Z,oBAAS,GAAvD,qBAAOsW,GAAP,MAAwBsD,GAAxB,MACA,GAAoD5Z,oBAAS,GAA7D,qBAAO6Z,GAAP,MAA2BC,GAA3B,MAEA,GAAsB9Z,oBAAS,GAA/B,qBAAOkQ,GAAP,MAAYC,GAAZ,MACA,GAA0BnQ,mBAAS,IAAnC,qBAAO+Z,GAAP,MAAcC,GAAd,MACA,GAAkCha,mBAAS,IAA3C,qBAAO2P,GAAP,MAAkBsK,GAAlB,MACA,GAA0Cja,mBAAS,GAAnD,qBAAO6P,GAAP,MAAsBqK,GAAtB,MAEA,GAAoCla,mBAAS,IAA7C,qBAAO6F,GAAP,MAAmB4K,GAAnB,MACA,GAAoCzQ,mBAAS,IAA7C,qBAAOsC,GAAP,MAAmBoO,GAAnB,MAEA,GAAgC1Q,mBAAS,IAAzC,qBAAOma,GAAP,MAAiBC,GAAjB,MACA,GAAwCpa,mBAAS,IAAjD,qBAAOmL,GAAP,MAAqBkP,GAArB,MACA,GAAwCra,mBAAS,iDAAjD,qBAAOkL,GAAP,MAAqBoP,GAArB,MAEMC,GAAc,SAACrU,GAAD,OAAQmS,EAASnS,IAK/BqK,GAAuB,WACzBF,KACAgJ,IAAkB,SAAAlZ,GAAI,OAAKA,MAOzBqa,GAAe,CACjBC,QAAStH,EACTuH,eAAgB,SAACC,GAAD,OAAYA,EAAO9U,YAAc8U,EAAOlY,MAAQkY,EAAOhc,OAI3EoF,qBAAU,WAEN,IAAI6W,EAAkB,IAAI3W,gBACtB2M,EAAmB,IAAI3M,gBACvB0M,EAAkB,IAAI1M,gBACtB4M,EAAqB,IAAI5M,gBAEvB4W,EAAY,uCAAG,4BAAA1W,EAAA,sEAGbP,GAAU,GAHG,SAIUQ,IAAMC,IAAI1I,EAASa,YAAa,CACnD8H,OAAQsW,EAAgBtW,SALf,OAOa,OAHpBC,EAJO,QAODrC,KAAKsC,MACf0O,EAAQ3O,EAASrC,KAAKrD,SACtBmZ,GAAYzT,EAASrC,KAAKrD,QAC1B+b,EAAkB,OAGlBnb,EAAM8E,EAASrC,KAAKrD,SACpBqU,EAAQ,KAdG,gDAkBbzO,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SACVqU,EAAQ,IApBK,yBAuBbtP,GAAU,GAvBG,4EAAH,qDA2BZkX,EAAc,uCAAG,4BAAA3W,EAAA,sEAEfP,GAAU,GAFK,SAGQQ,IAAMC,IAAI1I,EAASe,cAAe,CACrD4H,OAAQsM,EAAiBtM,SAJd,OAMW,OAHpBC,EAHS,QAMHrC,KAAKsC,MACf0O,EAAQ3O,EAASrC,KAAKrD,SACtB+R,EAAmB,KACnBlE,GAAanI,EAASrC,KAAKrD,UAG3BY,EAAM8E,EAASrC,KAAKrD,SACpBqU,EAAQ,KAbK,gDAiBfzO,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SACVqU,EAAQ,IAnBO,yBAsBftP,GAAU,GAtBK,4EAAH,qDA0BdmX,EAAY,uCAAG,4BAAA5W,EAAA,sEAEbP,GAAU,GAFG,SAGUQ,IAAMC,IAAI1I,EAASgB,YAAa,CACnD2H,OAAQqM,EAAgBrM,SAJf,OAMa,OAHpBC,EAHO,QAMDrC,KAAKsC,MACf0O,EAAQ3O,EAASrC,KAAKrD,SACtB8R,EAAkB,KAClB/D,GAAYrI,EAASrC,KAAKrD,UAG1BY,EAAM8E,EAASrC,KAAKrD,SACpBqU,EAAQ,KAbG,gDAiBbzO,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SACVqU,EAAQ,IAnBK,yBAsBbtP,GAAU,GAtBG,4EAAH,qDA0BZoX,EAAe,uCAAG,4BAAA7W,EAAA,sEAEhBP,GAAU,GAFM,SAGOQ,IAAMC,IAAI1I,EAASiB,eAAgB,CACtD0H,OAAQuM,EAAmBvM,SAJf,OAMU,OAHpBC,EAHU,QAMJrC,KAAKsC,MACf0O,EAAQ3O,EAASrC,KAAKrD,SACtBgO,GAAetI,EAASrC,KAAKrD,UAG7BY,EAAM8E,EAASrC,KAAKrD,SACpBqU,EAAQ,KAZM,gDAgBhBzO,QAAQC,IAAR,MACAjF,EAAM,KAAIZ,SACVqU,EAAQ,IAlBQ,yBAqBhBtP,GAAU,GArBM,4EAAH,qDAkCrB,OATa,IAAV6I,EACCoO,IACc,IAAVpO,EACJqO,IACc,IAAVrO,EACJsO,IAEAC,IAEG,WAAO,IAAD,MACM,QAAf,EAAAJ,SAAA,SAAiBjW,QACD,QAAhB,EAAAiM,SAAA,SAAkBjM,QACH,QAAf,EAAAgM,SAAA,SAAiBhM,QACC,OAAlBkM,QAAkB,IAAlBA,KAAoBlM,QACpBf,GAAU,MAGf,CAAC6I,IAEJ,IAiCMwO,GAAiB,SAAC3T,GACpB,GAAGA,EAAMkD,OAAOpD,MAAMrF,OAAO,CACzB,IAAMG,EAAOoF,EAAMkD,OAAOpD,MACtB8T,EAAe,GAEfA,EADS,IAAVzO,EACgBuL,GAAU5W,QAAO,SAAAsS,GAAG,OAAIA,EAAI7N,WAAWsV,cAAcC,SAASlZ,EAAKiZ,kBAEpE,IAAV1O,EACWC,GAAWtL,QAAO,SAAAsS,GAAG,OAAIA,EAAIjR,KAAK0Y,cAAcC,SAASlZ,EAAKiZ,kBAE/D,IAAV1O,EACWG,GAAUxL,QAAO,SAAAsS,GAAG,OAAIA,EAAI/U,KAAKwc,cAAcC,SAASlZ,EAAKiZ,kBAG7DtO,GAAazL,QAAO,SAAAsS,GAAG,OAAIA,EAAI/U,KAAKwc,cAAcC,SAASlZ,EAAKiZ,kBAEnFjI,EAAQgI,QAIJhI,EADS,IAAVzG,EACSuL,GAEM,IAAVvL,EACIC,GAEM,IAAVD,EACIG,GAGAC,KAkBd2B,GAAe,SAAClH,GAClB,IACcF,EACVE,EADAkD,OAAUpD,MAGd+R,GAEqB,kBAAV/R,EAAqBA,EAAM6F,MAAM,KAAO7F,IAIjDgJ,GAAoB,SAAC9I,GACvB,IACcF,EACVE,EADAkD,OAAUpD,MAEd8R,GAEqB,kBAAV9R,EAAqBA,EAAM6F,MAAM,KAAO7F,IAIjDoJ,GAAuB,SAAClJ,GAC1B,IACcF,EACVE,EADAkD,OAAUpD,MAEdgS,GAEqB,kBAAVhS,EAAqBA,EAAM6F,MAAM,KAAO7F,IAuCjDkJ,GAAqB,WAAO,IAAD,EAC7B0J,GAAS,IACTC,GAAa,IACG,OAAhB/B,QAAgB,IAAhBA,GAAA,UAAAA,EAAkBpK,eAAlB,SAA2BuN,SAC3BnD,EAAiBpK,QAAU,KAC3BoM,GAAiB,IAGf7O,GAAsB,WACxB+O,GAAY,IACZC,GAAgB,IAChBC,GAAgB,kDAGdjK,GAAqB,WACvBF,IAAO,GAEP+I,GAAS,IACTC,GAAU,IACVC,GAAY,IAEZ9I,KAEAG,GAAc,IACdC,GAAc,IAEdrF,MAGE2E,GAAe,uCAAG,kCAAA7L,EAAA,6DACpBP,GAAU,GACJ4O,GAAQ,IAAIlN,MAAOmN,eAEnBrF,EAAW,IAAIC,UACZC,OAAO,iBAAkB6M,GAAS,IAC3C/M,EAASE,OAAO,YAAayM,GAAM,IACnC3M,EAASE,OAAO,aAAczH,IAC9BuH,EAASE,OAAO,aAAchL,IAC9B8K,EAASE,OAAO,SAAU9K,IAC1B4K,EAASE,OAAO,WAAY5K,IAC5B0K,EAASE,OAAO,QAASrL,IACzBmL,EAASE,OAAO,OAAQkF,GACxBpF,EAASE,OAAO,OAAQ4C,IACxB9C,EAASE,OAAO,WAAYuC,IAdR,oBAiBOzL,IAAMmJ,KAAK5R,EAASkB,SAAUuQ,EAAU,CAC3DpE,QAAS,CACL,eAAgB,yBAnBR,QAsBU,OALpBzE,EAjBU,QAsBJrC,KAAKsC,MACA,IAAViI,GACC,EAAAuL,IAAU3V,KAAV,oBAAmBkC,EAASrC,KAAKyK,UAIjC4N,GAAY,GAGhBlK,KACAgJ,IAAkB,GAClBza,EAAQ,0BAGRa,EAAM8E,EAASrC,KAAKrD,SApCR,mDAwChB4F,QAAQC,IAAI,mBAAZ,MACAjF,EAAM,KAAIZ,SAzCM,yBA4ChB+E,GAAU,GA5CM,8EAAH,qDA8Df0X,GAA0B,SAACpV,GAAmB,IAAfqV,EAAc,uDAAP,GAElCC,EAAerI,EAAK/R,QAAO,SAAAqa,GAAK,OAAIA,EAAMvV,KAAOA,KAGpDsV,EAAazZ,QACZoO,GAAOqL,EAAa,GAAGla,MACvBkX,EAAUtS,GACV4T,IAAsB,SAAA3Z,GAAI,OAAKA,KAC/BoY,EAAeiD,EAAa,GAAG/Y,MAAQ+Y,EAAa,GAAG7c,MAEzC,WAAX4c,GACC5C,EAAU,eACVD,EAAW,MAEI,UAAX6C,GACJ5C,EAAU,cACVD,EAAW,MAEI,aAAX6C,GACJ5C,EAAU,iBACVD,EAAW,MAGXjZ,EAAM,8BAIVA,EAAM,yBAIRmV,GAAgB,WAAa,IAAZ1O,EAAW,uDAAN,EAClBzD,EAAO0Q,EAAK/R,QAAO,SAAAsS,GAAG,OAAIA,EAAIxN,KAAOA,KAGvC+S,GADD/S,GAAgB,IAAVuG,EACahK,EAAK,GAAGoD,WAEtBK,GAAgB,IAAVuG,EACQhK,EAAK,GAAGA,KAEtByD,GAAgB,IAAVuG,GAINvG,GAAgB,IAAVuG,EAHQhK,EAAK,GAAG9D,KAOR,IAEtBoa,GAAY7S,GACZ2S,GAAW,SAAA1Y,GAAI,OAAKA,MAGlBuX,GAAS,uCAAG,8BAAAvT,EAAA,yDACR+B,EAAK4S,GADG,SAIVlV,GAAU,GACNW,EAAW,GACF,IAAVkI,EANO,iCAOWrI,IAAMsX,OAAO/f,EAASsB,YAAYiJ,GAP7C,OAON3B,EAPM,kCASQ,IAAVkI,EATE,kCAUWrI,IAAMsX,OAAO/f,EAASuB,aAAagJ,GAV9C,QAUN3B,EAVM,kCAYQ,IAAVkI,EAZE,kCAaWrI,IAAMsX,OAAO/f,EAASwB,YAAY+I,GAb7C,QAaN3B,EAbM,kCAeQ,IAAVkI,EAfE,kCAgBWrI,IAAMsX,OAAO/f,EAASyB,eAAe8I,GAhBhD,QAgBN3B,EAhBM,eAmBPA,EAASrC,MAA+B,MAAvBqC,EAASrC,KAAKsC,MAC9B0O,GAAQ,SAAA/S,GAAI,OAAIA,EAAKiB,QAAO,SAAAsS,GAAG,OAAIA,EAAIxN,KAAOA,QAC9CtH,EAAQ2F,EAASrC,KAAKrD,UAGtBY,EAAM8E,EAASrC,KAAKrD,SAxBd,kDA4BV4F,QAAQC,IAAI,kCAAZ,MACAjF,EAAM,KAAIZ,SA7BA,yBAgCV+E,GAAU,GACVgR,KAjCU,6EAAH,qDAyCT+G,GAAU,CACZ,CAAEjb,KAAM,cAAC,KAAD,IAAmB+B,KAAM,WAAYsL,MAAOwC,IACpD,CAAE7P,KAAM,cAAC,KAAD,IAAmB+B,KAAM,aAAcsL,MA3drB,kBAAM0L,IAAmB,SAAAtZ,GAAI,OAAKA,OA4d5D,CAAEO,KAAM,cAAC,KAAD,IAAgB+B,KAAM,YAAasL,MA3dlB,kBAAMwL,IAAkB,SAAApZ,GAAI,OAAKA,OA4d1D,CAAEO,KAAM,cAAC,KAAD,IAAkB+B,KAAM,eAAgBsL,MA3dpB,kBAAM4L,IAAqB,SAAAxZ,GAAI,OAAKA,OA4dhE,CAAEO,KAAM,cAAC,KAAD,IAAmB+B,KAAM,YAAasL,MAThC,WACdiE,QAWJ,OACI,cAAC,IAAMpN,SAAP,UACI,sBAAKlG,UAAU,aAAf,UACKiF,EACG,cAAC,EAAD,CAAa5F,MAAM,YACnB,cAAC,IAAM6G,SAAP,IAIAgU,EACA,cAAC,GAAD,CACI/S,WAAYmT,GACZzY,OAAQqU,GACR8C,UAAWA,KAEf,cAAC,IAAM9S,SAAP,IAIA0R,GACA,cAAC,GAAD,CACIpG,IAAKA,GACLjO,MAAOA,GACPO,OAAQA,GACR+T,OAAQA,EACR5S,OAAQA,EACRjB,SAAUA,GACVmD,WAAYA,GACZvD,WAAYA,GACZgU,gBAAiBA,GAEjBnG,OAAQA,GACRqG,UAlTF,SAACtU,GACf,IAAMyK,EAAUwG,EAAKnO,KAAI,SAAA0O,GACrB,OAAGA,EAAIxN,KAAOhE,EAAKgE,GACRhE,EAGAwR,KAIfR,EAAQvG,IAySQ/I,UAAWA,EACX4K,aAAcA,GACdiC,cAAeA,GACfC,cAAeA,GACfN,kBAAmBA,GACnBI,qBAAsBA,GACtBiG,sBAzgBU,kBAAMmD,IAAmB,SAAAzZ,GAAI,OAAKA,QA4gBhD,cAAC,IAAMyE,SAAP,IAIAgL,GACA,cAAC,GAAD,CACIM,IAAKA,GACLjO,MAAOA,GACPO,OAAQA,GACRE,SAAUA,GACViN,UAAWA,GACX9J,WAAYA,GACZvD,WAAYA,GACZ4I,aAAcA,GACdC,aAAcA,GACd0E,cAAeA,GACfD,eAAgBA,GAChBnE,gBAAiBA,EACjBqE,iBAAkBA,EAElBK,OAAQA,GACRJ,YArRA,SAACzI,GACdA,EAAMkD,OAAOmD,MAAM,KAClB8D,OAAO7D,IAAM6D,OAAO7D,KAAO6D,OAAOmK,UAClC1D,EAAiBpK,QAAU+N,SAASC,cAAc,SAClD5D,EAAiBpK,QAAQiO,QAAU,WAEnC7D,EAAiBpK,QAAQkO,iBAAmB,WACxCvK,OAAO7D,IAAIqO,gBAAgB/D,EAAiBpK,QAAQpI,KACpD,IAAMmC,EAAW6B,KAAKC,MAAMuO,EAAiBpK,QAAQjG,UACrDqS,GAAiBrS,IAGrBqQ,EAAiBpK,QAAQpI,IAAMkI,IAAIC,gBAAgBvG,EAAMkD,OAAOmD,MAAM,IAEtEqM,GAAS1S,EAAMkD,OAAOmD,OACtBsM,GAAa3S,EAAMkD,OAAOmD,MAAM,GAAGlL,QAuQvBkJ,YAtSA,SAACrE,GACjBmE,EAAgBqC,QAAQC,SAsSRS,aAAcA,GACdiC,cAAeA,GACfC,cAAeA,GACfV,gBAAiBA,GACjBC,iBAvSK,SAAC3I,GACtBwI,EAAiBhC,QAAQC,SAuSTxC,iBApSK,SAACjE,GACnBA,EAAMkD,OAAOmD,MAAM,KAClByM,GAAY9S,EAAMkD,OAAOmD,OACzB0M,GAAgB/S,EAAMkD,OAAOmD,MAAM,GAAGlL,MACtC6X,GAAgB1M,IAAIC,gBAAgBvG,EAAMkD,OAAOmD,MAAM,OAiS3CyC,kBAAmBA,GACnBC,mBAAoBA,GACpBC,mBAAoBA,GACpBjF,oBAAqBA,GACrBkF,qBAAsBA,GACtBC,qBAAsBA,KAG1B,cAAC,IAAM5L,SAAP,IAGHiV,GACG,cAAC,GAAD,CACI3J,IAAKA,GACLiD,KAAMA,EACNjN,GAAIuS,EACJlC,OAAQA,EACR7I,OAAQA,EACRtG,MAAOkR,EAEPnI,OAAQA,GACR+C,QAASA,EACT3S,OAAQuZ,KAEZ,cAAC,IAAMlV,SAAP,IAGH4U,GACG,cAAC,GAAD,CACI9L,OAAO,iBACPnN,OAAQkZ,GACRvG,QAASA,EACTxG,WAAYA,GACZD,MAAOA,EACP8N,YAAaA,GACbrU,GAAG,MAEP,cAAC,IAAMtB,SAAP,IAGH0U,GACG,cAAC,GAAD,CACI5L,OAAO,gBACPnN,OAAQgZ,GACRrG,QAASA,EACTtG,UAAWA,GACXH,MAAOA,EACP8N,YAAaA,GACbrU,GAAG,MAEP,cAAC,IAAMtB,SAAP,IAGH8U,GACG,cAAC,GAAD,CACIhM,OAAO,mBACPnN,OAAQoZ,GACRzG,QAASA,EACTrG,aAAcA,GACdJ,MAAOA,EACP8N,YAAaA,GACbrU,GAAG,MAEP,cAAC,IAAMtB,SAAP,IAGJ,cAAC,GAAD,IAII,eAACsX,EAAA,EAAD,CAAKxd,UAAU,wBAAwBwP,GAAI,CAAEiO,OAAQ,IAAKC,UAAW,kBAAmBC,SAAU,GAAlG,UACI,cAACC,GAAA,EAAD,CAAUnE,KAAMA,IAChB,cAACoE,GAAA,EAAD,CACIC,UAAU,4BACVtO,GAAI,CAAEjP,SAAU,WAAYwd,OAAQ,GAAIC,MAAO,IAC/Chc,KAAM,cAACic,GAAA,EAAD,IACNC,QA3nBJ,kBAAMxE,GAAQ,IA4nBVyE,OA7nBL,kBAAMzE,GAAQ,IA8nBTD,KAAMA,EACNzZ,UAAU,oBAPd,SASKid,GAAQ3W,KAAI,SAAC9D,EAAQuG,GAAT,OACT,cAACqV,GAAA,EAAD,CAEIpc,KAAMQ,EAAOR,KACbqc,aAAc7b,EAAOuB,KACrBua,aAAW,EACX1c,QAASY,EAAO6M,OAJX7M,EAAOuB,cAYhC,cAAC,IAAD,CAAW/D,UAAU,OAArB,SACI,gCACI,sBAAKA,UAAU,8BAAf,UACI,eAAC,IAAD,CAAKue,MAAI,EAACve,UAAU,oBAApB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIA,UAAS,UAAe,IAAV+N,GAAe,SAApB,yBACTnM,QAAS,kBAAMia,GAAY,IAF/B,0BAOJ,cAAC,IAAD,UACI,cAAC,IAAD,CACI7b,UAAS,UAAe,IAAV+N,GAAe,SAApB,yBACTnM,QAAS,kBAAMia,GAAY,IAF/B,uBAOJ,cAAC,IAAD,UACI,cAAC,IAAD,CACI7b,UAAS,UAAe,IAAV+N,GAAe,SAApB,yBACTnM,QAAS,kBAAMia,GAAY,IAF/B,qBAOJ,cAAC,IAAD,UACI,cAAC,IAAD,CACI7b,UAAS,UAAe,IAAV+N,GAAe,SAApB,yBACTnM,QAAS,kBAAMia,GAAY,IAF/B,2BAQR,cAAC2C,GAAA,EAAD,2BACQ1C,IADR,IAEItU,GAAG,gBACHqE,SAAU,SAAC4S,EAAKC,GAAN,OAniBH,SAAChW,GAChC,GAAGA,GAASA,EAAMlB,GAAG,CACjB,IAAIgV,EAAe,GAEfA,EADS,IAAVzO,EACgBuL,GAAU5W,QAAO,SAAAsS,GAAG,OAAIA,EAAIxN,KAAOkB,EAAMlB,MAE1C,IAAVuG,EACWC,GAAWtL,QAAO,SAAAsS,GAAG,OAAIA,EAAIxN,KAAOkB,EAAMlB,MAE3C,IAAVuG,EACWG,GAAUxL,QAAO,SAAAsS,GAAG,OAAIA,EAAIxN,KAAOkB,EAAMlB,MAGzC2G,GAAazL,QAAO,SAAAsS,GAAG,OAAIA,EAAIxN,KAAOkB,EAAMlB,MAE/DgN,EAAQgI,QAIJhI,EADS,IAAVzG,EACSuL,GAEM,IAAVvL,EACIC,GAEM,IAAVD,EACIG,GAGAC,IAugBgCwQ,CAA2BD,IACnDE,cAAY,EACZC,oBAAkB,EAClBC,YAAa,SAAC/U,GAAD,OACb,cAAC6B,GAAA,EAAD,2BAAe7B,GAAf,IAAuBgC,MAAmB,IAAVgC,EAAc,eACJ,IAAVA,EAAc,gBACJ,IAAVA,EAAc,eACd,kBAC5B/N,UAAU,YAAYgM,QAAQ,WAC9BH,SAAU0Q,aAKtB,eAAC,IAAD,CAAYwC,UAAWhR,EAAvB,UACI,cAAC,IAAD,CAASA,MAAO,EAAhB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC6I,GAAD,CACIpP,GAAG,QACHiN,KAAQA,EACRD,QAASA,EACTqC,QA1VxB,SAACrP,GACb,IAAMwX,EAAcvK,EAAK/R,QAAO,SAAAqa,GAAK,OAAIA,EAAMvV,KAAOA,KAGtDiK,GAAOuN,EAAY,GAAGpc,MACtBkX,EAAUtS,GACVgT,GAASwE,EAAY,GAAGzb,OACxBkX,GAAUuE,EAAY,GAAGnb,SACzB6W,GAAYsE,EAAY,GAAGhb,UAC3B+N,GAAciN,EAAY,GAAG7X,YAC7B6K,GAAcgN,EAAY,GAAGpb,YAC7BsX,IAAmB,IAgViBhF,cAAeA,WAK/B,cAAC,IAAD,CAASnI,MAAO,EAAhB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,GAAD,CACI0G,KAAQA,EACRD,QAASA,EACT0B,cAAeA,GACfS,WAAYiG,WAK5B,cAAC,IAAD,CAAS7O,MAAO,EAAhB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,GAAD,CACI0G,KAAQA,EACRD,QAASA,EACT0B,cAAeA,GACfF,UAAW4G,WAK3B,cAAC,IAAD,CAAS7O,MAAO,EAAhB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,GAAD,CACI0G,KAAQA,EACRD,QAASA,EACT0B,cAAeA,GACfa,aAAc6F,yBC7sB3ClV,I,OA5GF,SAACtI,GAEV,IAAMuI,EAAS5C,qBAAW6C,IACpBC,EAAW9C,qBAAW+C,IACtBhD,EAAYC,qBAAWC,IACvB+C,EAAiBhD,qBAAWiD,IAC5BC,EAAgBlD,qBAAWmD,IAC3BC,EAAuBpD,qBAAWqD,IAExC,EAA4B9G,mBAAS,GAArC,mBAAO+G,EAAP,KAAeC,EAAf,KACA,EAA8BhH,oBAAS,GAAvC,mBAAOiH,EAAP,KAAgBC,EAAhB,KAEMC,EAAe,SAACC,GAClBJ,EAAUI,IAGRC,EAAkB,SAACC,GACrB,IAAMtB,EAAC,2BACAsB,GADA,IAEH9C,KAAM,QACN+C,eAAgB,eAGpBd,EAAeT,IAGnB,OACI,cAAC,IAAMpB,SAAP,UACI,cAAC,IAAD,UACI,qBAAKlG,UAAU,YAAf,SAEQ6H,EAASvB,KAAI,SAACwC,EAAMC,GAAW,IAAD,EAC1B,OACI,gCACI,sBAAK/I,UAAU,YAEXoH,MAAOa,EAAcT,IAAMS,EAAcT,KAAOsB,EAAKtB,GAAK,CAACnI,MAAO,QAAS,KAC3E2J,aAAc,SAAC1B,GAAOmB,EAAaK,EAAKtB,KACxCyB,aAAc,SAAC3B,GAAOmB,EAAa,IAJvC,UAMI,sBAAKzI,UAAU,aAAf,UACI,qBAAKA,UAAU,OAAO4B,QAAS,SAAA0F,GAAC,OAAIxC,EAAU+C,EAAUiB,EAAMxB,IAA9D,SAEQW,EAAcT,IAAMS,EAAcT,KAAOsB,EAAKtB,GAC9C,sBACIwB,aAAc,kBAAMR,GAAW,IAC/BS,aAAc,kBAAMT,GAAW,IAFnC,SAKSb,EAIGY,EACI,cAAC,IAAD,CACI3G,QAAW,SAAA0F,GAAC,OAAIqB,EAAgBrB,MAEpC,cAAC,IAAD,IAPJ,cAAC,IAAD,CACI1F,QAAW,SAAA0F,GAAC,OAAIqB,EAAgBrB,QAShDe,IAAWS,EAAKtB,GACZ,cAAC,IAAD,IACAuB,EAAM,IAGlB,sBAAK/I,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAf,SACK8I,EAAK3B,aAEV,qBAAKnH,UAAU,wBAAf,mBAEQ8I,EAAKjF,eAFb,aAEQ,EAAcyC,KAAI,SAAC4C,EAAKH,GACpB,OAAO3J,EAAM0E,SAAWoF,EACpB,sBAAKlJ,UAAU,GAAf,UACI,sBAAMA,UAAU,mBAAhB,SACI,cAAC,IAAD,CAAMuH,GAAE,kBAAa2B,GAArB,SACSA,MAGb,uBAAMlJ,UAAU,8BAAhB,UACK8I,EAAKjF,QAAQR,OAAS,EAAI0F,EAAQ,IAAK,GAD5C,YANmBA,GAUvB,cAAC,IAAM7C,SAAP,GAAqB6C,cAM7C,qBAAK/I,UAAU,WAAf,SACS8I,EAAKK,SAAWhB,EAAqBW,EAAKK,UAAY,YAvD1DL,EAAKtB,IA2DVuB,EAAQlB,EAASxE,OAAS,EACtB,qBAAKrD,UAAU,wBAA4B+I,GAC3C,cAAC,IAAM7C,SAAP,MA/DF6C,cCN3BK,I,OA/BA,SAAChK,GACZ,IAAMkK,EAAgBvE,qBAAWwE,IAC3BC,EAAyBzE,qBAAWqD,IAE1C,OACI,cAAC,IAAMlC,SAAP,UACI,cAAC,IAAD,UACI,sBAAKlG,UAAU,kBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBACIA,UAAU,cACVgH,IAAK/J,EAASU,qBAAuByB,EAAM0E,OAC3CoD,IAAK9H,EAAM0E,WAEnB,sBAAK9D,UAAU,gBAAf,UACI,qBAAKA,UAAU,gBAAf,oBAGA,qBAAKA,UAAU,aAAf,SACKZ,EAAM0E,SAEX,sBAAK9D,UAAU,gBAAf,yBACkB,cAAC,IAAD,CAAYoH,MAAO,CAAEsC,SAAU,WADjD,OACsEF,EAAuBF,kBCpB/GrF,I,OAAW,CACbC,MAAM,EACNC,QAAQ,EACRvD,WAAW,EACXwD,SAAU,WACVC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,cAAc,EACdC,OAAQ,SACRC,WAAY,CACR,CACEC,WAAY,KACZX,SAAU,CACRM,aAAc,IAGlB,CACIK,WAAY,IACZX,SAAU,CACRM,aAAc,IAGpB,CACEK,WAAY,IACZX,SAAU,CACRM,aAAc,IAGlB,CACEK,WAAY,IACZX,SAAU,CACRM,aAAc,IAGlB,CACIK,WAAY,IACZX,SAAU,CACRM,aAAc,OAgDboF,GA1CA,SAACvK,GAEZ,IAAM8D,EAAY6B,qBAAWka,IAE7B,OACI,eAAC,IAAM/Y,SAAP,WACI,cAAC,IAAD,CAAkClG,UAAU,OAA5C,SACMkD,EAAUG,OACR,eAAC,IAAD,CAAWrD,UAAU,mBAArB,UACI,oBAAIA,UAAU,wBAAwB+G,MAAM,UAA5C,4BACA,cAAC,IAAD,2BAAY9C,IAAZ,aACEf,EAAUoD,KAAI,SAAC4Y,EAAO1X,GACpB,OACI,sBAAcxH,UAAU,8BAAxB,UACI,qBAAKA,UAAU,8BAAf,SACI,qBACIgH,IAAK/J,EAASM,SAAW2hB,EAAMjY,cAC/BC,IAAKgY,EAAMtb,WACX5D,UAAU,wBAGlB,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,YAAYoH,MAAO,CAACK,UAAW,UAA9C,SACI,oBAAIzH,UAAU,wBAAwB+G,MAAOmY,EAAMtb,WAAnD,SACI,cAAC,IAAD,CAAM2D,GAAE,iBAAY2X,EAAMtb,YAAc5D,UAAU,cAAlD,SACKkf,EAAMtb,qBAZjB4D,YAsBvB,cAAC,IAAMtB,SAAP,KA7BQ,oBA+Bf,cAAC,IAAD,CAAWlG,UAAU,OAAOmG,OAAK,QC/EhC2B,I,OAAW8B,IAAMC,iBACjBN,GAAWK,IAAMC,gBACjBoV,GAAYrV,IAAMC,gBAClBzB,GAAuBwB,IAAMC,gBAwF3BsV,GAtFA,SAAC/f,GACZ,IAAM2K,EAASC,cAEf,EAA4B1I,oBAAS,GAArC,mBAAO2D,EAAP,KAAeC,EAAf,KACA,EAAgC5D,mBAAS,IAAzC,mBAAOuG,EAAP,KAAiBoC,EAAjB,KACA,EAAkC3I,mBAAS,IAA3C,mBAAO4B,EAAP,KAAkBkc,EAAlB,KACA,EAA0C9d,mBAAS,GAAnD,mBAAOgI,EAAP,KAAsBa,EAAtB,KA0DA,OA9CA9E,qBAAU,WACN,IAAIC,EAAkB,IAAIC,gBAEpB1H,EAAgB,uCAAG,gCAAA4H,EAAA,sEAEjBP,GAAU,GAFO,SAGMQ,IAAMC,IAAI1I,EAASY,iBAAmBkM,EAAOsV,WAAY,CAC5E/U,QAAS,CACL,eAAgB,oBAEpB1E,OAAQN,EAAgBM,SAPX,OASS,OANpBC,EAHW,QASLrC,KAAKsC,MAEPqD,EAAWtD,EAASrC,KAAKrD,QAAQuK,QAAO,SAACC,EAAalF,GAAd,OAAoBkF,EAAclF,EAAE0D,WAAU,GACtF+V,EAAQ,GACdrZ,EAASrC,KAAKrD,QAAQmG,KAAI,SAAA3D,GAAI,OAAIuc,EAAMxC,SAAS/Z,EAAKiB,YAAc,KAAOsb,EAAMvb,KAAKhB,MAEtFyc,EAAaF,GACb/U,EAAiBhB,GACjBc,EAAYpE,EAASrC,KAAKrD,SAC1BmF,EAAkB,MAGlBvE,EAAM8E,EAASrC,KAAKrD,SArBP,gDAyBjBY,EAAM,KAAIZ,SAzBO,yBA4BjB+E,GAAU,GA5BO,4EAAH,qDAkCtB,OAFArH,IAEO,WACiB,IAAD,EAAhByH,IACgB,QAAf,EAAAA,SAAA,SAAiBW,QACjBf,GAAU,OAInB,CAAC6E,IAGA,eAAC,IAAM7D,SAAP,WACKjB,EACG,cAAC,EAAD,CAAa5F,MAAM,YACnB,cAAC,IAAM6G,SAAP,IAEJ,cAAC,EAAD,IACA,cAAC,GAAqB0E,SAAtB,CAA+BlC,MA/Db,SAACmC,GAEvB,GAAGA,IAASC,IAAS,CACjB,IAAMC,EAAUC,KAAKC,MAAMJ,EAAO,IAC5BK,EAAUF,KAAKC,MAAMJ,EAAO,IAClC,MAAM,GAAN,OAAUE,EAAU,GAAK,IAAMI,OAAOJ,GAAWI,OAAOJ,GAAxD,YAAoEG,EAAU,GAAK,IAAMC,OAAOD,GAAWC,OAAOD,IAEtH,OAAOL,GAwDH,SACI,cAAC,GAASD,SAAV,CAAmBlC,MAAOb,EAA1B,SACI,cAAC,GAAS+C,SAAV,CAAmBlC,MAAOY,EAA1B,SACI,eAAC2V,GAAUrU,SAAX,CAAoBlC,MAAOxF,EAA3B,UACI,cAAC,GAAD,CAAQY,OAAQiG,EAAOsV,aACvB,cAAC,GAAD,CAAMvb,OAAQiG,EAAOsV,aACrB,cAAC,GAAD,CAAQvb,OAAQiG,EAAOsV,0B,uJC7E7CC,I,OAAcC,sBAAW,SAACngB,EAAO0N,GAAS,IAAD,EACrCqK,EAAW/J,iBAAO,MAClBoS,EAAYpS,iBAAO,MACnBqS,EAAYrS,iBAAO,MAEnBtI,EAAYC,qBAAWC,IAErBuD,EAAwBnJ,EAAxBmJ,QAASC,EAAepJ,EAAfoJ,WAEjB,EAA0BlH,mBAAS,CAAC0L,QAAS,SAA7C,mBAAO5F,EAAP,KAAcsY,EAAd,KAGA,EAA8Bpe,oBAAS,GAAvC,mBAAOqe,EAAP,KAAgBC,EAAhB,KAEA,EAAgCte,mBAAS,IAAzC,mBAAOue,EAAP,KAAiBC,EAAjB,KACA,EAAsCxe,mBAAS,IAA/C,mBAAOye,EAAP,KAAoBC,EAApB,KACA,EAA4C1e,mBAAS,GAArD,mBAAO2e,EAAP,KAAuBC,EAAvB,KAEA,EAA4B5e,mBAAS,GAArC,mBAAO6e,EAAP,KAAeC,EAAf,KACA,EAAsC9e,mBAAS,GAA/C,mBAAOwX,EAAP,KAAoBuH,EAApB,KACA,EAA8B/e,mBAAS,GAAvC,mBAAOgf,EAAP,KAAgBC,EAAhB,KAEM/N,EAAoB,SAAC3H,GAEvB,GAAGA,IAASC,IAAS,CACjB,IAAMC,EAAUC,KAAKC,MAAMJ,EAAO,IAC5BK,EAAUF,KAAKC,MAAMJ,EAAO,IAClC,MAAM,GAAN,OAAUE,EAAU,GAAK,IAAMI,OAAOJ,GAAWI,OAAOJ,GAAxD,YAAoEG,EAAU,GAAK,IAAMC,OAAOD,GAAWC,OAAOD,IAEtH,OAAOL,GAGL2V,EAAkBC,uBAAY,WAChCJ,EAAelJ,EAAS/H,QAAQ0J,aAChC,IAAM4H,EAAWvJ,EAAS/H,QAAQ0J,YAAcwH,EAAU,IAC1Dd,EAAUpQ,QAAQhI,MAAMqI,MAAxB,UAA+C,OAAZ6Q,EAAmB,IAAMI,EAA5D,OAED,CAACJ,IAEEK,EAAgB,WACfpY,EACC4O,EAAS/H,QAAQ+I,QAGjBhB,EAAS/H,QAAQ8I,OAErB1P,GAAW,SAAA/G,GAAI,OAAKA,MAGlBmf,GAAWH,uBAAY,WACtBR,EAAiB,GAChB7gB,EAAM4gB,eAAeH,EAASI,EAAiB,MAEpD,CAAC7gB,EAAO6gB,EAAgBJ,IAErBgB,GAAWJ,uBAAY,WACtBR,EAAkBJ,EAASxc,OAAS,IACnC8T,EAAS/H,QAAQ+I,QACjB/Y,EAAM4gB,eAAeH,EAASI,EAAiB,OAEpD,CAACA,EAAgBJ,EAAUzgB,IA+G9B,OAtFA0hB,8BAAoBhU,GAAK,iBAAO,CAC5BiU,gBAD4B,WAExBJ,KAEJK,eAJ4B,WAKxBH,MAEJI,eAP4B,WAQxBL,MAEJM,gBAV4B,YAvBd,WACd,GAAGf,EAAS,EAAE,CACV,IAAMgB,EAAMC,WAAWjB,EAAOkB,QAAQ,IAAM,GAC5C5B,EAAUrQ,QAAQ1G,MAAQyY,EAC1BhK,EAAS/H,QAAQ+Q,OAASgB,EAC1Bf,EAAUe,IA6BVG,IAEJC,gBAb4B,YAdd,WACd,GAAGpB,EAAS,EAAE,CACV,IAAMgB,EAAMC,WAAWjB,EAAOkB,QAAQ,IAAM,GAC5C5B,EAAUrQ,QAAQ1G,MAAQyY,EAC1BhK,EAAS/H,QAAQ+Q,OAASgB,EAC1Bf,EAAUe,IAuBVK,QAKRnc,qBAAU,WAAO,IAAD,EAERC,EAAkB,IAAIC,gBAEpBkc,EAAS,uCAAG,gCAAAhc,EAAA,sEAEVma,GAAW,GAFD,SAGoB3iB,EAASK,SAAW8B,EAAM2gB,YAAYvI,SAH1D,OAGVL,EAAS/H,QAAQpI,IAHP,OAIJ0a,EAAcvK,EAAS/H,QAAQ8I,OACrCf,EAAS/H,QAAQ+Q,OAASA,EAE1BI,EAAWnhB,EAAM2gB,YAAY5W,eAETrI,IAAhB4gB,GACAA,EAAYC,MAAK,SAAAC,GACftc,EAAkB,QAEnBuc,OAAM,SAAA7gB,GACLwH,GAAW,MAIXsZ,EAlBI,UAkBe1iB,EAAMygB,gBAlBrB,aAkBe,EAAgBkC,WAAU,SAAAC,GAAG,aAAIA,EAAIxa,MAAJ,UAAWpI,EAAM2gB,mBAAjB,aAAW,EAAmBvY,OACxF0Y,EAAkB4B,GAElB3K,EAAS/H,QAAQiJ,QAAU,WAAO,IAAD,EAC1ByJ,GAAmB,UAAA1iB,EAAMygB,gBAAN,eAAgBxc,QAAS,EAC3CyB,EAAU1F,EAAMygB,SAAUzgB,EAAMygB,SAASiC,EAAmB,GAAI,MAGhEhd,EAAU,GAAI,GAAI,MAEtB0D,GAAW,IA5BL,kDAgCVzC,QAAQC,IAAI,uCAAZ,MACAjF,EAAM,KAAIZ,SAjCA,yBAoCVgX,EAAS/H,QAAQmJ,iBAAmB,WAChCqH,GAAW,GACXpX,GAAW,KAGV2O,EAAS/H,QAAQzH,QAAWwP,EAAS/H,QAAQoJ,WAAa,GAC/DoH,GAAW,GA1CD,6EAAH,qDAoDf,OANG,UAAAxgB,EAAM2gB,mBAAN,eAAmB5Y,cAAe4Y,EAAY5Y,aAC7C2Y,EAAY1gB,EAAMygB,UAClBG,EAAe5gB,EAAM2gB,aACrB0B,KAGG,WAAO,IAAD,EACM,QAAf,EAAAnc,SAAA,SAAiBW,WAIzB,CAAI7G,EAAM2gB,YAAa3gB,EAAMygB,SAAUzgB,EAAO6gB,EAAgBJ,EAAU/S,EAAKqT,EAAQ3X,EAArF,OACIpJ,QADJ,IACIA,GADJ,UACIA,EAAO2gB,mBADX,aACI,EAAoB5Y,WADxB,OACoC4Y,QADpC,IACoCA,OADpC,EACoCA,EAAa5Y,WAAY0Z,GAAUL,EAAiB1b,IAMpF,qCAEI,sBAAK9E,UAAU,mCAAf,UACI,qBAAK8M,IAAK0S,EAAWxf,UAAU,gBAC/B,sBAAKA,UAAU,2BAAf,UACI,qBAAKA,UAAU,iBAAf,SAAiCwS,EAAkBsG,KACnD,qBAAK9Y,UAAU,eAAf,SAA+BsgB,IAAYxV,IAAW0H,EAAkB8N,GAAU,UAClF,sBAAKtgB,UAAU,eAAf,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,2BAAf,SACI,qBACIA,UAAS,0BAAqB+f,EAAY9Y,eAAiB,aAC3DD,IAAK+Y,EAAY9Y,cAAgBhK,EAASM,SAAWwiB,EAAY9Y,cAAgB,sBACjFC,IAAI,mBAMhB,sBAAKlH,UAAU,mBAAf,UACI,oBAAIA,UAAU,cAAd,SACK+f,EAAY5Y,aAEjB,oBAAInH,UAAU,cAAd,SACI,cAAC,IAAD,CAAMuH,GAAE,iBAAYwY,EAAYnc,YAAhC,SACKmc,EAAYnc,qBAM7B,sBAAK5D,UAAU,gCAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,cAAC,KAAD,CACI4B,QAASqe,EAAiB,EAAIW,GAAW,KACzC5gB,UAA8B,IAAnBigB,EAAuB,eAAgB,GAClD7Y,MAAO6Y,EAAiB,EACpB,CAAE5Y,OAAQ,WAAa,CAAEA,OAAQ,iBAGrCsY,EACI,cAAC,EAAD,CACIrgB,KAAK,GACLD,MAAM,YAEVkJ,EACI,cAAC,KAAD,CAAWxB,MAAM,aAAanF,QAAS+e,IACvC,cAAC,KAAD,CAAe5Z,MAAM,YAAYnF,QAAS+e,IAEtD,cAAC,KAAD,CACI/e,QAASqe,EAAkBJ,EAASxc,OAAS,EAAKwd,GAAU,KAC5D7gB,UAAWigB,IAAoBJ,EAASxc,OAAS,EAAK,eAAgB,GACtE+D,MACQ6Y,EAAkBJ,EAASxc,OAAS,EAChC,CAAEgE,OAAQ,WAAa,CAAEA,OAAQ,iBAEjD,uBACIrH,UAAU,sBAEV4B,QAAS,SAAA0F,GACLoY,GAAS,SAAAje,GACL,MAAO,CACHuL,QAA0B,UAAjBvL,EAAKuL,QAAsB,OAAS,aAN7D,UAYQmT,EAAS,GACL,cAAC,KAAD,CAAcngB,UAAU,eACxBmgB,EAAS,EACL,cAAC,KAAD,CAAgBngB,UAAU,eAC1B,cAAC,KAAD,CAAeA,UAAU,eAErC,uBAAOoH,MAAOA,EAAO6a,IAAK,EAAGC,IAAK,EAAGC,KAAM,GAAKtW,SAAU,SAAAvE,GAAC,OAtKnE6Z,EAsKkFC,WAAW9Z,EAAEwE,OAAOpD,OArKtH0X,EAAUe,QACVhK,EAAS/H,QAAQ+Q,OAASgB,GAFX,IAACA,GAuKYlhB,KAAK,QAAQmiB,OAAO,WAAWpiB,UAAU,gBAAgB8M,IAAK2S,EAAW4C,aAAclC,UAGnG,uBAAOrT,IAAKqK,EAAUkG,QAAQ,OAAOiF,aAAc9B,aAI/D,cAAC,IAAD,CAAWxgB,UAAU,0BAKlBsf,MCnQF1X,I,cAAUgC,IAAMC,iBAChB7E,GAAY4E,IAAMC,gBAClB7B,GAAY4B,IAAMC,gBAClB3B,GAAgB0B,IAAMC,iBCtB5B,WACH,GAAG,kBAAmBwJ,UAAU,CAG5BA,UAAUC,cAAciP,SAFZ,8BAE0B,CAClCC,MAAO,MAEVb,MAAK,SAASnO,GACXA,EAAaiP,iBAAiB,eAAe,WAG3C,IAAIC,EAAmBlP,EAAamP,WACpC5c,QAAQC,IAAI,2CACV0c,SASPb,OAAM,SAAS7gB,GACZ+E,QAAQC,IAAI,sCAAuChF,WAIvD+E,QAAQC,IAAI,sCD6HpBsN,GAEesP,OAlIf,WACEC,IAAQC,IAAI7gB,KAEZ,IAAM8gB,EAAS3V,iBAAO,MAEtB,EAAgC9L,mBAAS,IAAzC,mBAAOue,EAAP,KAAiBC,EAAjB,KACA,EAA8Bxe,oBAAS,GAAvC,mBAAOiH,EAAP,KAAgBC,EAAhB,KACA,EAAsClH,mBAAS,IAA/C,mBAAOye,EAAP,KAAoBC,EAApB,KAUMgD,EAAiB,SAAC1b,GAAO,IAAD,UAC5B,OAAOA,EAAExB,MACL,IAAK,QACEid,EAAO3T,SACR9H,EAAEuB,iBACI,OAANka,QAAM,IAANA,GAAA,UAAAA,EAAQ3T,eAAR,SAAiB2R,kBACnB,MACJ,IAAK,YACEgC,EAAO3T,SACR9H,EAAEuB,iBACI,OAANka,QAAM,IAANA,GAAA,UAAAA,EAAQ3T,eAAR,SAAiB6R,iBACnB,MACJ,IAAK,aACE8B,EAAO3T,SACR9H,EAAEuB,iBACI,OAANka,QAAM,IAANA,GAAA,UAAAA,EAAQ3T,eAAR,SAAiB4R,iBACnB,MACJ,IAAK,UACE+B,EAAO3T,SACR9H,EAAEuB,iBACI,OAANka,QAAM,IAANA,GAAA,UAAAA,EAAQ3T,eAAR,SAAiB8R,kBACnB,MACJ,IAAK,YACE6B,EAAO3T,SACR9H,EAAEuB,iBACI,OAANka,QAAM,IAANA,GAAA,UAAAA,EAAQ3T,eAAR,SAAiBmS,kBAK3B,OAAO,GA6BT,OA1BAlc,qBAAU,WAAO,IAAD,EAoBd,MAlBG,iBAAkB0N,OACY,YAA5BkQ,aAAaC,WACZD,aAAaE,oBAAoBxB,MAAK,SAACuB,GACjB,YAAfA,GACC9P,QAIwB,YAA5B6P,aAAaC,YACjB9P,KAIFrN,QAAQC,IAAI,iCAGV,QAAN,EAAA+M,cAAA,SAAQ0P,iBAAiB,UAAWO,GAAgB,GAE7C,WACL7F,SAASiG,oBAAoB,WAAYJ,MAG1C,IAGD,cAAC,IAAM9c,SAAP,UACE,cAACgC,GAAc0C,SAAf,CAAwBlC,MAAOqX,EAA/B,SACE,cAAC/X,GAAU4C,SAAX,CAAoBlC,MAAOsa,EAA3B,SACE,cAACpb,GAAQgD,SAAT,CAAkBlC,MAAOH,EAAzB,SACE,eAACvD,GAAU4F,SAAX,CAAoBlC,MAxEZ,SAAClC,EAAI7D,EAAM2E,GACxBA,GACCA,EAAEuB,iBACNiX,EAAYtZ,GACZwZ,EAAerd,IAoEP,UACE,qBAAK3C,UAAU,SAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOqjB,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,oBAAoBC,QAAS,cAAC,EAAD,MACzC,cAAC,IAAD,CAAOD,KAAK,sBAAsBC,QAAS,cAAC,GAAD,MAC3C,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,GAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,SAIvB1D,EAASxc,OACL,cAAC,GAAD,CACIyJ,IAAKiW,EACLhD,YAAaA,EACbF,SAAUA,EACVG,eAAgBA,EAChBzX,QAASA,EACTC,WAAYA,IAEd,cAAC,IAAMtC,SAAP,SAId,cAAC,IAAD,CACI3F,SAAS,YACTH,UAAW,IACXI,iBAAiB,EACjBgjB,aAAa,EACb/iB,cAAc,EACdgjB,KAAK,EACL/iB,kBAAgB,EAChBE,WAAS,EACTD,cAAY,EACZ+iB,MAAM,OACNziB,WAAY0iB,kBElIfC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAASC,OACL,cAAC,GAAD,IACFlH,SAASmH,eAAe,SAM1BV,O","file":"static/js/main.0aa064ab.chunk.js","sourcesContent":["export const apiLinks = {\r\n    // baseURL: \"http://localhost:5000/\" // local Development\r\n    baseURL : \"http://3.109.59.110:5000/\" // testing\r\n    // baseURL: \"http://musicBackend.com/\" // Production\r\n};\r\n\r\n// serviceWorker subscription\r\napiLinks.subscribe = apiLinks.baseURL+\"subscription\";\r\napiLinks.broadcast = apiLinks.baseURL+\"broadcast\";\r\n\r\n// get Links\r\napiLinks.status = apiLinks.baseURL+\"status\";\r\napiLinks.getAudio = apiLinks.baseURL+\"audio/\";\r\napiLinks.getImage = apiLinks.baseURL+\"image/\";\r\napiLinks.getAudioKey = apiLinks.baseURL+\"audioKey/\";\r\napiLinks.getImageKey = apiLinks.baseURL+\"imageKey/\";\r\napiLinks.getArtistImgKey = apiLinks.baseURL+\"artistImageKey/\";\r\napiLinks.getArtistImgFromName = apiLinks.baseURL+\"getImageByArtistName/\";\r\napiLinks.getAlbumDetails = apiLinks.baseURL+\"album/\";\r\napiLinks.getArtistDetails = apiLinks.baseURL+\"artist/\";\r\napiLinks.getAllAudio = apiLinks.baseURL+\"getAllMusic\";\r\napiLinks.getAllAudioDetails = apiLinks.baseURL+\"getAllMusicDetails\";\r\napiLinks.getAllArtists = apiLinks.baseURL+\"getAllArtists\";\r\napiLinks.getAllGenre = apiLinks.baseURL+\"getAllGenre\";\r\napiLinks.getAllCategory = apiLinks.baseURL+\"getAllCategory\";\r\n\r\n// post Links\r\napiLinks.postSong = apiLinks.baseURL+\"addNewSong\";\r\napiLinks.addArtists = apiLinks.baseURL+\"postNewArtists\";\r\napiLinks.addGenre = apiLinks.baseURL+\"postNewGenre\";\r\napiLinks.addCategory = apiLinks.baseURL+\"postNewCategory\";\r\n\r\n// delete Links\r\napiLinks.deleteMusic = apiLinks.baseURL+\"admin/musicDelete/\";\r\napiLinks.deleteArtist = apiLinks.baseURL+\"admin/artistDelete/\";\r\napiLinks.deleteGenre = apiLinks.baseURL+\"admin/genreDelete/\";\r\napiLinks.deleteCategory = apiLinks.baseURL+\"admin/categoryDelete/\"\r\n\r\n// put Links\r\napiLinks.updateAdminData = apiLinks.baseURL+\"admin/updateData/\";\r\napiLinks.updateAdminArtist = apiLinks.baseURL+\"admin/updateArtist/\";\r\napiLinks.updateAdminGenre = apiLinks.baseURL+\"admin/updateGenre/\";\r\napiLinks.updateAdminCategory = apiLinks.baseURL+\"admin/updateCategory/\";\r\n\r\napiLinks.updateAdminMusicFav = apiLinks.baseURL+\"admin/updateMusicFav/\";\r\napiLinks.updateAdminGenreFav = apiLinks.baseURL+\"admin/updateGenreFav/\";\r\napiLinks.updateAdminArtistFav = apiLinks.baseURL+\"admin/updateArtistFav/\";\r\napiLinks.updateAdminCategoryFav = apiLinks.baseURL+\"admin/updateCategoryFav/\";","import React from 'react';\r\nimport { Modal, ModalBody, Spinner } from 'reactstrap';\r\n\r\nimport \"./spinner-grow.css\";\r\n\r\nconst SpinnerGrow = (props) => {\r\n\r\n    return(\r\n        <Modal \r\n            isOpen={true}\r\n            autoFocus={true}\r\n            scrollable={false}\r\n            keyboard={false}\r\n            contentClassName='loader-modal-class'\r\n            backdrop='static'\r\n            centered\r\n            fullscreen=\"md\"\r\n            size='sm'\r\n        >\r\n            <ModalBody>\r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    className='first-dot-spinner'\r\n                    type=\"grow\"\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n                \r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    type=\"grow\"\r\n                    className='second-dot-spinner'\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n                    \r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    className='third-dot-spinner'\r\n                    type=\"grow\"\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst SpinnerRotate = (props) => {\r\n\r\n    return(\r\n        <Spinner\r\n            color={props.color || \"success\"}\r\n            size={props.size || \"\"}\r\n        >\r\n            Loading...\r\n        </Spinner>\r\n    );\r\n\r\n};\r\n\r\nexport default SpinnerGrow;\r\n\r\nexport {\r\n    SpinnerRotate\r\n};\r\n","import { Bounce, toast } from 'react-toastify';\r\n\r\nexport const Success = (message, autoClose=3000) => {\r\n\r\n    toast.success(message, {\r\n        position: \"top-right\",\r\n        autoClose: autoClose,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnFocusLoss: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined\r\n    });\r\n};\r\n\r\nexport const Error = (message, autoClose=5000) => {\r\n\r\n    toast.error(message, {\r\n        position: \"top-right\",\r\n        autoClose: autoClose,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnFocusLoss: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        transition: Bounce\r\n    });\r\n};\r\n\r\n","import React, {useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Navbar, NavItem, Nav, NavbarToggler, NavbarBrand, NavLink,\r\n        Offcanvas, OffcanvasHeader, OffcanvasBody, Container } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faMusic, faBell, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./navigation.css\";\r\n\r\nconst Navigation = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const updateNavClick = () => {\r\n        setIsOpen(prev => !prev);\r\n    };\r\n\r\n    return(\r\n        <>\r\n\r\n            <div className=\"mb-5 navigation-container\">\r\n                <Navbar \r\n                    color=\"dark\"\r\n                    dark\r\n                    expand=\"false\"\r\n                    className=\"one-row\"\r\n                >\r\n                    <NavbarBrand className=\"me-auto\">\r\n                        <div className=\"navbarHead\" onClick={() => navigate('/')}>\r\n                            SANGEET\r\n                        </div>\r\n                    </NavbarBrand>\r\n                    <NavbarToggler className=\"me-2\" onClick={updateNavClick} />\r\n                    \r\n                    <Offcanvas isOpen={isOpen} className=\"offcanvas-tag\" scrollable={true}\r\n                        toggle={updateNavClick} direction=\"end\">\r\n                        <OffcanvasHeader toggle={updateNavClick}>\r\n\r\n                        </OffcanvasHeader>\r\n                        <OffcanvasBody className=\"navbar-menu-links\">\r\n                            <Nav className=\"ms-auto\" navbar>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate(\"/\")}>\r\n                                        <FontAwesomeIcon icon={faHome} /> \r\n                                        <span className=\"extra-spacing\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faMusic} /> \r\n                                        <span className=\"extra-spacing\" /> Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faBell} /> \r\n                                        <span className=\"extra-spacing\" /> Notifications\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faSignInAlt} /> \r\n                                        <span className=\"extra-spacing\" /> Login / SignUp \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </OffcanvasBody>\r\n                    </Offcanvas>\r\n                </Navbar>\r\n            </div>\r\n            <Container className=\"pt-5 pb-5\"/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import axios from \"axios\";\r\nimport Slider from \"react-slick\";\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useEffect, useReducer, useState, useContext } from \"react\";\r\n\r\nimport { LoadAudio } from \"../App\";\r\nimport { apiLinks } from '../connection.config';\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport { Error } from \"../components/Notification/Notification\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\n\r\nimport \"./Home.css\";\r\n\r\nconst musicList = {};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'FETCH_SUCCESS':\r\n            const artistData = action.artistData.filter(item => item.show === true);\r\n            const genreData = action.genreData.filter(item => item.show === true);\r\n            const categoryData = action.categoryData.filter(item => item.show === true);\r\n            const term = action.message.filter(item => item.show === true);\r\n            \r\n            // console.log(term);\r\n            // console.log(artistData);\r\n            // console.log(genreData);\r\n            // console.log(categoryData);\r\n\r\n            let genreList = {};\r\n            let artistList = {};\r\n            let albumList = {};\r\n            let categoryList = {};\r\n            let musicList = action.message;\r\n\r\n            for(var i=0; i < term.length; i++){\r\n\r\n                // Filtering genre data\r\n                let list = term[i].genre;\r\n                for(var j=0; j < list.length; j++){\r\n                    const data = list[j];\r\n                    if(genreData.find(genre => genre.type === data)){\r\n                        if(genreList[data] === undefined){\r\n                            genreList[data] = [term[i]];\r\n                        }\r\n                        else{\r\n                            genreList[data].push(term[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Filtering album data\r\n                list = term[i].albumTitle;\r\n                if(albumList[list] === undefined){\r\n                    albumList[list] = [term[i]];\r\n                }\r\n                else{\r\n                    albumList[list].push(term[i]);\r\n                }\r\n\r\n                // Filtering artist data\r\n                list = term[i].artists;\r\n                for(j=0; j < list.length; j++){\r\n                    const data = list[j];\r\n                    if(artistData.find(artist => artist.name === data)){\r\n                        if(artistList[data] === undefined){\r\n                            artistList[data] = [term[i]];\r\n                        }\r\n                        else{\r\n                            artistList[data].push(term[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Filtering category data\r\n                list = term[i].category;\r\n                for(j=0; j < list.length; j++){\r\n                    const data = list[j];\r\n                    if(categoryData.find(category => category.type === data)){\r\n                        if(categoryList[data] === undefined){\r\n                            categoryList[data] = [term[i]];\r\n                        }\r\n                        else{\r\n                            categoryList[data].push(term[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const list = {\r\n                genreList,\r\n                albumList,\r\n                artistList,\r\n                categoryList,\r\n                musicList\r\n            };\r\n\r\n            // console.log(list);\r\n\r\n            return list;\r\n\r\n        case 'FETCH_ERROR':\r\n            Error(action.message);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 8,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n            breakpoint: 1500,\r\n            settings: {\r\n              slidesToShow: 7,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1350,\r\n            settings: {\r\n              slidesToShow: 6,\r\n            }\r\n        },\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 850,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Home = (props) => {\r\n    const loadAudio = useContext(LoadAudio);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [list, dispatch] = useReducer(reducer, musicList);\r\n\r\n    // console.log(loader, list);\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n\r\n        const getAudioData = async() => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllAudioDetails, {\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    dispatch({  type: 'FETCH_SUCCESS', \r\n                                message: response.data.message,\r\n                                artistData: response.data.artistData,\r\n                                genreData: response.data.genreData,\r\n                                categoryData: response.data.categoryData\r\n                            });\r\n                }\r\n                else{\r\n                    dispatch({ type: 'FETCH_ERROR', message: response.data.message });\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                dispatch({ type: 'FETCH_ERROR', message: err.message });\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        getAudioData();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <Container key='category-container' fluid>\r\n                {list.categoryList ?  \r\n                    Object.keys(list.categoryList).map(catList => {\r\n                        let ll = [];\r\n                        if(catList === 'New Releases')\r\n                            ll = list.categoryList[catList].sort((a, b) => {\r\n                                let keyA = new Date(a.timeStamp);\r\n                                let keyB = new Date(b.timeStamp);\r\n                                if(keyA < keyB) return 1;\r\n                                else if(keyA > keyB) return -1;\r\n                                else return 0;\r\n                            });\r\n                        else\r\n                            ll = list.categoryList[catList];\r\n\r\n                        return (\r\n                            <Container key={catList} className=\" mt-3 slider-container\" fluid>\r\n                                <h2 className=\"category-list-heading\" title={catList}>{catList}</h2>\r\n                                <Slider {...settings}>\r\n                                    {ll.map(item => {\r\n                                        return (\r\n                                            <div key={item.id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                                <div className=\"card-image-container\">\r\n                                                    <img \r\n                                                        src={apiLinks.getImage + item.musicImageKey} \r\n                                                        alt={item.musicTitle} \r\n                                                        className=\"card-image\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"card-text-container\">\r\n                                                    <div className=\"card-text\">\r\n                                                        <h5 className=\"pt-3 song-name\" title={`Play ${item.musicTitle}`}>\r\n                                                            <span style={{cursor: \"pointer\"}} onClick={(e) => loadAudio(ll, item, e)}>\r\n                                                                {item.musicTitle}\r\n                                                            </span>\r\n                                                        </h5>\r\n                                                        <h6 title={`Watch ${item.albumTitle}`} className=\"album-title\">\r\n                                                            <Link to={`/album/${item.albumTitle}`} className=\"album-title\">\r\n                                                                {item.albumTitle}\r\n                                                            </Link>\r\n                                                        </h6>\r\n                                                        {/* <h6 className=\"artist-name\">\r\n                                                            {item.artists.map((artist, idx) => {\r\n                                                                return (\r\n                                                                    <React.Fragment>\r\n                                                                        <span title={`Listen to ${artist}`}  key={artist}>\r\n                                                                            <Link to={`/artist/${artist}`} className=\"artist-name\">\r\n                                                                                {artist}\r\n                                                                            </Link>\r\n                                                                        </span>\r\n                                                                        <span key={idx}>\r\n                                                                            {item.artists?.length - 1 > idx ? `, ` : ``}\r\n                                                                        </span>\r\n                                                                    </React.Fragment>\r\n\r\n                                                                )\r\n                                                            })}\r\n                                                        </h6> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </Slider>\r\n                            </Container>\r\n                        );\r\n                    })\r\n                : <React.Fragment />\r\n                }\r\n            </Container>\r\n            <Container key=\"artist-container\" className=\"mt-5\" fluid>\r\n                { list.artistList ? \r\n                    <Container className=\"slider-container\" fluid>\r\n                        <h2 className=\"category-list-heading\" title=\"Artists\">Artists</h2>\r\n                        <Slider {...settings}>\r\n                        { Object.keys(list.artistList).map((artist, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container\">\r\n                                        <img \r\n                                            src={apiLinks.getArtistImgFromName + artist} \r\n                                            alt={artist} \r\n                                            className=\"artist-card-image\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className=\"pt-3 pb-3 artist-name\" title={artist}>\r\n                                                <Link to={`/artist/${artist}`} className=\"artist-name\">\r\n                                                    {artist}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3 mt-5\" fluid />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport \"./Error.css\";\r\n\r\nconst Error = () => {\r\n  return(\r\n      <div>\r\n          <h1>Error</h1>\r\n      </div>\r\n  );  \r\n};\r\n\r\nexport default Error;","// for song list\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useContext } from \"react\";\r\nimport PlayCircle from \"@mui/icons-material/PlayCircle\";\r\nimport PauseCircle from \"@mui/icons-material/PauseCircle\";\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\n\r\nimport { CalculateTimeContext, SongList } from \"../../pages/Album\";\r\nimport { PlayerContext, PlayPause, Playing, LoadAudio } from \"../../App\";\r\n\r\nimport \"./body.css\";\r\n\r\nconst Body = (props) => {\r\n    \r\n    \r\n    const paused = useContext(Playing);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentPlayer = useContext(PlayerContext);\r\n    const calculateTimeContext = useContext(CalculateTimeContext);\r\n\r\n    const [playId, setPlayId] = useState(0);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const updatePlayId = (value) => {\r\n        setPlayId(value);\r\n    };\r\n\r\n    const updatePlayPause = (event) => {\r\n        const e = {\r\n            ...event, \r\n            code: \"Space\",\r\n            preventDefault: () => {}\r\n        };\r\n\r\n        playPauseState(e);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container> \r\n                <div className=\"song-list\">\r\n                    {\r\n                        songList.map((song, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"table-row\"\r\n                                        key={song.id}\r\n                                        style={currentPlayer.id && currentPlayer.id === song.id ? {color: \"#eee\"}: null}\r\n                                        onMouseEnter={(e) => {updatePlayId(song.id)}}\r\n                                        onMouseLeave={(e) => {updatePlayId(0)}}\r\n                                    >\r\n                                        <div className=\"srno-title\">\r\n                                            <div className=\"srno\" onClick={e => loadAudio(songList, song, e)}>\r\n                                                {\r\n                                                    currentPlayer.id && currentPlayer.id === song.id ?\r\n                                                    <span\r\n                                                        onMouseEnter={() => setPlaying(true)}\r\n                                                        onMouseLeave={() => setPlaying(false)}\r\n                                                    > \r\n                                                        {\r\n                                                            !paused ?\r\n                                                                <PlayCircle \r\n                                                                    onClick = {e => updatePlayPause(e)}\r\n                                                                /> :\r\n                                                                playing ?\r\n                                                                    <PauseCircle \r\n                                                                        onClick = {e => updatePlayPause(e)}\r\n                                                                    />:\r\n                                                                    <EqualizerIcon />\r\n                                                        }\r\n                                                    </span>:\r\n                                                    playId === song.id ? \r\n                                                        <PlayCircle /> :\r\n                                                        index+1\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"title\">\r\n                                                <div className=\"music-title\">\r\n                                                    {song.musicTitle}\r\n                                                </div>\r\n                                                <div className=\"d-flex custom-artists\">\r\n                                                    {\r\n                                                        song.artists?.map((art, index) => {\r\n                                                            return(\r\n                                                                <div className=\"\" key={index}>\r\n                                                                    <span className=\"song-list-artist\">\r\n                                                                        {\r\n                                                                            art === \"Various Artists\" ? \r\n                                                                                art : \r\n                                                                                <Link to={`/artist/${art}`}>\r\n                                                                                        {art}\r\n                                                                                </Link>\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                    <span className=\"song-list-artist-separation\">\r\n                                                                        {song.artists.length - 1 > index ? \",\": \"\"}&nbsp;\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"duration\">\r\n                                                {song.duration ? calculateTimeContext(song.duration) : '--:--'}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        index < songList.length - 1 ? (\r\n                                            <div className=\"custom-bottom-border\" key={index} />\r\n                                        ) : <React.Fragment />\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;","import { Container } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useContext } from \"react\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\n\r\nimport { apiLinks } from \"../../connection.config\";\r\nimport { CalculateTimeContext, SongList, Artists, Duration } from \"../../pages/Album\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = (props) => {\r\n    const artists = useContext(Artists);\r\n    const songList = useContext(SongList);\r\n    const totalDuration = useContext(Duration);\r\n    const calculateTotalDuration = useContext(CalculateTimeContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                <div className=\"album-container\">\r\n                    <div className=\"album-image-container\">\r\n                        <img \r\n                            className=\"album-image\"\r\n                            src={apiLinks.getImage + songList[0]?.musicImageKey} \r\n                            alt={songList[0]?.albumTitle} />\r\n                    </div>\r\n                    <div className=\"album-details\">\r\n                        <div className=\"album-heading\">\r\n                            Album\r\n                        </div>\r\n                        <div className=\"album-name\">\r\n                            {songList[0]?.albumTitle}\r\n                        </div>\r\n                        <div className=\"album-artists\">\r\n                            {\r\n                                artists.length > 2 ? \r\n                                    \"Various Artists\" : \r\n                                    artists?.map((artist, idx) => {\r\n                                        return (\r\n                                            <span key={idx}>\r\n                                                <Link to={`/artist/${artist}`}>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                                {idx < (artists.length - 1) ? \" , \" : \" \"}\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                            } &nbsp; <CircleIcon style={{ fontSize: '.5rem' }} />&nbsp; { calculateTotalDuration(totalDuration) }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","// for related artists\r\nimport Slider from 'react-slick';\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { Artists } from \"../../pages/Album\";\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./footer.css\";\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n          breakpoint: 1200,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 991,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Footer = (props) => {\r\n\r\n    let artistList = useContext(Artists);\r\n    artistList = artistList?.filter(artist => artist !== \"Various Artists\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container key=\"artist-container\" className=\"mt-5\">\r\n                { artistList.length ? \r\n                    <Container className=\"slider-container\">\r\n                        <h2 className=\"category-list-heading\" title=\"Artists\">Album Artists</h2>\r\n                        <Slider {...settings}>\r\n                        { artistList.map((artist, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container\">\r\n                                        <img \r\n                                            src={apiLinks.getArtistImgFromName + artist} \r\n                                            alt={artist} \r\n                                            className=\"artist-card-image\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className=\"pt-3 pb-3 artist-name\" title={artist}>\r\n                                                <Link to={`/artist/${artist}`} className='artist-name'>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3\" fluid />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport Body from \"../components/Album/body\";\r\nimport Header from \"../components/Album/header\";\r\nimport Footer from \"../components/Album/footer\";\r\nimport { apiLinks } from \"../connection.config\";\r\nimport { Error } from \"../components/Notification/Notification\";\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\n\r\nimport \"./album.css\";\r\n\r\nexport const Artists = React.createContext();\r\nexport const SongList = React.createContext();\r\nexport const Duration = React.createContext();\r\nexport const CalculateTimeContext = React.createContext();\r\n\r\nconst Album = (props) => {\r\n    const params = useParams();\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [songList, setSongList] = useState([]);\r\n    const [artists, setArtists] = useState([]); \r\n    const [totalDuration, setTotalDuration] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        const getAlbum = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAlbumDetails+params.albumName, {\r\n                    headers: {\r\n                        'content-type': \"application/json\"\r\n                    },\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const artist = [...new Set(response.data.message.map((songs) => songs.artists).flat())];\r\n                    const duration = response.data.message.reduce((partial_sum, a) => partial_sum + a.duration, 0);\r\n                    \r\n                    setArtists(artist);\r\n                    setTotalDuration(duration);\r\n                    setSongList(response.data.message);\r\n                    abortController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                Error(err.message);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        getAlbum();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [params]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <CalculateTimeContext.Provider value={calculateSongTime}>\r\n                <SongList.Provider value={songList}>\r\n                    <Artists.Provider value={artists}>\r\n                        <Duration.Provider value={totalDuration}>\r\n                            <Header />\r\n                            <Body />\r\n                            <Footer />\r\n                        </Duration.Provider>\r\n                    </Artists.Provider>\r\n                </SongList.Provider>\r\n            </CalculateTimeContext.Provider>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Album;\r\n","import React from 'react';\r\nimport { Row, Col, Label } from 'reactstrap';\r\nimport { TextField } from '@mui/material'\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\n\r\nconst TextInput = (props) => {\r\n\r\n    const label = {\r\n        inputProps: {\r\n            'aria-label': \"Favourite Check\"\r\n        }\r\n    };\r\n\r\n    const onCheckedChange = (event) => {\r\n        props.onCheckBoxChange(event.target.checked);\r\n    };\r\n\r\n    const onValueChange = (event) => {\r\n        props.onChange(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Row className='music-detail-fields'>\r\n            <Col className=\"mt-1 mb-1\" xs=\"5\">\r\n                <Label className=\"label-styling\" style={{justifyContent: \"flex-end\"}} for={props.id}>\r\n                    {\r\n                        props.required ? \r\n                        <>\r\n                            {props.labelName} <span style={{color: \"#f00\", alignSelf: \"flex-start\"}}>*</span>\r\n                        </> : \r\n                        props.labelName\r\n                    }\r\n                </Label>\r\n            </Col>\r\n            <Col className=\"mt-1 mb-1\" xs={props.check ? \"6\" : \"7\"}>\r\n                <TextField \r\n                    value={props.value}\r\n                    onChange={onValueChange}\r\n                    className=\"music-input-detail\"\r\n                    id={`standard-required ${props.id}`}\r\n                    label={props.label}\r\n                    variant=\"standard\"\r\n                />\r\n            </Col>\r\n            {\r\n                props.check ?\r\n                <Col className='mt-1 mb-1' xs=\"1\">\r\n                    <Checkbox onChange={onCheckedChange} checked={props.checkedValue} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                </Col> :\r\n                <React.Fragment />\r\n            }\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst NewImageUpload = (props) => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"image-preview\">\r\n                <img \r\n                    className='image-preview-img' \r\n                    src={props.musicImgPath} \r\n                    alt={props.musicImgName} \r\n                />\r\n            </div>\r\n            <div className='image-upload-button'>\r\n                <div className='music-upload-space d-flex justify-content-center align-items-center'>\r\n                    <span className='music-image-title'>\r\n                        \" {props.musicImgName === \"\" ? \"Select Image\" : props.musicImgName} \"\r\n                    </span>\r\n                    {\r\n                        props.musicImgName === \"\" ? <React.Fragment /> : \r\n                        <Button title='Remove Image' close onClick={props.removeSelectedImage} />\r\n                    }\r\n                </div>\r\n                <div className='music-upload-space'>\r\n                    <input \r\n                        accept='image/*'\r\n                        type=\"file\" \r\n                        onChange={props.uploadMusicImage} \r\n                        ref={props.hiddenFileInput}\r\n                        style={{display: \"none\"}}\r\n                    />\r\n                    <Button \r\n                        onClick={props.handleClick}\r\n                        color='dark'\r\n                        outline={true}\r\n                    >\r\n                        Upload Image\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewImageUpload;","import React, {useRef, useState} from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport NewImageUpload from './newImageUpload';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from '../Notification/Notification';\r\n\r\nconst AddNewModal = (props) => {\r\n\r\n    const hiddenFileInput = useRef(null);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [name, setName] = useState('');\r\n    const [checkBoxChecked, setCheckBoxChecked] = useState(false);\r\n\r\n    const [artistImg, setArtistImg] = useState({});\r\n    const [artistImgName, setArtistImgName] = useState('');\r\n    const [artistImgPath, setArtistPath] = useState('/assets/images/artist-design.png');\r\n  \r\n    const handleClick = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n        \r\n    const uploadArtistImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setArtistImg(event.target.files);\r\n            setArtistImgName(event.target.files[0].name);\r\n            setArtistPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n\r\n    const removeSelectedImage = () => {\r\n        setArtistImg({});\r\n        setArtistImgName('');\r\n        setArtistPath('/assets/images/artist-design.png');\r\n    };\r\n\r\n    const setData = (response) => {\r\n        if( (props.tabId === 2 && props.id === '1') ||\r\n            (props.tabId === 3 && props.id === '2') ||\r\n            (props.tabId === 4 && props.id === '3')){\r\n                // props.setRows(prevData => [...prevData, ...(response.data.rowData)]);\r\n                if(props.tabId === 2){\r\n                    props.artistRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 3){\r\n                    props.genreRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 4){\r\n                    props.categoryRows.push(...(response.data.rowData));\r\n                }\r\n                else{\r\n                    Error(\"Unable to update search list by tabId\");\r\n                }\r\n            }\r\n        // else if(props.id === '1') props.updateTabId(2);\r\n        // else if(props.id === '2') props.updateTabId(3);\r\n        // else if(props.id === '3') props.updateTabId(4);\r\n        // else props.updateTabId(1);\r\n    };\r\n\r\n    const addDetail = async () => {\r\n        let controller = new AbortController();\r\n\r\n        try{\r\n\r\n            setLoader(true);\r\n            const names = name.split(',').map(nam => nam.trim());\r\n            \r\n            const formData = new FormData();\r\n            formData.append('names', names);\r\n            formData.append(\"show\", checkBoxChecked);\r\n            let response = {};\r\n\r\n            if(props.id === '1'){\r\n                formData.append('artistImg', artistImg[0]);\r\n                response = await axios.post(apiLinks.addArtists, formData, {\r\n                    signal: controller.signal\r\n                });\r\n            }\r\n            else if(props.id === '2'){\r\n                response = await axios.post(apiLinks.addGenre, {\r\n                    types: names,\r\n                    show: checkBoxChecked,\r\n                }, {\r\n                    signal: controller.signal,\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                response = await axios.post(apiLinks.addCategory, {\r\n                    types: names,\r\n                    show: checkBoxChecked,\r\n                }, {\r\n                    signal: controller.signal,\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n\r\n            if(Object.keys(response).length === 0 && response.constructor === Object){\r\n                const error = new Error();\r\n                error.message = \"Something went wrong, could add data now\";\r\n                throw error;\r\n            }\r\n            else{\r\n                if(response.data.code === 200){\r\n                    controller = null;\r\n                    Success(response.data.message);\r\n                    setData(response);\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n        \r\n        }\r\n        catch(err){\r\n            console.log(err.message, err);\r\n        }\r\n        finally{\r\n            controller?.abort();\r\n            setLoader(false);\r\n            props.toggle(false);\r\n        }\r\n    };\r\n\r\n    const removeDetail = () => {\r\n        setName('');\r\n        setCheckBoxChecked(false);\r\n        removeSelectedImage();\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            \r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n\r\n            <Modal\r\n                isOpen={true}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='lg'\r\n                toggle={() => props.toggle(false)}\r\n            >\r\n                <ModalHeader toggle={() => props.toggle(false)}>\r\n                    <span className='modal-header-title'>\r\n                        {props.header}\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {props.id === '1' ? \r\n                        <NewImageUpload \r\n                            musicImgName={artistImgName}\r\n                            musicImgPath={artistImgPath}\r\n                            removeSelectedImage={removeSelectedImage}\r\n                            uploadMusicImage={uploadArtistImage}\r\n                            hiddenFileInput={hiddenFileInput}\r\n                            handleClick={handleClick}\r\n                        /> : \r\n                        <React.Fragment />\r\n                    }\r\n                    <TextInput \r\n                        id={props.id}\r\n                        required\r\n                        check={true}\r\n                        labelName={props.id === '1' ? \"Add New Name\" : \"Add New Type\"}\r\n                        label={props.id === '1' ? \"Enter Artist Name\" : \"Enter Comma separated Types\"}\r\n                        value={name}\r\n                        onChange={setName}\r\n                        checkedValue={checkBoxChecked}\r\n                        onCheckBoxChange={setCheckBoxChecked}\r\n                    />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={addDetail}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeDetail}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddNewModal;\r\n","import React from 'react';\r\nimport { Row, Col, Label } from 'reactstrap';\r\nimport { InputLabel, Select, OutlinedInput, MenuItem, \r\n        Checkbox, ListItemText, FormControl} from '@mui/material';\r\n\r\nconst CheckBoxInput = (props) => {\r\n    \r\n    return (\r\n        <FormControl sx={{width: '100%'}}>\r\n            <Row className='music-detail-fields'>\r\n                <Col className=\"mt-2 mb-3\" xs=\"5\">\r\n                    <Label className=\"label-styling-checkbox\" style={{ justifyContent: \"flex-end\" }}\r\n                        for={props.id}>\r\n                        {props.labelName}\r\n                    </Label>\r\n                </Col>\r\n                <Col className=\"mt-2 mb-3\" xs=\"7\">\r\n                    <InputLabel \r\n                        id={`demo-multiple-checkbox-label ${props.id}`}\r\n                        className=\"customized-form-label\"\r\n                    >\r\n                        {props.label}\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-multiple-checkbox-label\"\r\n                        id=\"demo-multiple-checkbox\"\r\n                        multiple\r\n                        className=\"music-input-detail\"\r\n                        value={props.type}\r\n                        onChange={props.handleChange}\r\n                        input={<OutlinedInput label=\"Tag\" />}\r\n                        renderValue={(selected) => {\r\n                            if(selected.length === 0){\r\n                                return <em>Select Artist</em>;\r\n                            }\r\n                            return selected.join(', ');\r\n                        }}\r\n                        MenuProps={props.MenuProps}\r\n                    >\r\n                    {props.names.map((name) => (\r\n                        <MenuItem key={Math.floor(Math.random() * 10000 + 1)} value={name.name || name.type || name}>\r\n                            <Checkbox checked={props.type.indexOf(name.name || name.type || name) > -1} />\r\n                            <ListItemText primary={name.name || name.type || name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default CheckBoxInput;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport CheckBoxInput from './checkBoxInput';\r\nimport NewImageUpload from './newImageUpload';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n    style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n    },\r\n    },\r\n};\r\n\r\nconst NewMusicAdd = (props) => {\r\n\r\n    const [genreList, setGenreList] = useState([]);\r\n    const [artistList, setArtistList] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n\r\n    const {genre, category, musicName, artist, musicImgPath, musicImgName, addMusicWidget, hiddenFileInput, musicDuration,\r\n        hiddenMusicInput, uploadMusic, handleClick, handleChange, saveUploadMusic, handleMusicClick, fav, setFav,\r\n        uploadMusicImage, handleGenreChange, removeMusicDetails, removeSelectedSong, removeSelectedImage,\r\n        updateAddMusicWidget, handleCategoryChange, musicTitle, albumTitle, setMusicTitle, setAlbumTitle} = props;\r\n\r\n    useEffect(() => {\r\n\r\n        let genreController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let categoryController = new AbortController();\r\n\r\n        const getGenreList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setGenreList(data);\r\n                    genreController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setGenreList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setGenreList([]);\r\n            }\r\n        };\r\n        \r\n        const getArtistList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setArtistList(data);\r\n                    artistController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setArtistList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setArtistList([]);\r\n            }\r\n        };\r\n\r\n        const getCategoryList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setCategoryList(data);\r\n                    categoryController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setCategoryList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setCategoryList([]);\r\n            }\r\n        };\r\n\r\n        getGenreList();\r\n        getArtistList();\r\n        getCategoryList();\r\n\r\n        return () => {\r\n            genreController?.abort();\r\n            artistController?.abort();\r\n            categoryController?.abort();\r\n        };\r\n\r\n    }, []);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Modal\r\n                isOpen={addMusicWidget}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='xl'\r\n                toggle={updateAddMusicWidget}\r\n            >\r\n                <ModalHeader toggle={updateAddMusicWidget}>\r\n                    <span className='modal-header-title'>\r\n                        Add New Song\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <div className='music-details'>\r\n                                \r\n\r\n                                <TextInput \r\n                                    required\r\n                                    id=\"song-name\"\r\n                                    labelName=\"Song Name\"\r\n                                    label=\"Enter Song Name\"\r\n                                    check={true}\r\n                                    value={musicTitle}\r\n                                    onChange={setMusicTitle}\r\n                                    checkedValue={fav}\r\n                                    onCheckBoxChange={setFav}\r\n                                />\r\n                                <TextInput \r\n                                    id=\"album-name\"\r\n                                    labelName=\"Album Name\"\r\n                                    label=\"Enter Album Name\"\r\n                                    value={albumTitle}\r\n                                    onChange={setAlbumTitle}\r\n                                />\r\n\r\n                                <CheckBoxInput \r\n                                    id=\"artist-name\" labelName=\"Artist Name\"\r\n                                    label=\"Select Artist\" type={artist}\r\n                                    handleChange={handleChange} MenuProps={MenuProps}\r\n                                    names={artistList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"genre-name\" labelName=\"Genre Name\"\r\n                                    label=\"Select Genre\" type={genre}\r\n                                    handleChange={handleGenreChange} MenuProps={MenuProps}\r\n                                    names={genreList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"category-name\" labelName=\"Category Name\"\r\n                                    label=\"Select Category\" type={category}\r\n                                    handleChange={handleCategoryChange} MenuProps={MenuProps}\r\n                                    names={categoryList}\r\n                                />\r\n\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n\r\n                            <Row>\r\n                                <div className='music-upload-button'>\r\n                                    <div className='music-upload-detail d-flex justify-content-center align-items-center'>\r\n                                        <span className='music-image-title' style={{textAlign: \"center\"}}>\r\n                                            <div>\r\n                                                \" {musicName.trim().length === 0 ? \"Select File\" : musicName} \"\r\n                                            </div>\r\n                                            <div>\r\n                                                Duration: {musicDuration !== 0 ? calculateSongTime(musicDuration) : '00:00'}\r\n                                            </div>\r\n                                        </span>\r\n                                        {musicName.trim().length === 0 ? \r\n                                            <React.Fragment /> : \r\n                                            <Button close title='Remove song' onClick={removeSelectedSong}/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className='music-upload-detail'>\r\n                                        <input \r\n                                            type=\"file\" \r\n                                            accept='audio/*'\r\n                                            onChange={uploadMusic} \r\n                                            ref={hiddenMusicInput}\r\n                                            style={{display: \"none\"}}\r\n                                        />\r\n                                        <Button \r\n                                            onClick={handleMusicClick}\r\n                                            color='dark'\r\n                                            outline={true}\r\n                                        >\r\n                                            Upload Song\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Row>\r\n\r\n                            <NewImageUpload \r\n                                musicImgName={musicImgName}\r\n                                musicImgPath={musicImgPath}\r\n                                removeSelectedImage={removeSelectedImage}\r\n                                uploadMusicImage={uploadMusicImage}\r\n                                hiddenFileInput={hiddenFileInput}\r\n                                handleClick={handleClick}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={saveUploadMusic}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeMusicDetails}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewMusicAdd;\r\n","import axios from \"axios\";\r\n\r\nimport { apiLinks } from \"../connection.config\";\r\n\r\nconst publicVapidKey = process.env.REACT_APP_PUBLIC_VAPID_KEY;\r\nconst urlBase64ToUint8Array = (base64String) => {\r\n    // console.log(base64String);\r\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/-/g, '+')\r\n      .replace(/_/g, '/');\r\n  \r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n  \r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n};\r\n\r\nexport const Subscribe = async () => {\r\n    if (!('serviceWorker' in navigator)) return;\r\n  \r\n    const registration = await navigator.serviceWorker.ready;\r\n  \r\n    // Subscribe to push notifications\r\n    const subscription = await registration.pushManager.subscribe({\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\r\n    });\r\n    \r\n    const today = new Date().toISOString();\r\n\r\n    await axios.post(apiLinks.subscribe, \r\n            JSON.stringify({subscription: subscription, today: today}), {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n        }\r\n    });\r\n};\r\n\r\nexport const Broadcast = async () => {\r\n    await axios.get(apiLinks.broadcast, {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n        },\r\n    });\r\n};\r\n\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\n\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'type', label: 'Genre Type', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst GenreTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n  \r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminGenreFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n      <TableContainer>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                > \r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n\r\n              <TableCell\r\n                className=\"admin-table-content admin-table-heading\"\r\n                align='center'\r\n                key=\"edit\"\r\n                style={{ maxWidth: 60 }}\r\n              >\r\n                Edit\r\n              </TableCell>\r\n              <TableCell\r\n                className=\"admin-table-content admin-table-heading\"\r\n                align=\"center\"\r\n                key=\"delete\"\r\n                style={{ maxWidth: 100 }}\r\n              >\r\n                Delete\r\n              </TableCell>\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map((column, idx) => {\r\n                        let value;\r\n                        if(column.id !== 'srno')\r\n                            value = row[column.id];\r\n                      return (\r\n                        <TableCell\r\n                          className=\"admin-table-content\" key={idx} align={column.align}>\r\n                          {typeof value === 'object' ? \r\n                            value.map((item) => {\r\n                              return (\r\n                                <div className=\"admin-table-array-setup\">\r\n                                  <ArrowRightIcon />\r\n                                  {item}\r\n                                </div>\r\n                              );\r\n                            })\r\n                            : column.id === 'show' ? \r\n                            <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                           : column.id === 'srno' ? (`${(rowsPerPage*page) + (index+1)}.`) : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                    <TableCell\r\n                      className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                      <Edit className=\"table-edit-delete-button\" onClick={() => props.editGenre(row.id, 'genre')} />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                      <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        className=\"custom-table-pagination\"\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default GenreTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\n\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'name', label: 'Artist Name', minWidth: 150, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst ArtistsTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminArtistFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n      <TableContainer>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                > \r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n\r\n              <TableCell\r\n                className=\"admin-table-content admin-table-heading\"\r\n                align='center'\r\n                key=\"edit\"\r\n                style={{ maxWidth: 60 }}\r\n              >\r\n                Edit\r\n              </TableCell>\r\n              <TableCell\r\n                className=\"admin-table-content admin-table-heading\"\r\n                align=\"center\"\r\n                key=\"delete\"\r\n                style={{ maxWidth: 100 }}\r\n              >\r\n                Delete\r\n              </TableCell>\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map((column, idx) => {\r\n                        let value;\r\n                        if(column.id !== 'srno')\r\n                            value = row[column.id];\r\n                      return (\r\n                        <TableCell\r\n                          className=\"admin-table-content\" key={idx} align={column.align}>\r\n                          {typeof value === 'object' ? \r\n                            value.map((item) => {\r\n                              return (\r\n                                <div className=\"admin-table-array-setup\">\r\n                                  <ArrowRightIcon />\r\n                                  {item}\r\n                                </div>\r\n                              );\r\n                            })\r\n                          : column.id === 'show' ? \r\n                            <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                           : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                    <TableCell\r\n                      className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                      <Edit className=\"table-edit-delete-button\" onClick={() => props.editArtist(row.id, \"artist\")} />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                      <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        className=\"custom-table-pagination\"\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default ArtistsTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\n\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: \"Sr. No.\", minWidth: 80, align: \"center\" },\r\n  { id: 'musicTitle', label: 'Music Name', minWidth: 170 },\r\n  { id: 'albumTitle', label: 'Album Name', minWidth: 130 },\r\n  { id: 'artists', label: 'Artists', minWidth: 70 },\r\n  { id: 'genre', label: 'Genre', minWidth: 70 },\r\n  { id: 'category', label: 'Category', minWidth: 70 },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nexport default function StickyHeadTable(props) {\r\n\r\n  const { setRows } = props;\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminMusicFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n      <TableContainer>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                > \r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n              <TableCell\r\n                className=\"admin-table-content admin-table-heading\"\r\n                align='center'\r\n                key=\"edit\"\r\n                style={{ maxWidth: 60 }}\r\n              >\r\n                Edit\r\n              </TableCell>\r\n              <TableCell\r\n                className=\"admin-table-content admin-table-heading\"\r\n                align=\"center\"\r\n                key=\"delete\"\r\n                style={{ maxWidth: 100 }}\r\n              >\r\n                Delete\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map((column, idx) => {\r\n                      let value;\r\n                      if(column.id !== 'srno')\r\n                        value = row[column.id];\r\n                      return (\r\n                        <TableCell\r\n                          className=\"admin-table-content\" key={idx} align={column.align}>\r\n                          {typeof value === 'object' ? \r\n                            value.map((item) => {\r\n                              return (\r\n                                <div key={item} className=\"admin-table-array-setup\">\r\n                                  <ArrowRightIcon />\r\n                                  {item}\r\n                                </div>\r\n                              );\r\n                            })\r\n                          : column.id === 'show' ? \r\n                            <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                           : column.id === \"srno\" ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                    <TableCell\r\n                      className=\"admin-table-content\" key={Math.floor(Math.random() * 10000 + 1)} align=\"center\" style={{ maxWidth: 60 }}>\r\n                      <Edit className=\"table-edit-delete-button\" onClick={() => props.editRow(row.id)} />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className=\"admin-table-content\" key={Math.floor(Math.random() * 10000 + 1)} align=\"center\" style={{ maxWidth: 100 }}>\r\n                      <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        className=\"custom-table-pagination\"\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\n\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'type', label: 'Category Type', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst CategoryTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminCategoryFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n      <TableContainer>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                > \r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n\r\n              <TableCell\r\n                className=\"admin-table-content admin-table-heading\"\r\n                align='center'\r\n                key=\"edit\"\r\n                style={{ maxWidth: 60 }}\r\n              >\r\n                Edit\r\n              </TableCell>\r\n              <TableCell\r\n                className=\"admin-table-content admin-table-heading\"\r\n                align=\"center\"\r\n                key=\"delete\"\r\n                style={{ maxWidth: 100 }}\r\n              >\r\n                Delete\r\n              </TableCell>\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map((column, idx) => {\r\n                        let value;\r\n                        if(column.id !== 'srno')\r\n                            value = row[column.id];\r\n                      return (\r\n                        <TableCell\r\n                          className=\"admin-table-content\" key={idx} align={column.align}>\r\n                          {typeof value === 'object' ? \r\n                            value.map((item) => {\r\n                              return (\r\n                                <div className=\"admin-table-array-setup\">\r\n                                  <ArrowRightIcon />\r\n                                  {item}\r\n                                </div>\r\n                              );\r\n                            })\r\n                          : column.id === 'show' ? \r\n                            <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                           : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                    <TableCell\r\n                      className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                      <Edit className=\"table-edit-delete-button\" onClick={() => props.editCategory(row.id, 'category')} />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                      <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        className=\"custom-table-pagination\"\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default CategoryTable;\r\n","import React from 'react';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\n\r\nimport { apiLinks } from '../../connection.config';\r\n\r\nconst EditImageUpload = (props) => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"image-preview\">\r\n                <img \r\n                    className='image-preview-img' \r\n                    src={props.imageKey && (apiLinks.getImage + props.imageKey)} \r\n                    alt={props.musicImgName} \r\n                />\r\n            </div>\r\n            <div className='image-upload-button'>\r\n                <div className='music-upload-space'>\r\n                    <span className='music-image-title'>\r\n                        <ImageIcon /> &ensp; \" {props.imageKey === \"\" ? \"Select Image\" : props.imageKey} \"\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditImageUpload;","import axios from 'axios';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport PlayCircleIcon from '@mui/icons-material/PlayCircle';\r\nimport PauseCircleIcon from '@mui/icons-material/PauseCircle';\r\nimport StopCircleIcon from '@mui/icons-material/StopCircle';\r\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\r\n\r\nimport TextInput from './textInput';\r\nimport CheckBoxInput from './checkBoxInput';\r\nimport EditImageUpload from './editImageUpload';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from \"../Notification/Notification\";\r\nimport { SpinnerRotate } from \"../spinner/spinner-grow\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n    style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n    },\r\n    },\r\n};\r\n\r\n// let audioRef;\r\n\r\nconst EditExistingMusic = (props) => {\r\n    \r\n    const audioRef = useRef();\r\n    // const rangeRef = useRef();\r\n    // const animationRef = useRef();\r\n\r\n    // const [endTime, setEndTime] = useState(0);\r\n    // const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    const [load, setLoad] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [currentPaused, setCurrentPaused] = useState(false);\r\n\r\n    const [musicKey, setMusicKey] = useState(\"\");\r\n    const [musicImgKey, setMusicImgKey] = useState(\"\");\r\n\r\n    const {genre, category, artist, musicTitle, albumTitle, editMusicWidget, editId,\r\n            handleChange,  setMusicTitle, setLoader, updateRow, fav, setFav,\r\n            setAlbumTitle, handleGenreChange, handleCategoryChange, \r\n            updateEditMusicWidget } = props;\r\n\r\n    const [genreList, setGenreList] = useState([]);\r\n    const [artistList, setArtistList] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    \r\n    const closeWidget = () => {\r\n        // cancelAnimationFrame(animationRef.current);\r\n        updateEditMusicWidget();\r\n    };\r\n\r\n    // const calculateTime = (time) => {\r\n    //     if(time !== Infinity){\r\n    //         const minutes = Math.floor(time/60);\r\n    //         const returnMinutes = minutes >= 10 ? `${minutes}` : `0${minutes}`;\r\n    \r\n    //         const seconds = Math.floor(time%60);\r\n    //         const returnSeconds = seconds >= 10 ? `${seconds}` : `0${seconds}`;\r\n    \r\n    //         return `${returnMinutes}:${returnSeconds}`;\r\n    //     }\r\n    // };\r\n\r\n    const stopSong = () => {\r\n        \r\n        audioRef.current.pause();\r\n        audioRef.current.currentTime = 0;\r\n        \r\n        setPlaying(prev => !prev);\r\n        if(currentPaused)\r\n            setCurrentPaused(prev => !prev);\r\n    };\r\n\r\n    const pauseSong = () => {\r\n        if(currentPaused)\r\n            audioRef.current.play();\r\n        else\r\n            audioRef.current.pause();\r\n        setCurrentPaused(prev => !prev);\r\n    };\r\n\r\n    const updateSongState = async () => {\r\n        setPlaying(prev => !prev);\r\n        if(playing === false){\r\n            try{\r\n                setLoad(true);\r\n                // src={musicKey && (apiLinks.getAudio + musicKey)}\r\n                // audioRef.current.src = apiLinks.getAudio + musicKey;\r\n                audioRef.current.play();\r\n                audioRef.current.onended = () => {\r\n                    setCurrentPaused(prev => !prev);\r\n                    setPlaying(prev => !prev);\r\n                }\r\n                // animationRef.current = requestAnimationFrame(whilePlaying);\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured while fetching audio\", err);\r\n                Error(err.message);\r\n            }\r\n            finally{\r\n\r\n                if(audioRef.current){\r\n                    audioRef.current.oncanplaythrough  = () => {\r\n                        console.log(audioRef.current.duration);\r\n                        \r\n                        // const secs = Math.floor(audioRef.current.duration);\r\n                        // rangeRef.current.max = secs;\r\n                        // setEndTime(secs);\r\n                        setLoad(false);\r\n                    }\r\n\r\n                    if(!(audioRef.current.paused) && audioRef.current.readyState > 0)\r\n                        setLoad(false);\r\n                }\r\n\r\n            }\r\n        }\r\n        else{\r\n            audioRef.current.pause();\r\n            // cancelAnimationFrame(animationRef.current);\r\n        }\r\n\r\n    };\r\n\r\n    const saveEditFile = async () => {\r\n\r\n        try{\r\n            setLoader(true);\r\n            \r\n            const today = new Date().toISOString();\r\n            const formData = {\r\n                \"musicTitle\": musicTitle,\r\n                \"albumTitle\": albumTitle,\r\n                \"artist\": JSON.stringify(artist),\r\n                \"genre\": JSON.stringify(genre),\r\n                \"category\": JSON.stringify(category),\r\n                \"date\": today,\r\n                \"show\": fav\r\n            };\r\n\r\n            const response = await axios.put(apiLinks.updateAdminData+editId, formData, {\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                }\r\n            });\r\n            \r\n            if(response.data.code === 200){\r\n                updateRow(response.data.data);\r\n                Success(response.data.message);\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n\r\n            // console.log(response.data);\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error Occured while updating data\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n            closeWidget();\r\n        }\r\n\r\n    };\r\n\r\n    // const changePlayerCurrentTime = () => {\r\n    //     rangeRef.current.style.setProperty('--seek-before-width', `${(Number(rangeRef.current.value) / endTime) * 100}%`);\r\n    //     setCurrentTime(rangeRef.current.value);\r\n    // };\r\n\r\n    // const changeRange = async (event) => {\r\n    //     try{\r\n    //         rangeRef.current.value = event.target.value;     \r\n    //         audioRef.current.src = apiLinks.getAudio + musicKey;\r\n    //         audioRef.current.play();\r\n    //         audioRef.current.addEventListener('canplay', () => {\r\n    //             audioRef.current.currentTime = parseInt(event.target.value);\r\n    //         });\r\n    //         changePlayerCurrentTime();\r\n    //     }\r\n    //     catch(err){\r\n    //         console.log(\"An Error Occured\", err.message);\r\n    //     }\r\n    // };\r\n\r\n    // const whilePlaying = () => {\r\n        // rangeRef.current.value = audioRef.current.currentTime;\r\n        // changePlayerCurrentTime();\r\n        // animationRef.current = requestAnimationFrame(whilePlaying);\r\n\r\n    // };\r\n\r\n    useEffect(() => {\r\n\r\n        let imgFileController = new AbortController();\r\n        let audioFileController = new AbortController();\r\n\r\n        const getImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getImageKey+editId, {\r\n                    signal: imgFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.musicImageKey);\r\n                    imgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        getImageFileKey();\r\n\r\n        const getAudioFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAudioKey+editId, {\r\n                    signal: audioFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicKey(response.data.message.musicKey);\r\n                    audioFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        getAudioFileKey();\r\n\r\n        return () => {\r\n            imgFileController?.abort();\r\n            audioFileController?.abort();\r\n        }\r\n\r\n    }, [editId]);\r\n\r\n    useEffect(() => {\r\n\r\n        let genreController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let categoryController = new AbortController();\r\n\r\n        const getGenreList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.type);\r\n                    setGenreList(data);\r\n                    genreController =  null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setGenreList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setGenreList([]);\r\n            }\r\n        };\r\n        \r\n        const getArtistList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.name);\r\n                    setArtistList(data);\r\n                    artistController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setArtistList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setArtistList([]);\r\n            }\r\n        };\r\n\r\n        const getCategoryList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.type);\r\n                    setCategoryList(data);\r\n                    categoryController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setCategoryList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setCategoryList([]);\r\n            }\r\n        };\r\n\r\n        getGenreList();\r\n        getArtistList();\r\n        getCategoryList();\r\n\r\n        return () => {\r\n            genreController?.abort();\r\n            artistController?.abort();\r\n            categoryController?.abort();\r\n        };\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Modal\r\n                isOpen={editMusicWidget}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='xl'\r\n                toggle={closeWidget}\r\n            >\r\n                <ModalHeader toggle={closeWidget}>\r\n                    <span className='modal-header-title'>\r\n                        Edit Existing Song\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <div className='music-details'>\r\n                                \r\n                                <TextInput \r\n                                    required\r\n                                    id=\"song-name\"\r\n                                    labelName=\"Song Name\"\r\n                                    label=\"Enter Song Name\"\r\n                                    value={musicTitle}\r\n                                    onChange={setMusicTitle}\r\n                                    // check={true}\r\n                                    checkedValue={fav}\r\n                                    onCheckBoxChange={setFav}\r\n                                />\r\n                                <TextInput \r\n                                    id=\"album-name\"\r\n                                    labelName=\"Album Name\"\r\n                                    label=\"Enter Album Name\"\r\n                                    value={albumTitle}\r\n                                    onChange={setAlbumTitle}\r\n                                />\r\n\r\n                                <CheckBoxInput \r\n                                    id=\"artist-name\" labelName=\"Artist Name\"\r\n                                    label=\"Select Artist\" type={artist}\r\n                                    handleChange={handleChange} MenuProps={MenuProps}\r\n                                    names={artistList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"genre-name\" labelName=\"Genre Name\"\r\n                                    label=\"Select Genre\" type={genre}\r\n                                    handleChange={handleGenreChange} MenuProps={MenuProps}\r\n                                    names={genreList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"category-name\" labelName=\"Category Name\"\r\n                                    label=\"Select Category\" type={category}\r\n                                    handleChange={handleCategoryChange} MenuProps={MenuProps}\r\n                                    names={categoryList}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n\r\n                            <Row>\r\n                                <div className='music-upload-button'>\r\n                                    <div className='music-upload-detail'>\r\n                                        <span className='music-image-title' style={{textAlign: \"center\"}}>\r\n                                            <LibraryMusicIcon /> &ensp; \" {props.musicTitle+\".mp3\"} \"\r\n                                            <span \r\n                                                className='pl-3 existing-music-play-container' \r\n                                            >\r\n                                                {\r\n                                                    playing ?\r\n                                                        (\r\n                                                            load ? \r\n                                                                <SpinnerRotate \r\n                                                                    size=\"sm\"\r\n                                                                    color=\"dark\"\r\n                                                                /> : \r\n                                                                <>\r\n                                                                    {\r\n                                                                        currentPaused ? \r\n                                                                        <PlayCircleIcon title=\"Resume Playing\" onClick={pauseSong} /> :\r\n                                                                        <PauseCircleIcon title=\"Pause Playing\" onClick={pauseSong} />\r\n                                                                    }\r\n                                                                    <StopCircleIcon title=\"Stop Playing\" onClick={stopSong} />\r\n                                                                </> \r\n                                                        )\r\n                                                        :\r\n                                                        <PlayCircleIcon title=\"Play this Song\" onClick={updateSongState} />\r\n                                                }\r\n                                            </span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className='audio-duration'>\r\n                                        <audio ref={audioRef} \r\n                                            src={musicKey && (apiLinks.getAudio + musicKey)}\r\n                                        />\r\n                                        {/* <span className='durationTimer'>{calculateTime(currentTime)}</span>\r\n                                        <input \r\n                                            type=\"range\" \r\n                                            ref={rangeRef} \r\n                                            defaultValue={0}\r\n                                            // onChange={changeRange} \r\n                                            className='admin-audio-progressBar'\r\n                                        />\r\n                                        <span className='durationTimer'>{!isNaN(endTime) && calculateTime(endTime)}</span> */}\r\n                                    </div>\r\n                                </div>\r\n                            </Row>\r\n\r\n                            <EditImageUpload \r\n                                imageKey = {musicImgKey}\r\n                                musicImgName={musicTitle}\r\n                            />\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={saveEditFile}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditExistingMusic;\r\n","import React from 'react';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\nexport const DeleteWarning = (props) => {\r\n\r\n    return (\r\n        <Modal \r\n            centered={true}\r\n            scrollable={false}\r\n            backdrop\r\n            isOpen={true}\r\n            toggle={() => props.toggle()}\r\n        >   \r\n            <ModalHeader \r\n                toggle={() => props.toggle()}\r\n            >\r\n                Warning\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                Are you sure to delete \"{props.musicTitle}\" ?\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    outline\r\n                    onClick={() => props.deleteRow()}\r\n                    color=\"success\"\r\n                >\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                        Confirm <DoneIcon /> \r\n                    </div>\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};","import React, {useEffect, useState} from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport EditImageUpload from './editImageUpload';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from '../Notification/Notification';\r\n\r\nconst EditExistingModal = (props) => {\r\n\r\n    const { editId, fav, setFav } = props;\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [name, setName] = useState(props.value || '');\r\n    const [musicImgKey, setMusicImgKey] = useState(\"\");\r\n\r\n    const setData = () => {\r\n\r\n        const data = {\r\n            id: props.editId,\r\n            type: name,\r\n            name: name,\r\n            show: fav\r\n        };\r\n        const editedRow = props.rows.filter(item => item.id !== props.editId);\r\n        props.setRows([data, ...editedRow]);\r\n\r\n    };\r\n\r\n    const addDetail = async () => {\r\n        try{\r\n            setLoader(true);\r\n            const names = name;\r\n            \r\n            const formData = {\r\n                'type': names,\r\n                'name': names,\r\n                'show': fav\r\n            };\r\n\r\n            let response = {};\r\n\r\n            if(props.id === '1'){\r\n                response = await axios.put(apiLinks.updateAdminArtist+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === '2'){\r\n                response = await axios.put(apiLinks.updateAdminGenre+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                response = await axios.put(apiLinks.updateAdminCategory+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n\r\n            if(Object.keys(response).length === 0 && response.constructor === Object){\r\n                const error = new Error();\r\n                error.message = \"Something went wrong, could add data now\";\r\n                throw error;\r\n            }\r\n            else{\r\n                if(response.data.code === 200){\r\n                    Success(response.data.message);\r\n                    setData();\r\n                    \r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n                props.toggle(false);\r\n            }\r\n        \r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const removeDetail = () => {\r\n        props.toggle(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let imgFileController = new AbortController();\r\n\r\n        const getImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getArtistImgKey+editId, {\r\n                    signal: imgFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.artistImgKey);\r\n                    imgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n        \r\n        if(props.id === '1'){\r\n            getImageFileKey();\r\n        }\r\n        \r\n        return () => imgFileController?.abort();\r\n\r\n    }, [editId, props.id]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            \r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n\r\n            <Modal\r\n                isOpen={true}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='lg'\r\n                toggle={() => props.toggle(false)}\r\n            >\r\n                <ModalHeader toggle={() => props.toggle(false)}>\r\n                    <span className='modal-header-title'>\r\n                        {props.header}\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {props.id === '1' ? \r\n                        <EditImageUpload \r\n                            imageKey = {musicImgKey}\r\n                            musicImgName={`${name}`}\r\n                        /> : \r\n                        <React.Fragment />\r\n                    }\r\n                    <TextInput \r\n                        id={props.id}\r\n                        required\r\n                        labelName={props.id === '1' ? \"Edit Name\" : \"Edit Type\"}\r\n                        label={props.id === '1' ? \"Enter Artist Name\" : \"Enter Type\"}\r\n                        value={name}\r\n                        onChange={setName}\r\n                        // check={true}\r\n                        checkedValue={fav}\r\n                        onCheckBoxChange={setFav}\r\n                    />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={addDetail}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeDetail}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditExistingModal;\r\n","import React, {useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Navbar, NavItem, Nav, NavbarToggler, NavbarBrand, NavLink,\r\n        Offcanvas, OffcanvasHeader, OffcanvasBody, Container } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faMusic, faBell, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./admin-navigation.css\";\r\n\r\nconst AdminNavigation = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const updateNavClick = () => {\r\n        setIsOpen(prev => !prev);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className=\"mb-5 admin-Navigation-container\">\r\n                <Navbar \r\n                    color=\"dark\"\r\n                    dark\r\n                    expand=\"true\"\r\n                    sticky=\"true\"\r\n                    className=\"one-row\"\r\n                >\r\n                    <NavbarBrand onClick={() => navigate('/')} className=\"me-auto\">\r\n                        <div className=\"navbarHead\">\r\n                            SANGEET\r\n                        </div>\r\n                    </NavbarBrand>\r\n                    <NavbarToggler className=\"me-2\" onClick={updateNavClick} />\r\n                    \r\n                    <Offcanvas isOpen={isOpen} className=\"offcanvas-tag\" scrollable={false}\r\n                        toggle={updateNavClick} direction=\"end\">\r\n                        <OffcanvasHeader toggle={updateNavClick}>\r\n\r\n                        </OffcanvasHeader>\r\n                        <OffcanvasBody className=\"navbar-menu-links\">\r\n                            <Nav className=\"ms-auto\" navbar>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate('/')}>\r\n                                        <FontAwesomeIcon icon={faHome} /> \r\n                                            <span className=\"extra-spacing\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faMusic} /> \r\n                                            <span className=\"extra-spacing\" /> Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faBell} /> \r\n                                            <span className=\"extra-spacing\" /> Notifications\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faSignInAlt} /> \r\n                                            <span className=\"extra-spacing\" /> Login / SignUp \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </OffcanvasBody>\r\n                    </Offcanvas>\r\n                </Navbar>\r\n            </div>\r\n            <Container className=\"pt-5 pb-5\"/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminNavigation;","import axios from 'axios';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport {Container, Nav, NavItem, NavLink, TabContent, TabPane, Row, Col} from 'reactstrap';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { Backdrop } from '@mui/material';\r\nimport SpeedDial from '@mui/material/SpeedDial';\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport DomainIcon from '@mui/icons-material/Domain';\r\nimport CellTowerIcon from '@mui/icons-material/CellTower';\r\n\r\nimport AddNewModal from '../components/Admin/addNewModal';\r\nimport NewMusicAdd from '../components/Admin/newMusicAdd';\r\nimport * as serviceWorker from \"../client/index\";\r\n\r\nimport GenreTable from '../components/Tables/Genre-table';\r\nimport ArtistsTable from '../components/Tables/artists-table';\r\nimport StickyHeadTable from \"../components/Tables/music-table\";\r\nimport CategoryTable from '../components/Tables/category-table';\r\n\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport EditExistingMusic from '../components/Admin/editExistingMusic';\r\nimport { DeleteWarning } from '../components/Warning/Warning';\r\nimport { apiLinks } from '../connection.config';\r\nimport EditExistingModal from '../components/Admin/editExistingModal';\r\nimport { Success, Error } from '../components/Notification/Notification';\r\nimport AdminNavigation from '../components/navigation/Navigation-bar/admin-navigation';\r\n\r\n\r\nimport \"./admin.css\";\r\n\r\nlet genreRows = [], artistRows = [], categoryRows = [], musicRows = [];\r\n\r\nconst Admin = () => {\r\n    const hiddenFileInput = useRef(null);\r\n    const hiddenMusicInput = useRef(null);\r\n    const audioDurationRef = useRef(null);\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [tabId, setTabId] = useState(1);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    \r\n    const [rows, setRows] = useState([]);\r\n\r\n    const [catGenValue, setCatGenValue] = useState('');\r\n    const [editId, setEditId] = useState(0);\r\n    const [modalId, setModalId] = useState('0');\r\n    const [header, setHeader] = useState(\"\");\r\n    const [warning, setWarning] = useState(false);\r\n    const [deleteId, setDeleteId] = useState(0);\r\n    const [deleteItemName, setDeleteItemName] = useState('');\r\n\r\n    const [genre, setGenre] = useState([]);\r\n    const [artist, setArtist] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n\r\n    const [addMusicWidget, setAddMusicWidget] = useState(false);\r\n    const [addGenreWidget, setAddGenreWidget] = useState(false);\r\n    const [addArtistWidget, setAddArtistWidget] = useState(false);\r\n    const [addCategoryWidget, setAddCategoryWidget] = useState(false);\r\n    const [editMusicWidget, setEditMusicWidget] = useState(false);\r\n    const [editExistingWidget, setEditExistingWidget] = useState(false);\r\n    \r\n    const [fav, setFav] = useState(false);\r\n    const [music, setMusic] = useState({});\r\n    const [musicName, setMusicName] = useState('');\r\n    const [musicDuration, setMusicDuration] = useState(0);\r\n\r\n    const [musicTitle, setMusicTitle] = useState('');\r\n    const [albumTitle, setAlbumTitle] = useState('');\r\n    \r\n    const [musicImg, setMusicImg] = useState({});\r\n    const [musicImgName, setMusicImgName] = useState(\"\");\r\n    const [musicImgPath, setMusicImgPath] = useState('/assets/images/default-music-upload-image.png');\r\n\r\n    const updateTabId = (id) => setTabId(id);\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    \r\n    const updateAddMusicWidget = () => {\r\n        removeMusicDetails();\r\n        setAddMusicWidget(prev => !prev);\r\n    }\r\n    const updateEditMusicWidget = () => setEditMusicWidget(prev => !prev);\r\n    const updateAddArtistWidget = () => setAddArtistWidget(prev => !prev);\r\n    const updateAddGenreWidget = () => setAddGenreWidget(prev => !prev);\r\n    const updateAddCategoryWidget = () => setAddCategoryWidget(prev => !prev);\r\n\r\n    const defaultProps = {\r\n        options: rows,\r\n        getOptionLabel: (option) => option.musicTitle || option.name || option.type,\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n        let musicController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let genreController = new AbortController();\r\n        let categoryController = new AbortController();\r\n        \r\n        const getMusicData = async () => {\r\n    \r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllAudio, {\r\n                    signal: musicController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  musicRows = response.data.message;\r\n                  musicController = null;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getArtistsData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  artistController = null;\r\n                  artistRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getGenreData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  genreController = null;\r\n                  genreRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getCategoryData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  categoryRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        if(tabId === 1) \r\n            getMusicData();\r\n        else if(tabId === 2) \r\n            getArtistsData();\r\n        else if(tabId === 3) \r\n            getGenreData();\r\n        else \r\n            getCategoryData();\r\n\r\n        return () => {\r\n            musicController?.abort();\r\n            artistController?.abort();\r\n            genreController?.abort();\r\n            categoryController?.abort();\r\n            setLoader(false);\r\n        }\r\n    \r\n    }, [tabId]);\r\n\r\n    const getSearchedAutoCompleteRow = (value) => {\r\n        if(value && value.id){\r\n            let searchedData = [];\r\n            if(tabId === 1){\r\n                searchedData = musicRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 2){\r\n                searchedData = artistRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 3){\r\n                searchedData = genreRows.filter(row => row.id === value.id);\r\n            }\r\n            else{\r\n                searchedData = categoryRows.filter(row => row.id === value.id);\r\n            }\r\n            setRows(searchedData);\r\n        }\r\n        else{\r\n            if(tabId === 1){\r\n                setRows(musicRows);\r\n            }\r\n            else if(tabId === 2){\r\n                setRows(artistRows)\r\n            }\r\n            else if(tabId === 3){\r\n                setRows(genreRows);\r\n            }\r\n            else{\r\n                setRows(categoryRows);\r\n            }\r\n        }\r\n    };\r\n\r\n    const getSearchedRow = (event) => {\r\n        if(event.target.value.length){\r\n            const data = event.target.value;\r\n            let searchedData = [];\r\n            if(tabId === 1){\r\n                searchedData = musicRows.filter(row => row.musicTitle.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 2){\r\n                searchedData = artistRows.filter(row => row.name.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 3){\r\n                searchedData = genreRows.filter(row => row.type.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else{\r\n                searchedData = categoryRows.filter(row => row.type.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            setRows(searchedData);\r\n        }\r\n        else{\r\n            if(tabId === 1){\r\n                setRows(musicRows);\r\n            }\r\n            else if(tabId === 2){\r\n                setRows(artistRows)\r\n            }\r\n            else if(tabId === 3){\r\n                setRows(genreRows);\r\n            }\r\n            else{\r\n                setRows(categoryRows);\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateRow = (data) => {\r\n        const rowData = rows.map(row => {\r\n            if(row.id === data.id){\r\n                return data;\r\n            }\r\n            else{\r\n                return row;\r\n            }\r\n        });\r\n\r\n        setRows(rowData);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        \r\n        setArtist(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleGenreChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setGenre(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleCategoryChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setCategory(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n    \r\n    const handleClick = (event) => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n\r\n    const handleMusicClick = (event) => {\r\n        hiddenMusicInput.current.click();\r\n    };\r\n    \r\n    const uploadMusicImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setMusicImg(event.target.files);\r\n            setMusicImgName(event.target.files[0].name);\r\n            setMusicImgPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n    \r\n    const uploadMusic = (event) => {\r\n        if(event.target.files[0]){\r\n            window.URL = window.URL || window.webkitURL;\r\n            audioDurationRef.current = document.createElement(\"audio\");\r\n            audioDurationRef.current.preload = 'metadata';\r\n\r\n            audioDurationRef.current.onloadedmetadata = () => {\r\n                window.URL.revokeObjectURL(audioDurationRef.current.src);\r\n                const duration = Math.floor(audioDurationRef.current.duration);\r\n                setMusicDuration(duration);\r\n            };\r\n\r\n            audioDurationRef.current.src = URL.createObjectURL(event.target.files[0]);\r\n\r\n            setMusic(event.target.files);\r\n            setMusicName(event.target.files[0].name);\r\n        }\r\n    };\r\n    \r\n    const removeSelectedSong = () => {\r\n        setMusic({});\r\n        setMusicName(\"\");\r\n        audioDurationRef?.current?.remove();\r\n        audioDurationRef.current = null;\r\n        setMusicDuration(0);\r\n    };\r\n    \r\n    const removeSelectedImage = () => {\r\n        setMusicImg({});\r\n        setMusicImgName('');\r\n        setMusicImgPath('/assets/images/default-music-upload-image.png');\r\n    };\r\n    \r\n    const removeMusicDetails = () => {\r\n        setFav(false);\r\n\r\n        setGenre([]);\r\n        setArtist([]);\r\n        setCategory([]);\r\n\r\n        removeSelectedSong();\r\n        \r\n        setMusicTitle(\"\");\r\n        setAlbumTitle(\"\");\r\n\r\n        removeSelectedImage();\r\n    };\r\n\r\n    const saveUploadMusic = async () => {\r\n        setLoader(true);\r\n        const today = new Date().toISOString();\r\n\r\n        const formData = new FormData();\r\n        formData.append('musicImageFile', musicImg[0]);\r\n        formData.append('musicFile', music[0]);\r\n        formData.append('musicTitle', musicTitle);\r\n        formData.append('albumTitle', albumTitle);\r\n        formData.append(\"artist\", artist);\r\n        formData.append(\"category\", category);\r\n        formData.append(\"genre\", genre);\r\n        formData.append(\"date\", today);\r\n        formData.append(\"show\", fav);\r\n        formData.append(\"duration\", musicDuration);\r\n\r\n        try{\r\n            const response = await axios.post(apiLinks.postSong, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            if(response.data.code === 200){\r\n                if(tabId === 1){\r\n                    musicRows.push(...(response.data.rowData));\r\n                    // setRows(prevData => [...prevData, ...(response.data.rowData)]);\r\n                }\r\n                else{\r\n                    updateTabId(1);\r\n                }\r\n                \r\n                removeMusicDetails();\r\n                setAddMusicWidget(false);\r\n                Success(\"Uploaded Successfully\");\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error Occured - \", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const editRow = (id) => {\r\n        const editableRow = rows.filter(entry => entry.id === id);\r\n        // console.log(editableRow);\r\n\r\n        setFav(editableRow[0].show);\r\n        setEditId(id);\r\n        setGenre(editableRow[0].genre);\r\n        setArtist(editableRow[0].artists);\r\n        setCategory(editableRow[0].category);\r\n        setMusicTitle(editableRow[0].musicTitle);\r\n        setAlbumTitle(editableRow[0].albumTitle);\r\n        setEditMusicWidget(true);\r\n    };\r\n\r\n    const editArtistGenreCategory = (id, domain=\"\") => {\r\n\r\n        const editTableRow = rows.filter(entry => entry.id === id);\r\n        // console.log(editTableRow);\r\n\r\n        if(editTableRow.length){\r\n            setFav(editTableRow[0].show);\r\n            setEditId(id);\r\n            setEditExistingWidget(prev => !prev);\r\n            setCatGenValue(editTableRow[0].name || editTableRow[0].type);\r\n\r\n            if(domain === \"artist\"){\r\n                setHeader('Edit Artist');\r\n                setModalId('1');\r\n            }\r\n            else if(domain === 'genre'){\r\n                setHeader(\"Edit Genre\");\r\n                setModalId('2');\r\n            }\r\n            else if(domain === 'category'){\r\n                setHeader(\"Edit Category\");\r\n                setModalId('3');\r\n            }\r\n            else{\r\n                Error(\"Domain Not Valid for Edit\");\r\n            }\r\n        }\r\n        else{\r\n            Error(\"No such row id found\");\r\n        }\r\n    };\r\n\r\n    const toggleWarning = (id = 0) => {\r\n        const name = rows.filter(row => row.id === id);\r\n\r\n        if(id && tabId === 1){\r\n            setDeleteItemName(name[0].musicTitle);\r\n        }\r\n        else if(id && tabId === 2){\r\n            setDeleteItemName(name[0].name);\r\n        }\r\n        else if(id && tabId === 3){\r\n            setDeleteItemName(name[0].type);\r\n        }\r\n        \r\n        else if(id && tabId === 4){\r\n            setDeleteItemName(name[0].type);\r\n        }\r\n        else{\r\n            setDeleteItemName(\"\");\r\n        }\r\n        setDeleteId(id);\r\n        setWarning(prev => !prev);\r\n    };\r\n\r\n    const deleteRow = async () => {\r\n        const id = deleteId;\r\n\r\n        try{\r\n            setLoader(true);\r\n            let response = {};\r\n            if(tabId === 1){\r\n                response = await axios.delete(apiLinks.deleteMusic+id);\r\n            }\r\n            else if(tabId === 2){\r\n                response = await axios.delete(apiLinks.deleteArtist+id);\r\n            }\r\n            else if(tabId === 3){\r\n                response = await axios.delete(apiLinks.deleteGenre+id);\r\n            }\r\n            else if(tabId === 4){\r\n                response = await axios.delete(apiLinks.deleteCategory+id);\r\n            }\r\n\r\n            if(response.data && response.data.code === 200){\r\n                setRows(prev => prev.filter(row => row.id !== id));\r\n                Success(response.data.message);\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error occured while deleting\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n            toggleWarning();\r\n        }\r\n    };\r\n\r\n    const broadCast = () => {\r\n        serviceWorker.Broadcast();\r\n    };\r\n    \r\n    const actions = [\r\n        { icon: <MusicNoteIcon />, name: 'Add Song', click: updateAddMusicWidget },\r\n        { icon: <PersonAddIcon />, name: 'Add Artist', click: updateAddArtistWidget },\r\n        { icon: <DomainIcon />, name: 'Add Genre', click: updateAddGenreWidget },\r\n        { icon: <CategoryIcon />, name: 'Add Category', click: updateAddCategoryWidget },\r\n        { icon: <CellTowerIcon />, name: \"BroadCast\", click: broadCast }, \r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='admin-page'>\r\n                {loader ? \r\n                    <SpinnerGrow color=\"success\" />: \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    warning ?\r\n                    <DeleteWarning \r\n                        musicTitle={deleteItemName}\r\n                        toggle={toggleWarning}\r\n                        deleteRow={deleteRow}\r\n                    />: \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    editMusicWidget ? \r\n                    <EditExistingMusic\r\n                        fav={fav}\r\n                        genre={genre}\r\n                        artist={artist}\r\n                        editId={editId}\r\n                        loader={loader}\r\n                        category={category}\r\n                        musicTitle={musicTitle}\r\n                        albumTitle={albumTitle}\r\n                        editMusicWidget={editMusicWidget}\r\n\r\n                        setFav={setFav}\r\n                        updateRow={updateRow}\r\n                        setLoader={setLoader}\r\n                        handleChange={handleChange}\r\n                        setMusicTitle={setMusicTitle}\r\n                        setAlbumTitle={setAlbumTitle}\r\n                        handleGenreChange={handleGenreChange}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        updateEditMusicWidget={updateEditMusicWidget}\r\n\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    addMusicWidget ? \r\n                    <NewMusicAdd \r\n                        fav={fav}\r\n                        genre={genre}\r\n                        artist={artist}\r\n                        category={category}\r\n                        musicName={musicName}\r\n                        musicTitle={musicTitle}\r\n                        albumTitle={albumTitle}\r\n                        musicImgPath={musicImgPath}\r\n                        musicImgName={musicImgName}\r\n                        musicDuration={musicDuration}\r\n                        addMusicWidget={addMusicWidget}\r\n                        hiddenFileInput={hiddenFileInput}\r\n                        hiddenMusicInput={hiddenMusicInput}\r\n\r\n                        setFav={setFav}\r\n                        uploadMusic={uploadMusic}\r\n                        handleClick={handleClick}\r\n                        handleChange={handleChange}\r\n                        setMusicTitle={setMusicTitle}\r\n                        setAlbumTitle={setAlbumTitle}\r\n                        saveUploadMusic={saveUploadMusic}\r\n                        handleMusicClick={handleMusicClick}\r\n                        uploadMusicImage={uploadMusicImage}\r\n                        handleGenreChange={handleGenreChange}\r\n                        removeMusicDetails={removeMusicDetails}\r\n                        removeSelectedSong={removeSelectedSong}\r\n                        removeSelectedImage={removeSelectedImage}\r\n                        updateAddMusicWidget={updateAddMusicWidget}\r\n                        handleCategoryChange={handleCategoryChange}\r\n\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {editExistingWidget ? \r\n                    <EditExistingModal \r\n                        fav={fav}\r\n                        rows={rows}\r\n                        id={modalId}\r\n                        editId={editId}\r\n                        header={header}\r\n                        value={catGenValue}\r\n\r\n                        setFav={setFav}\r\n                        setRows={setRows}\r\n                        toggle={setEditExistingWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n\r\n                {addArtistWidget ? \r\n                    <AddNewModal \r\n                        header=\"Add New Artist\"\r\n                        toggle={setAddArtistWidget}\r\n                        setRows={setRows}\r\n                        artistRows={artistRows}\r\n                        tabId={tabId}\r\n                        updateTabId={updateTabId}\r\n                        id='1'\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n                \r\n                {addGenreWidget ? \r\n                    <AddNewModal \r\n                        header=\"Add New Genre\"\r\n                        toggle={setAddGenreWidget}\r\n                        setRows={setRows}\r\n                        genreRows={genreRows}\r\n                        tabId={tabId}\r\n                        updateTabId={updateTabId}\r\n                        id='2'\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n                \r\n                {addCategoryWidget ? \r\n                    <AddNewModal \r\n                        header=\"Add New Category\"\r\n                        toggle={setAddCategoryWidget}\r\n                        setRows={setRows}\r\n                        categoryRows={categoryRows}\r\n                        tabId={tabId}\r\n                        updateTabId={updateTabId}\r\n                        id='3'\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n\r\n                <AdminNavigation />\r\n\r\n                {/* <Container fluid>\r\n                     */}\r\n                    <Box className='add-button-speed-dial' sx={{ height: 300, transform: 'translateZ(0px)', flexGrow: 1 }}>\r\n                        <Backdrop open={open} />\r\n                        <SpeedDial\r\n                            ariaLabel=\"SpeedDial tooltip example\"\r\n                            sx={{ position: 'absolute', bottom: 16, right: 16 }}\r\n                            icon={<SpeedDialIcon />}\r\n                            onClose={handleClose}\r\n                            onOpen={handleOpen}\r\n                            open={open}\r\n                            className=\"speed-dial-custom\"\r\n                        >\r\n                            {actions.map((action, index) => (\r\n                                <SpeedDialAction\r\n                                    key={action.name}\r\n                                    icon={action.icon}\r\n                                    tooltipTitle={action.name}\r\n                                    tooltipOpen\r\n                                    onClick={action.click}\r\n                                />\r\n                            ))}\r\n                        </SpeedDial>\r\n                    </Box>\r\n\r\n                {/* </Container> */}\r\n                \r\n                <Container className='mb-3'>\r\n                    <div>\r\n                        <div className=\"d-flex navtabs-autocomplete\">\r\n                            <Nav tabs className=\"align-bottom-flex\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 1 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(1)}\r\n                                    >\r\n                                        Music Data\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 2 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(2)}\r\n                                    >\r\n                                        Artists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 3 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(3)}\r\n                                    >\r\n                                        Genre\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 4 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(4)}\r\n                                    >\r\n                                        Category\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Autocomplete\r\n                                {...defaultProps}\r\n                                id=\"auto-complete\"\r\n                                onChange={(evt, val) => getSearchedAutoCompleteRow(val)}\r\n                                autoComplete\r\n                                includeInputInList\r\n                                renderInput={(params) => (\r\n                                <TextField {...params} label={  tabId === 1 ? \"Search Music\" : \r\n                                                                tabId === 2 ? \"Search Artist\" : \r\n                                                                tabId === 3 ? \"Search Genre\" : \r\n                                                                \"Search Category\"} \r\n                                    className=\"input-div\" variant=\"standard\" \r\n                                    onChange={getSearchedRow}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <TabContent activeTab={tabId}>\r\n                            <TabPane tabId={1}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <StickyHeadTable \r\n                                            id=\"table\"\r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            editRow={editRow}\r\n                                            toggleWarning={toggleWarning}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={2}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ArtistsTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editArtist={editArtistGenreCategory}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={3}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <GenreTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editGenre={editArtistGenreCategory}\r\n                                        /> \r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={4}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <CategoryTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editCategory={editArtistGenreCategory}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane>  \r\n                        </TabContent>\r\n                    </div>\r\n                </Container>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n","// for song list\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useContext } from \"react\";\r\nimport PlayCircle from \"@mui/icons-material/PlayCircle\";\r\nimport PauseCircle from \"@mui/icons-material/PauseCircle\";\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\n\r\nimport { CalculateTimeContext, SongList } from \"../../pages/Artist\";\r\nimport { PlayerContext, PlayPause, Playing, LoadAudio } from \"../../App\";\r\n\r\nimport \"./body.css\";\r\n\r\nconst Body = (props) => {\r\n    \r\n    const paused = useContext(Playing);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentPlayer = useContext(PlayerContext);\r\n    const calculateTimeContext = useContext(CalculateTimeContext);\r\n\r\n    const [playId, setPlayId] = useState(0);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const updatePlayId = (value) => {\r\n        setPlayId(value);\r\n    };\r\n\r\n    const updatePlayPause = (event) => {\r\n        const e = {\r\n            ...event, \r\n            code: \"Space\",\r\n            preventDefault: () => {}\r\n        };\r\n\r\n        playPauseState(e);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container> \r\n                <div className=\"song-list\">\r\n                    {\r\n                        songList.map((song, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"table-row\"\r\n                                        key={song.id}\r\n                                        style={currentPlayer.id && currentPlayer.id === song.id ? {color: \"#eee\"}: null}\r\n                                        onMouseEnter={(e) => {updatePlayId(song.id)}}\r\n                                        onMouseLeave={(e) => {updatePlayId(0)}}\r\n                                    >\r\n                                        <div className=\"srno-title\">\r\n                                            <div className=\"srno\" onClick={e => loadAudio(songList, song, e)}>\r\n                                                {\r\n                                                    currentPlayer.id && currentPlayer.id === song.id ?\r\n                                                    <span\r\n                                                        onMouseEnter={() => setPlaying(true)}\r\n                                                        onMouseLeave={() => setPlaying(false)}\r\n                                                    > \r\n                                                        {\r\n                                                            !paused ?\r\n                                                                <PlayCircle \r\n                                                                    onClick = {e => updatePlayPause(e)}\r\n                                                                /> :\r\n                                                                playing ?\r\n                                                                    <PauseCircle \r\n                                                                        onClick = {e => updatePlayPause(e)}\r\n                                                                    />:\r\n                                                                    <EqualizerIcon />\r\n                                                        }\r\n                                                    </span>:\r\n                                                    playId === song.id ? \r\n                                                        <PlayCircle /> :\r\n                                                        index+1\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"title\">\r\n                                                <div className=\"music-title\">\r\n                                                    {song.musicTitle}\r\n                                                </div>\r\n                                                <div className=\"d-flex custom-artists\">\r\n                                                    {\r\n                                                        song.artists?.map((art, index) => {\r\n                                                            return props.artist !== art ?(\r\n                                                                <div className=\"\" key={index}>\r\n                                                                    <span className=\"song-list-artist\">\r\n                                                                        <Link to={`/artist/${art}`}>\r\n                                                                                {art}\r\n                                                                        </Link>\r\n                                                                    </span>\r\n                                                                    <span className=\"song-list-artist-separation\">\r\n                                                                        {song.artists.length - 1 > index ? \",\": \"\"}&nbsp;\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            ) : <React.Fragment key={index} />\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"duration\">\r\n                                                {song.duration ? calculateTimeContext(song.duration) : '--:--'}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        index < songList.length - 1 ? (\r\n                                            <div className=\"custom-bottom-border\" key={index} />\r\n                                        ) : <React.Fragment />\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;","import { Container } from \"reactstrap\";\r\nimport React, { useContext } from \"react\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\n\r\nimport { apiLinks } from \"../../connection.config\";\r\nimport { CalculateTimeContext, Duration } from \"../../pages/Artist\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = (props) => {\r\n    const totalDuration = useContext(Duration);\r\n    const calculateTotalDuration = useContext(CalculateTimeContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                <div className=\"album-container\">\r\n                    <div className=\"album-image-container\">\r\n                        <img \r\n                            className=\"album-image\"\r\n                            src={apiLinks.getArtistImgFromName + props.artist} \r\n                            alt={props.artist} />\r\n                    </div>\r\n                    <div className=\"album-details\">\r\n                        <div className=\"album-heading\">\r\n                            Artist\r\n                        </div>\r\n                        <div className=\"album-name\">\r\n                            {props.artist}\r\n                        </div>\r\n                        <div className=\"album-artists\">\r\n                            Duration&nbsp;<CircleIcon style={{ fontSize: '.5rem' }} />&nbsp;{ calculateTotalDuration(totalDuration) }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","// for related artists\r\nimport Slider from 'react-slick';\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { AlbumList } from '../../pages/Artist';\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./footer.css\";\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n          breakpoint: 1200,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 991,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Footer = (props) => {\r\n\r\n    const albumList = useContext(AlbumList);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Container key=\"artist-container\" className=\"mt-5\">\r\n                { albumList.length ? \r\n                    <Container className=\"slider-container\">\r\n                        <h2 className=\"category-list-heading\" title=\"Artists\">Artist's Album</h2>\r\n                        <Slider {...settings}>\r\n                        { albumList.map((album, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container\">\r\n                                        <img \r\n                                            src={apiLinks.getImage + album.musicImageKey} \r\n                                            alt={album.albumTitle} \r\n                                            className=\"artist-card-image\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className=\"pt-3 pb-3 artist-name\" title={album.albumTitle}>\r\n                                                <Link to={`/album/${album.albumTitle}`} className='artist-name'>\r\n                                                    {album.albumTitle}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3\" fluid />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport Body from \"../components/Artist/body\";\r\nimport Header from \"../components/Artist/header\";\r\nimport Footer from \"../components/Artist/footer\";\r\nimport { apiLinks } from \"../connection.config\";\r\nimport { Error } from \"../components/Notification/Notification\";\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\n\r\nimport \"./artist.css\";\r\n\r\nexport const SongList = React.createContext();\r\nexport const Duration = React.createContext();\r\nexport const AlbumList = React.createContext();\r\nexport const CalculateTimeContext = React.createContext();\r\n\r\nconst Artist = (props) => {\r\n    const params = useParams();\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [songList, setSongList] = useState([]);\r\n    const [albumList, setAlbumList] = useState([]);\r\n    const [totalDuration, setTotalDuration] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        const getArtistDetails = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getArtistDetails + params.artistName, {\r\n                    headers: {\r\n                        'content-type': \"application/json\"\r\n                    },\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    // console.log(response.data.message);\r\n                    const duration = response.data.message.reduce((partial_sum, a) => partial_sum + a.duration, 0);\r\n                    const album = [];\r\n                    response.data.message.map(item => album.includes(item.albumTitle) ? null : album.push(item));\r\n\r\n                    setAlbumList(album);\r\n                    setTotalDuration(duration);\r\n                    setSongList(response.data.message);\r\n                    abortController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                Error(err.message);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        getArtistDetails();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [params]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <CalculateTimeContext.Provider value={calculateSongTime}>\r\n                <SongList.Provider value={songList}>\r\n                    <Duration.Provider value={totalDuration}>\r\n                        <AlbumList.Provider value={albumList}>\r\n                            <Header artist={params.artistName} />\r\n                            <Body artist={params.artistName} />\r\n                            <Footer artist={params.artistName} />\r\n                        </AlbumList.Provider>\r\n                    </Duration.Provider>\r\n                </SongList.Provider>\r\n            </CalculateTimeContext.Provider>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Artist;\r\n","import React, { useState, useRef, useEffect, useCallback, \r\n        forwardRef, useImperativeHandle, useContext } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport { Error } from '../Notification/Notification';\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\r\nimport { SpinnerRotate } from \"../spinner/spinner-grow\";\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious';\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\r\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\r\nimport VolumeDownIcon from '@mui/icons-material/VolumeDown';\r\n\r\nimport { LoadAudio } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst MusicPlayer = forwardRef((props, ref) => {\r\n    const audioRef = useRef(null);\r\n    const borderRef = useRef(null);\r\n    const volumeRef = useRef(null);\r\n\r\n    const loadAudio = useContext(LoadAudio);\r\n\r\n    const { playing, setPlaying } = props;\r\n\r\n    const [style, setStyle] = useState({display: 'none'});\r\n\r\n    // const [playing, setPlaying] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [playlist, setPlaylist] = useState([]);\r\n    const [currentSong, setCurrentSong] = useState({});\r\n    const [currentSongIdx, setCurrentSongIdx] = useState(0);\r\n\r\n    const [volume, setVolume] = useState(1.0);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [endTime, setEndTime] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    const updateBorderRef = useCallback(() => {\r\n        setCurrentTime(audioRef.current.currentTime);\r\n        const percent = (audioRef.current.currentTime / endTime * 100);\r\n        borderRef.current.style.width = `${endTime === null ? 100 : percent}%`;\r\n\r\n    }, [endTime]);\r\n\r\n    const playPauseSong = () => {\r\n        if(playing){\r\n            audioRef.current.pause();\r\n        }\r\n        else{\r\n            audioRef.current.play();\r\n        }\r\n        setPlaying(prev => !prev);\r\n    };\r\n\r\n    const prevSong = useCallback(() => {\r\n        if(currentSongIdx > 0){\r\n            props.setCurrentSong(playlist[currentSongIdx - 1]);\r\n        }\r\n    }, [props, currentSongIdx, playlist]);\r\n\r\n    const nextSong = useCallback(() => {\r\n        if(currentSongIdx < (playlist.length - 1)){\r\n            audioRef.current.pause(); \r\n            props.setCurrentSong(playlist[currentSongIdx + 1]);\r\n        }\r\n    }, [currentSongIdx, playlist, props]);\r\n\r\n    const volumeInc = () => {\r\n        if(volume < 1){\r\n            const vol = parseFloat(volume.toFixed(1)) + 0.1;\r\n            volumeRef.current.value = vol;\r\n            audioRef.current.volume = vol;\r\n            setVolume(vol);\r\n        }\r\n    };\r\n\r\n    const volumeDec = () => {\r\n        if(volume > 0){\r\n            const vol = parseFloat(volume.toFixed(1)) - 0.1;\r\n            volumeRef.current.value = vol;\r\n            audioRef.current.volume = vol;\r\n            setVolume(vol);\r\n        }\r\n    };\r\n\r\n    const handleMute = (vol) => {\r\n        setVolume(vol);\r\n        audioRef.current.volume = vol;\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        handlePlayPause(){\r\n            playPauseSong();\r\n        },\r\n        handleNextSong(){\r\n            nextSong();\r\n        },\r\n        handlePrevSong(){\r\n            prevSong();\r\n        },\r\n        handleVolumeInc(){\r\n            volumeInc();\r\n        },\r\n        handleVolumeDec(){\r\n            volumeDec();\r\n        },\r\n        }),\r\n    )\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n\r\n        const loadMusic = async () => {\r\n            try{\r\n                setLoading(true);\r\n                audioRef.current.src = await (apiLinks.getAudio + props.currentSong.musicKey);\r\n                const playPromise = audioRef.current.play();\r\n                audioRef.current.volume = volume;\r\n\r\n                setEndTime(props.currentSong.duration);\r\n\r\n                if (playPromise !== undefined) {\r\n                    playPromise.then(_ => {\r\n                      abortController = null;\r\n                    })\r\n                    .catch(error => {\r\n                      setPlaying(false);\r\n                    });\r\n                }\r\n\r\n                const currentSongIndex = props.playlist?.findIndex(obj => obj.id === props.currentSong?.id);\r\n                setCurrentSongIdx(currentSongIndex);\r\n\r\n                audioRef.current.onended = () => {\r\n                    if(currentSongIndex < props.playlist?.length - 1){\r\n                        loadAudio(props.playlist, props.playlist[currentSongIndex + 1], null);\r\n                    }\r\n                    else{\r\n                        loadAudio([], {}, null);\r\n                    }\r\n                    setPlaying(false);\r\n                };\r\n            }\r\n            catch(err){\r\n                console.log(\"An Error occured while loading music\", err);\r\n                Error(err.message);\r\n            }\r\n            finally{\r\n                audioRef.current.oncanplaythrough = () => {\r\n                    setLoading(false);\r\n                    setPlaying(true);\r\n                };\r\n                \r\n                if(!(audioRef.current.paused) && audioRef.current.readyState > 0)\r\n                setLoading(false);\r\n            }\r\n        };\r\n        \r\n        if(props.currentSong?.musicTitle !== currentSong.musicTitle){\r\n            setPlaylist(props.playlist);\r\n            setCurrentSong(props.currentSong);\r\n            loadMusic();\r\n        }\r\n\r\n        return () => {\r\n            abortController?.abort();\r\n        }\r\n        \r\n    }, \r\n    [   props.currentSong, props.playlist, props, currentSongIdx, playlist, ref, volume, setPlaying, \r\n        props?.currentSong?.musicTitle, currentSong?.musicTitle, nextSong, updateBorderRef, loadAudio\r\n    ]);\r\n\r\n    // console.log(currentSong);\r\n\r\n    return(\r\n        <>\r\n\r\n            <div className=\"mt-2 bottom-navigation-container\">\r\n                <div ref={borderRef} className=\"top-one-row\"/>\r\n                <div className=\"custom-bottom-navigation\" >\r\n                    <div className=\"timeline start\">{calculateSongTime(currentTime)}</div>\r\n                    <div className=\"timeline end\">{endTime !== Infinity ? calculateSongTime(endTime): '--:--'}</div>\r\n                    <div className=\"musicDetails\">\r\n                        <div className=\"image-box\">\r\n                            <div className=\"navbarHead-img-container\">\r\n                                <img \r\n                                    className={`navbarHead-img ${!currentSong.musicImageKey && \"hover-img\"}`} \r\n                                    src={currentSong.musicImageKey ? apiLinks.getImage + currentSong.musicImageKey : \"/assets/svg/dvd.svg\"} \r\n                                    alt=\"player-img\" \r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"music-detail-box\">\r\n                            <h5 className=\"music-title\">\r\n                                {currentSong.musicTitle}\r\n                            </h5>\r\n                            <h6 className=\"music-album\">\r\n                                <Link to={`/album/${currentSong.albumTitle}`}>\r\n                                    {currentSong.albumTitle}\r\n                                </Link>\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"custom-button-group-container\">\r\n                        <div className=\"custom-button-group\">\r\n                            <SkipPreviousIcon \r\n                                onClick={currentSongIdx > 0 ? prevSong : null}\r\n                                className={currentSongIdx === 0 ? \"disabled-svg\": ''}\r\n                                style={currentSongIdx > 0 ? \r\n                                    { cursor: 'pointer'} : { cursor: 'not-allowed' }} \r\n                            />\r\n                            {\r\n                                loading ?\r\n                                    <SpinnerRotate \r\n                                        size=\"\"\r\n                                        color=\"success\"\r\n                                    /> :\r\n                                    playing ?\r\n                                        <PauseIcon title=\"Pause Song\" onClick={playPauseSong} /> : \r\n                                        <PlayArrowIcon title=\"Play Song\" onClick={playPauseSong} />\r\n                            }\r\n                            <SkipNextIcon \r\n                                onClick={currentSongIdx < (playlist.length - 1) ? nextSong: null}\r\n                                className={currentSongIdx === (playlist.length - 1) ? \"disabled-svg\": ''}\r\n                                style={\r\n                                        currentSongIdx < (playlist.length - 1) ? \r\n                                            { cursor: 'pointer'} : { cursor: 'not-allowed' }} \r\n                            />\r\n                            <span \r\n                                className=\"volume-range-slider\"\r\n\r\n                                onClick={e => {\r\n                                    setStyle(prev => {\r\n                                        return {\r\n                                            display: prev.display === 'block' ? 'none' : 'block'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                            >\r\n                                {\r\n                                    volume > 0.5 ?\r\n                                        <VolumeUpIcon className=\"volume-svg\" /> :\r\n                                        volume > 0 ?\r\n                                            <VolumeDownIcon className=\"volume-svg\" /> :\r\n                                            <VolumeOffIcon className=\"volume-svg\" />\r\n                                }\r\n                                <input style={style} min={0} max={1} step={0.1} onChange={e => handleMute(parseFloat(e.target.value))}\r\n                                    type=\"range\" orient=\"vertical\" className=\"volume-slider\" ref={volumeRef} defaultValue={volume} />\r\n                            </span>\r\n                        </div>\r\n                        <audio ref={audioRef} preload=\"auto\" onTimeUpdate={updateBorderRef} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Container className=\"mt-3 pt-5 pb-5\"/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default MusicPlayer;","import React, { useState, useRef, useEffect } from 'react';\nimport { Flip, ToastContainer } from 'react-toastify';\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nimport Home from './pages/Home.js';\nimport Error from './pages/Error.js';\nimport Album from './pages/Album.js';\nimport Admin from './pages/admin.js';\nimport Artist from \"./pages/Artist.js\";\nimport { Subscribe } from './client/index';\nimport * as serviceWorker from './client/serviceWorker.js';\nimport MusicPlayer from \"./components/MusicPlayer/index.js\";\n\nimport './App.css';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const Playing = React.createContext();\nexport const LoadAudio = React.createContext();\nexport const PlayPause = React.createContext();\nexport const PlayerContext = React.createContext();\n\nfunction App() {\n  library.add(faHome);\n  \n  const player = useRef(null);\n\n  const [playlist, setPlaylist] = useState([]);\n  const [playing, setPlaying] = useState(false);\n  const [currentSong, setCurrentSong] = useState({});\n\n  const loadAudio = (ll, item, e) => {\n    if(e)\n        e.preventDefault();\n    setPlaylist(ll);\n    setCurrentSong(item);\n    // console.log(ll, item);\n  };\n\n  const handleKeyPress = (e) => {\n    switch(e.code){\n        case 'Space':  \n            if(player.current)\n              e.preventDefault();\n              player?.current?.handlePlayPause();\n            break;\n        case 'ArrowLeft':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handlePrevSong();\n            break;\n        case 'ArrowRight':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleNextSong();\n            break;\n        case 'ArrowUp':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleVolumeInc();\n            break;\n        case 'ArrowDown':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleVolumeDec();\n            break;\n        default:\n            break;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n\n    if(\"Notification\" in window){\n      if(Notification.permission === \"default\"){\n          Notification.requestPermission().then((permission) => {\n              if(permission === \"granted\"){\n                  Subscribe();\n              }\n          })\n      }\n      else if(Notification.permission === \"granted\"){\n          Subscribe();\n      }\n    }\n    else{\n        console.log(\"Notification is not supported\");\n    }\n    \n    window?.addEventListener('keydown', handleKeyPress, false);\n\n    return () => {\n      document.removeEventListener('keypress', handleKeyPress);\n    };\n\n  }, []);\n  \n  return (\n    <React.Fragment>\n      <PlayerContext.Provider value={currentSong}>\n        <PlayPause.Provider value={handleKeyPress}>\n          <Playing.Provider value={playing}>\n            <LoadAudio.Provider value={loadAudio}>\n              <div className=\"app-bg\">\n                <Router>\n                  <Routes>\n\n                    <Route exact path=\"/\" element={<Home />} />\n                    <Route path=\"/album/:albumName\" element={<Album />} />\n                    <Route path=\"/artist/:artistName\" element={<Artist />} />\n                    <Route path=\"/admin/\" element={<Admin />} />\n                    <Route path=\"*\" element={<Error />} />\n\n                  </Routes>\n                  {\n                      playlist.length ? \n                          <MusicPlayer \n                              ref={player}\n                              currentSong={currentSong}\n                              playlist={playlist}\n                              setCurrentSong={setCurrentSong}\n                              playing={playing}\n                              setPlaying={setPlaying}\n                          />\n                          : <React.Fragment />\n                  }\n                </Router>\n              </div>\n              <ToastContainer \n                  position='top-right'\n                  autoClose={3000}\n                  hideProgressBar={false}\n                  newestOnTop={true}\n                  closeOnClick={true}\n                  rtl={false}\n                  pauseOnFocusLoss\n                  draggable\n                  pauseOnHover\n                  theme=\"dark\"\n                  transition={Flip}\n              />\n            </LoadAudio.Provider>\n          </Playing.Provider>\n        </PlayPause.Provider>\n      </PlayerContext.Provider>\n    </React.Fragment>\n  );\n}\n\nserviceWorker.register();\n\nexport default App;\n","export function register(){\r\n    if('serviceWorker' in navigator){\r\n        const url = \"http://localhost:3000/sw.js\";\r\n        // const url = \"http://3.109.59.110:5000/\"\r\n        navigator.serviceWorker.register(url, {\r\n            scope: '/',\r\n        })\r\n        .then(function(registration) {\r\n            registration.addEventListener('updatefound', function() {\r\n              // If updatefound is fired, it means that there's\r\n              // a new service worker being installed.\r\n              var installingWorker = registration.installing;\r\n              console.log('A new service worker is being installed:',\r\n                installingWorker);\r\n        \r\n              // You can listen for changes to the installing service worker's\r\n              // state via installingWorker.onstatechange\r\n            });\r\n            // registration.addEventListener('pushsubscriptionchange', function(event) {\r\n            //     console.log(event);\r\n            // });\r\n        })\r\n        .catch(function(error) {\r\n            console.log('Service worker registration failed:', error);\r\n        });\r\n    }\r\n    else {\r\n        console.log('Service workers are not supported.');\r\n    }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}