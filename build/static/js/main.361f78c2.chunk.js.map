{"version":3,"sources":["connection.config.js","components/spinner/spinner-grow.js","client/index.js","components/navigation/Navigation-bar/navigation.js","pages/Home.js","pages/Error.js","components/Album/body.js","components/Album/header.js","components/Album/footer.js","components/Notification/Notification.js","pages/Album.js","components/Admin/textInput.js","components/Admin/newImageUpload.js","components/Admin/addNewModal.js","components/Admin/checkBoxInput.js","components/Admin/newMusicAdd.js","components/Tables/Genre-table.js","components/Tables/broadcast.js","components/Tables/artists-table.js","components/Tables/music-table.js","components/Tables/category-table.js","components/Tables/playlist-table.js","components/Warning/Warning.js","components/Admin/editImageUpload.js","components/Admin/editExistingMusic.js","components/Admin/editExistingModal.js","components/navigation/Navigation-bar/admin-navigation.js","pages/admin.js","components/Artist/body.js","components/Artist/header.js","components/Artist/footer.js","pages/Artist.js","components/MusicPlayer/index.js","App.js","client/serviceWorker.js","reportWebVitals.js","index.js"],"names":["apiLinks","baseURL","broadcast","subscribe","unsubscribe","getBroadcast","deleteBroadcast","getBroadcastNotifications","status","getAudio","getImage","getAudioKey","getImageKey","getArtistImgKey","getPlaylistImgKey","getArtistImgFromName","getAlbumDetails","getArtistDetails","getAllAudio","getAllAudioDetails","getMusicIdNameAlbum","getAllArtists","getAllGenre","getAllCategory","getAllPlaylist","getPlaylistById","postSong","addGenre","addArtists","addCategory","createPlaylist","deleteMusic","deleteGenre","deleteArtist","deleteCategory","deletePlaylist","updateAdminData","updateAdminGenre","updateAdminArtist","updateAdminCategory","updateAdminPlaylist","updateAdminMusicFav","updateAdminGenreFav","updateAdminArtistFav","updateAdminCategoryFav","updateAdminPlaylistFav","updatePlaylistSongs","SpinnerRotate","props","color","size","SpinnerGrow","isOpen","autoFocus","scrollable","keyboard","contentClassName","backdrop","centered","fullscreen","className","type","urlBase64ToUint8Array","base64String","base64","repeat","length","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","Subscribe","a","navigator","serviceWorker","ready","registration","pushManager","userVisibleOnly","applicationServerKey","process","subscription","existingEndPoint","localStorage","getItem","today","Date","toISOString","axios","post","JSON","stringify","endpoint","headers","setItem","Unsubscribe","delete","data","removeItem","Broadcast","formData","MaterialUISwitch","styled","Switch","theme","width","height","padding","margin","transform","backgroundImage","encodeURIComponent","opacity","backgroundColor","palette","mode","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","Navigation","navigate","useNavigate","isDark","useContext","IsDark","setIsDark","SetIsDark","useState","setIsOpen","notificationData","setNotificationData","updateNavClick","prev","anchorEl","setAnchorEl","open","Boolean","getNotificationData","get","params","response","code","message","Notification","requestPermission","then","permission","catch","err","console","log","handleClick","event","currentTarget","handleClose","useEffect","dark","light","expand","onClick","checked","Tooltip","title","IconButton","sx","marginRight","undefined","Badge","badgeContent","fontSize","Menu","id","onClose","PaperProps","elevation","filter","mt","ml","mr","display","right","bgcolor","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","map","notification","MenuItem","url","src","image","alt","body","Divider","toggle","direction","navbar","icon","faHome","faMusic","faSignInAlt","musicList","reducer","state","action","artistData","item","show","genreData","categoryData","term","genreList","artistList","albumList","categoryList","list","genre","j","find","push","albumTitle","artists","artist","name","category","settings","dots","arrows","draggable","lazyLoad","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","easing","responsive","breakpoint","Home","playing","Playing","loadAudio","LoadAudio","playPauseState","PlayPause","currentSong","PlayerContext","loader","setLoader","mouseId","setMouseId","useReducer","dispatch","handleStateChange","e","preventDefault","abortController","AbortController","getAudioData","signal","Object","keys","prevData","parse","abort","Fragment","style","fluid","catList","ll","sort","b","keyA","timeStamp","keyB","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","musicTitle","musicImageKey","cursor","to","textAlign","Error","Body","paused","songList","SongList","currentPlayer","calculateTimeContext","CalculateTimeContext","playId","setPlayId","setPlaying","updatePlayId","value","updatePlayPause","song","index","art","duration","Header","Artists","totalDuration","Duration","calculateTotalDuration","idx","Footer","Success","autoClose","toast","success","hideProgressBar","closeOnClick","pauseOnFocusLoss","pauseOnHover","progress","error","transition","Bounce","React","createContext","Album","useParams","setSongList","setArtists","setTotalDuration","getAlbum","albumName","Set","songs","flat","reduce","partial_sum","Provider","time","Infinity","minutes","Math","floor","seconds","String","TextInput","xs","justifyContent","for","required","labelName","alignSelf","check","TextField","onChange","target","label","variant","Checkbox","onCheckBoxChange","checkedValue","inputProps","checkedIcon","NewImageUpload","musicImgPath","musicImgName","close","removeSelectedImage","accept","uploadMusicImage","ref","hiddenFileInput","outline","AddNewModal","useRef","setUrl","setName","setBody","checkBoxChecked","setCheckBoxChecked","artistImg","setArtistImg","artistImgName","setArtistImgName","artistImgPath","setArtistPath","setData","tabId","artistRows","rowData","genreRows","categoryRows","broadcastRows","playlistRows","addDetail","controller","names","split","nam","trim","FormData","append","types","constructor","header","files","URL","createObjectURL","current","click","CheckBoxInput","FormControl","InputLabel","Select","labelId","multiple","handleChange","input","OutlinedInput","renderValue","selected","join","MenuProps","indexOf","ListItemText","primary","random","maxHeight","ITEM_HEIGHT","NewMusicAdd","setGenreList","setArtistList","setCategoryList","musicName","addMusicWidget","musicDuration","hiddenMusicInput","uploadMusic","saveUploadMusic","handleMusicClick","fav","setFav","handleGenreChange","removeMusicDetails","removeSelectedSong","updateAddMusicWidget","handleCategoryChange","setMusicTitle","setAlbumTitle","genreController","artistController","categoryController","getGenreList","getArtistList","getCategoryList","lg","calculateSongTime","columns","minWidth","align","maxWidth","GenreTable","setRows","rows","page","setPage","rowsPerPage","setRowsPerPage","createTheme","updateFavState","put","row","ThemeProvider","Paper","overflow","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","hover","role","tabIndex","Edit","editGenre","Delete","toggleWarning","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","BroadcastTable","ArtistsTable","editArtist","StickyHeadTable","editRow","CategoryTable","editCategory","commands","Transition","Slide","SimpleDialog","Dialog","DialogTitle","List","pt","command","ListItem","button","findIndex","ListItemAvatar","Avatar","blue","PlaylistTable","descriptionElementRef","setOpen","updateElement","setUpdateElement","openMusicList","setOpenMusicList","editMusicList","setEditMusicList","existingMusicList","setExistingMusicList","openAddMusicList","setOpenAddMusicList","addMusicList","setAddMusicList","setChecked","handleAddMusicOpen","handleAddMusicClose","saveAddMusic","songId","handleSongListClose","getSelectedPlaylistSongs","playlist","signalAborter","handleSongListSave","descriptionElement","focus","editPlaylist","fullScreen","TransitionComponent","AppBar","Toolbar","edge","Typography","flex","Button","dense","secondaryAction","music","newList","splice","deletePlaylistSong","secondary","DialogContentText","scroll","DialogContent","dividers","currentIndex","newChecked","handleToggle","disablePadding","ListItemButton","DialogActions","DeleteWarning","deleteRow","EditImageUpload","imageKey","EditExistingMusic","audioRef","load","setLoad","currentPaused","setCurrentPaused","musicKey","setMusicKey","musicImgKey","setMusicImgKey","editMusicWidget","editId","updateRow","updateEditMusicWidget","closeWidget","pauseSong","play","pause","updateSongState","onended","oncanplaythrough","readyState","saveEditFile","imgFileController","audioFileController","getImageFileKey","getAudioFileKey","currentTime","EditExistingModal","editedRow","artistImgFileController","playlistImgFileController","getArtistImageFileKey","artistImgKey","getPlaylistImageFileKey","AdminNavigation","sticky","musicRows","Admin","audioDurationRef","setTabId","catGenValue","setCatGenValue","setEditId","modalId","setModalId","setHeader","warning","setWarning","deleteId","setDeleteId","deleteItemName","setDeleteItemName","setGenre","setArtist","setCategory","showBroadCast","setShowBroadCast","setAddMusicWidget","setCreatePlaylist","addGenreWidget","setAddGenreWidget","setEditMusicWidget","addArtistWidget","setAddArtistWidget","addCategoryWidget","setAddCategoryWidget","editExistingWidget","setEditExistingWidget","setMusic","setMusicName","setMusicDuration","musicImg","setMusicImg","setMusicImgName","setMusicImgPath","updateTabId","defaultProps","options","getOptionLabel","option","playlist_name","parseInt","musicController","broadCastController","playlistController","getMusicData","getArtistsData","getGenreData","getCategoryData","getBroadCastData","getPlaylistData","getSearchedRow","searchedData","toLowerCase","includes","remove","editArtistGenreCategoryPlaylist","domain","editTableRow","entry","actions","webkitURL","document","createElement","preload","onloadedmetadata","revokeObjectURL","Box","flexGrow","bottom","Backdrop","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","SpeedDialAction","tooltipTitle","tooltipOpen","tabs","Autocomplete","evt","val","getSearchedAutoCompleteRow","autoComplete","includeInputInList","renderInput","activeTab","editableRow","AlbumList","album","Artist","setAlbumList","artistName","MusicPlayer","forwardRef","useTheme","borderRef","volumeRef","setStyle","loading","setLoading","setPlaylist","setCurrentSong","currentSongIdx","setCurrentSongIdx","volume","setVolume","setCurrentTime","endTime","setEndTime","updateBorderRef","useCallback","playPauseSong","prevSong","nextSong","useImperativeHandle","handlePlayPause","handleNextSong","handlePrevSong","handleVolumeInc","vol","parseFloat","toFixed","volumeInc","handleVolumeDec","volumeDec","loadMusic","playPromise","_","currentSongIndex","obj","Slider","default","step","max","boxShadow","min","orient","defaultValue","onTimeUpdate","register","scope","addEventListener","installingWorker","installing","App","library","add","player","handleKeyPress","removeEventListener","exact","path","element","newestOnTop","rtl","Flip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.361f78c2.chunk.js","sourcesContent":["export const apiLinks = {\r\n    // baseURL: \"http://localhost:5000/\" // local Development\r\n    baseURL : \"http://3.109.59.110:5000/\" // testing\r\n    // baseURL: \"http://musicBackend.com/\" // Production\r\n};\r\n\r\n// serviceWorker subscription\r\napiLinks.broadcast = apiLinks.baseURL+\"broadcast\";\r\napiLinks.subscribe = apiLinks.baseURL+\"subscription\";\r\napiLinks.unsubscribe = apiLinks.baseURL+\"unsubcription\";\r\napiLinks.getBroadcast = apiLinks.baseURL+\"getAllBroadCast\";\r\napiLinks.deleteBroadcast = apiLinks.baseURL+\"deleteBroadcast/\";\r\napiLinks.getBroadcastNotifications = apiLinks.baseURL+\"getAllBroadcastNotification\";\r\n\r\n// get Links\r\napiLinks.status = apiLinks.baseURL+\"status\";\r\napiLinks.getAudio = apiLinks.baseURL+\"audio/\";\r\napiLinks.getImage = apiLinks.baseURL+\"image/\";\r\napiLinks.getAudioKey = apiLinks.baseURL+\"audioKey/\";\r\napiLinks.getImageKey = apiLinks.baseURL+\"imageKey/\";\r\napiLinks.getArtistImgKey = apiLinks.baseURL+\"artistImageKey/\";\r\napiLinks.getPlaylistImgKey = apiLinks.baseURL+\"playlistImageKey/\";\r\napiLinks.getArtistImgFromName = apiLinks.baseURL+\"getImageByArtistName/\";\r\napiLinks.getAlbumDetails = apiLinks.baseURL+\"album/\";\r\napiLinks.getArtistDetails = apiLinks.baseURL+\"artist/\";\r\napiLinks.getAllAudio = apiLinks.baseURL+\"getAllMusic\";\r\napiLinks.getAllAudioDetails = apiLinks.baseURL+\"getAllMusicDetails\";\r\napiLinks.getMusicIdNameAlbum = apiLinks.baseURL+\"getMusicIdNameAlbum\";\r\napiLinks.getAllArtists = apiLinks.baseURL+\"getAllArtists\";\r\napiLinks.getAllGenre = apiLinks.baseURL+\"getAllGenre\";\r\napiLinks.getAllCategory = apiLinks.baseURL+\"getAllCategory\";\r\napiLinks.getAllPlaylist = apiLinks.baseURL+\"getAllPlaylist\";\r\napiLinks.getPlaylistById = apiLinks.baseURL+\"getPlaylistById/\";\r\n\r\n// post Links\r\napiLinks.postSong = apiLinks.baseURL+\"addNewSong\";\r\napiLinks.addGenre = apiLinks.baseURL+\"postNewGenre\";\r\napiLinks.addArtists = apiLinks.baseURL+\"postNewArtists\";\r\napiLinks.addCategory = apiLinks.baseURL+\"postNewCategory\";\r\napiLinks.createPlaylist = apiLinks.baseURL+\"postNewPlaylist\";\r\n\r\n// delete Links\r\napiLinks.deleteMusic = apiLinks.baseURL+\"admin/musicDelete/\";\r\napiLinks.deleteGenre = apiLinks.baseURL+\"admin/genreDelete/\";\r\napiLinks.deleteArtist = apiLinks.baseURL+\"admin/artistDelete/\";\r\napiLinks.deleteCategory = apiLinks.baseURL+\"admin/categoryDelete/\"\r\napiLinks.deletePlaylist = apiLinks.baseURL+\"admin/playlistDelete/\";\r\n\r\n// put Links\r\napiLinks.updateAdminData = apiLinks.baseURL+\"admin/updateData/\";\r\napiLinks.updateAdminGenre = apiLinks.baseURL+\"admin/updateGenre/\";\r\napiLinks.updateAdminArtist = apiLinks.baseURL+\"admin/updateArtist/\";\r\napiLinks.updateAdminCategory = apiLinks.baseURL+\"admin/updateCategory/\";\r\napiLinks.updateAdminPlaylist = apiLinks.baseURL+\"admin/updatePlaylist/\";  \r\n\r\napiLinks.updateAdminMusicFav = apiLinks.baseURL+\"admin/updateMusicFav/\";\r\napiLinks.updateAdminGenreFav = apiLinks.baseURL+\"admin/updateGenreFav/\";\r\napiLinks.updateAdminArtistFav = apiLinks.baseURL+\"admin/updateArtistFav/\";\r\napiLinks.updateAdminCategoryFav = apiLinks.baseURL+\"admin/updateCategoryFav/\";\r\napiLinks.updateAdminPlaylistFav = apiLinks.baseURL+\"admin/updatePlaylistFav/\";  \r\napiLinks.updatePlaylistSongs = apiLinks.baseURL+\"admin/updatePlaylistSong/\";","import React from 'react';\r\nimport { Modal, ModalBody, Spinner } from 'reactstrap';\r\n\r\nimport \"./spinner-grow.css\";\r\n\r\nconst SpinnerGrow = (props) => {\r\n\r\n    return(\r\n        <Modal \r\n            isOpen={true}\r\n            autoFocus={true}\r\n            scrollable={false}\r\n            keyboard={false}\r\n            contentClassName='loader-modal-class'\r\n            backdrop='static'\r\n            centered\r\n            fullscreen=\"md\"\r\n            size='sm'\r\n        >\r\n            <ModalBody>\r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    className='first-dot-spinner'\r\n                    type=\"grow\"\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n                \r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    type=\"grow\"\r\n                    className='second-dot-spinner'\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n                    \r\n                <Spinner\r\n                    color={props.color || \"success\"}\r\n                    size={props.size || \"\"}\r\n                    className='third-dot-spinner'\r\n                    type=\"grow\"\r\n                >\r\n                    Loading...\r\n                </Spinner>\r\n\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst SpinnerRotate = (props) => {\r\n\r\n    return(\r\n        <Spinner\r\n            color={props.color || \"success\"}\r\n            size={props.size || \"\"}\r\n        >\r\n            Loading...\r\n        </Spinner>\r\n    );\r\n\r\n};\r\n\r\nexport default SpinnerGrow;\r\n\r\nexport {\r\n    SpinnerRotate\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { apiLinks } from \"../connection.config\";\r\n\r\nconst publicVapidKey = process.env.REACT_APP_PUBLIC_VAPID_KEY;\r\n\r\nconst urlBase64ToUint8Array = (base64String) => {\r\n    // console.log(base64String);\r\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/-/g, '+')\r\n      .replace(/_/g, '/');\r\n  \r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n  \r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n};\r\n\r\nexport const Subscribe = async () => {\r\n    if (!('serviceWorker' in navigator)) return;\r\n  \r\n    const registration = await navigator.serviceWorker.ready;\r\n  \r\n    // Subscribe to push notifications\r\n    const subscription = await registration.pushManager.subscribe({\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\r\n    });\r\n    \r\n    const existingEndPoint = window?.localStorage?.getItem(\"endpoint\");\r\n\r\n    const today = new Date().toISOString();\r\n    \r\n    await axios.post(apiLinks.subscribe, \r\n        JSON.stringify({subscription: subscription, today: today, endpoint: existingEndPoint}), {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        });\r\n        \r\n    if(window.localStorage){\r\n        window.localStorage.setItem(\"endpoint\", subscription.endpoint);\r\n    }\r\n};\r\n\r\nexport const Unsubscribe = async () => {\r\n    if(window.localStorage){\r\n\r\n        const endpoint = window.localStorage.getItem(\"endpoint\");\r\n        if(endpoint){\r\n            await axios.delete(apiLinks.unsubscribe, {\r\n                data: {\r\n                    endpoint: endpoint\r\n                }\r\n            });\r\n\r\n            window.localStorage.removeItem(\"endpoint\");\r\n        }\r\n    }\r\n};\r\n\r\nexport const Broadcast = async (formData) => {\r\n    return await axios.post(apiLinks.broadcast, formData);\r\n};\r\n\r\n","import axios from \"axios\";\r\nimport Menu from '@mui/material/Menu';\r\nimport Badge from '@mui/material/Badge';\r\nimport Switch from '@mui/material/Switch';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Navbar, NavItem, Nav, NavbarToggler, NavbarBrand, NavLink,\r\n        Offcanvas, OffcanvasHeader, OffcanvasBody } from \"reactstrap\";\r\nimport { faHome, faMusic, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Subscribe } from \"../../../client\";\r\nimport { IsDark, SetIsDark } from \"../../../App\";\r\nimport { apiLinks } from \"../../../connection.config.js\";\r\n\r\nimport \"./navigation.css\";\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n    width: 62,\r\n    height: 34,\r\n    padding: 7,\r\n    '& .MuiSwitch-switchBase': {\r\n      margin: 1,\r\n      padding: 0,\r\n      transform: 'translateX(6px)',\r\n      '&.Mui-checked': {\r\n        color: '#fff',\r\n        transform: 'translateX(22px)',\r\n        '& .MuiSwitch-thumb:before': {\r\n          backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n            '#fff',\r\n          )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n        },\r\n        '& + .MuiSwitch-track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n        },\r\n      },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\r\n      width: 32,\r\n      height: 32,\r\n      '&:before': {\r\n        content: \"''\",\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        left: 0,\r\n        top: 0,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          '#fff',\r\n        )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n      },\r\n    },\r\n    '& .MuiSwitch-track': {\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n      borderRadius: 20 / 2,\r\n    },\r\n}));\r\n\r\nconst Navigation = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    const isDark = useContext(IsDark);\r\n    const setIsDark = useContext(SetIsDark);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [notificationData, setNotificationData] = useState([]);\r\n\r\n    const updateNavClick = () => {\r\n        setIsOpen(prev => !prev);\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const getNotificationData = async () => {\r\n        if(window?.localStorage?.getItem(\"endpoint\")){\r\n            const endpoint = window.localStorage.getItem(\"endpoint\");\r\n            const response = await axios.get(apiLinks.getBroadcastNotifications, {\r\n                params: {\r\n                    endpoint: endpoint\r\n                }\r\n            });\r\n            if(response.data.code === 200){\r\n                setNotificationData(response.data.message);\r\n            }\r\n            else{\r\n                setNotificationData([]);\r\n            }\r\n        }\r\n        else{\r\n            Notification.requestPermission().then(permission => {\r\n                if(permission === \"granted\"){\r\n                    Subscribe();\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleClick = async (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        await getNotificationData();\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNotificationData();\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n\r\n            <div className=\"navigation-container\">\r\n                <Navbar \r\n                    color={isDark ? \"dark\" : \"light\"}\r\n                    dark={isDark}\r\n                    light={!isDark}\r\n                    expand=\"false\"\r\n                    className=\"one-row\"\r\n                >\r\n                    <NavbarBrand className=\"me-auto\">\r\n                        <div className=\"navbarHead\" onClick={() => navigate('/')}>\r\n                            SANGEET\r\n                        </div>\r\n                    </NavbarBrand>\r\n                    <MaterialUISwitch checked={isDark} onClick={setIsDark} />\r\n\r\n                    <Tooltip title=\"Notifications\">\r\n                        <IconButton\r\n                            sx={{\r\n                                marginRight: \"15px\"\r\n                            }}\r\n                            onClick={handleClick}\r\n                            size=\"small\"\r\n                            aria-controls={open ? 'account-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                        >\r\n                            <Badge badgeContent={notificationData.length || '0'} className=\"notification-count\" >\r\n                                <NotificationsIcon sx={{ fontSize: 30, color: isDark ? \"rgb(0, 255, 0)\" : \"rgb(0, 0, 0)\" }} />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        id=\"account-menu\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        onClick={handleClose}\r\n                        PaperProps={{\r\n                            elevation: 0,\r\n                            className: `notification-message-container ${isDark ? \"dark\" : \"light\"}`,\r\n                            sx: {\r\n                                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                                mt: 1.5,\r\n                                '& .MuiAvatar-root': {\r\n                                    width: 32,\r\n                                    height: 32,\r\n                                    ml: -0.5,\r\n                                    mr: 1,\r\n                                },\r\n                                '&:before': {\r\n                                    content: '\"\"',\r\n                                    display: 'block',\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    right: 0,\r\n                                    width: 10,\r\n                                    height: 10,\r\n                                    bgcolor: `${isDark ? \"#0A0F18\" : \"#eee\"}`,\r\n                                    transform: 'translateY(-50%) rotate(45deg)',\r\n                                    zIndex: 0,\r\n                                },\r\n                            },\r\n                        }}\r\n                        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                    >\r\n                        {\r\n                            notificationData.length > 0 ?\r\n                                notificationData.map(notification => \r\n                                    <MenuItem key={notification.id} onClick={() => navigate(notification.url)}>\r\n                                        <div>\r\n                                            <div className=\"notification-row mb-2\">\r\n                                                <div className=\"notification-image-container\">\r\n                                                    <img className=\"notification-image\"\r\n                                                        src={apiLinks.getImage + notification.image} alt={notification.title} />\r\n                                                </div>\r\n                                                <div className=\"notification-text-container\">\r\n                                                    <div className=\"notification-title\">\r\n                                                        {notification.title}\r\n                                                    </div>\r\n                                                    <div className=\"notification-body\">\r\n                                                        {notification.body}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Divider />\r\n                                        </div>\r\n                                    </MenuItem>\r\n                                ) : \r\n                                <div className=\"no-notifications-container\">\r\n                                    <h5 className=\"no-notifications\">\r\n                                        No Notifications Available\r\n                                    </h5>\r\n                                </div>\r\n                        }\r\n                    </Menu>\r\n\r\n                    <NavbarToggler className=\"me-2\" onClick={updateNavClick} />\r\n                    \r\n                    <Offcanvas isOpen={isOpen} className=\"offcanvas-tag\" scrollable={false}\r\n                        toggle={updateNavClick} direction=\"end\">\r\n                        <OffcanvasHeader toggle={updateNavClick} className=\"custom-close-icon-canvas-header\" />\r\n                        <OffcanvasBody className=\"navbar-menu-links\">\r\n                            <Nav className=\"ms-auto\" navbar>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate(\"/\")}>\r\n                                        <FontAwesomeIcon icon={faHome} /> \r\n                                        <span className=\"extra-spacing\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faMusic} /> \r\n                                        <span className=\"extra-spacing\" /> Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate('/admin')}>\r\n                                        <FontAwesomeIcon icon={faSignInAlt} /> \r\n                                        <span className=\"extra-spacing\" /> Login / SignUp \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </OffcanvasBody>\r\n                    </Offcanvas>\r\n                </Navbar>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import axios from \"axios\";\r\nimport Slider from \"react-slick\";\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useEffect, useReducer, useState, useContext } from \"react\";\r\n\r\nimport { apiLinks } from '../connection.config';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\nimport { LoadAudio, PlayerContext, PlayPause, Playing, IsDark } from \"../App\";\r\n\r\nimport \"./Home.css\";\r\n\r\nconst musicList = {};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'FETCH_SUCCESS':\r\n        case \"FETCH_CACHE\":\r\n            const artistData = action.artistData.filter(item => item.show === true);\r\n            const genreData = action.genreData.filter(item => item.show === true);\r\n            const categoryData = action.categoryData.filter(item => item.show === true);\r\n            const term = action.message.filter(item => item.show === true);\r\n            \r\n            let genreList = {};\r\n            let artistList = {};\r\n            let albumList = {};\r\n            let categoryList = {};\r\n            let musicList = action.message;\r\n\r\n            for(var i=0; i < term.length; i++){\r\n\r\n                // Filtering genre data\r\n                let list = term[i].genre;\r\n                for(var j=0; j < list.length; j++){\r\n                    const data = list[j];\r\n                    if(genreData.find(genre => genre.type === data)){\r\n                        if(genreList[data] === undefined){\r\n                            genreList[data] = [term[i]];\r\n                        }\r\n                        else{\r\n                            genreList[data].push(term[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Filtering album data\r\n                list = term[i].albumTitle;\r\n                if(albumList[list] === undefined){\r\n                    albumList[list] = [term[i]];\r\n                }\r\n                else{\r\n                    albumList[list].push(term[i]);\r\n                }\r\n\r\n                // Filtering artist data\r\n                list = term[i].artists;\r\n                for(j=0; j < list.length; j++){\r\n                    const data = list[j];\r\n                    if(artistData.find(artist => artist.name === data)){\r\n                        if(artistList[data] === undefined){\r\n                            artistList[data] = [term[i]];\r\n                        }\r\n                        else{\r\n                            artistList[data].push(term[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Filtering category data\r\n                list = term[i].category;\r\n                for(j=0; j < list.length; j++){\r\n                    const data = list[j];\r\n                    if(categoryData.find(category => category.type === data)){\r\n                        if(categoryList[data] === undefined){\r\n                            categoryList[data] = [term[i]];\r\n                        }\r\n                        else{\r\n                            categoryList[data].push(term[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const list = {\r\n                genreList,\r\n                albumList,\r\n                artistList,\r\n                categoryList,\r\n                musicList\r\n            };\r\n\r\n            // console.log(list);\r\n\r\n            return list;\r\n\r\n        case 'FETCH_ERROR':\r\n            // Error(action.message);\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 8,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n            breakpoint: 1500,\r\n            settings: {\r\n              slidesToShow: 7,\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 1350,\r\n            settings: {\r\n              slidesToShow: 6,\r\n            }\r\n        },\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 850,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Home = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const playing = useContext(Playing);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [mouseId, setMouseId] = useState(0);\r\n\r\n    const [list, dispatch] = useReducer(reducer, musicList);\r\n\r\n    // console.log(loader, list);\r\n\r\n    const handleStateChange = (e) => {\r\n        const event = {\r\n            ...e,\r\n            code: \"Space\",\r\n            preventDefault : () => {}\r\n        };\r\n        playPauseState(event);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n\r\n        const getAudioData = async() => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllAudioDetails, {\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    dispatch({  type: 'FETCH_SUCCESS', \r\n                                message: response.data.message,\r\n                                artistData: response.data.artistData,\r\n                                genreData: response.data.genreData,\r\n                                categoryData: response.data.categoryData\r\n                            });\r\n                    if(window.localStorage){\r\n                        window.localStorage.setItem(\"Song Data\", JSON.stringify({\r\n                            message: response.data.message,\r\n                            artistData: response.data.artistData,\r\n                            genreData: response.data.genreData,\r\n                            categoryData: response.data.categoryData\r\n                        }));\r\n                    }\r\n                }\r\n                else{\r\n                    dispatch({ type: 'FETCH_ERROR', message: response.data.message });\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                dispatch({ type: 'FETCH_ERROR', message: err.message });\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        if(window?.localStorage?.getItem(\"Song Data\") && Object.keys(currentSong).length !== 0){\r\n            const prevData = JSON.parse(window.localStorage.getItem(\"Song Data\"));\r\n            if(Object.keys(prevData).length)\r\n                dispatch({type: \"FETCH_CACHE\", ...prevData})\r\n            else\r\n                getAudioData();\r\n        }\r\n        else\r\n            getAudioData();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [currentSong]);\r\n\r\n    // console.log(list);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <div className={`page-content ${isDark ? \"dark\" : \"light\"}`}\r\n                style={currentSong.id ? {height: \"calc(100vh - 215px)\"} : {height: \"calc(100vh - 90px)\"}}> \r\n                <Container key='category-container' className=\"mt-3\" fluid>\r\n                    {list.categoryList ?  \r\n                        Object.keys(list.categoryList).map(catList => {\r\n                            let ll = [];\r\n                            if(catList === 'New Releases')\r\n                                ll = list.categoryList[catList].sort((a, b) => {\r\n                                    let keyA = new Date(a.timeStamp);\r\n                                    let keyB = new Date(b.timeStamp);\r\n                                    if(keyA < keyB) return 1;\r\n                                    else if(keyA > keyB) return -1;\r\n                                    else return 0;\r\n                                });\r\n                            else\r\n                                ll = list.categoryList[catList];\r\n\r\n                            return (\r\n                                <Container key={catList} className=\" mt-3 slider-container\" fluid>\r\n                                    <h2 className={`category-list-heading ${isDark ? \"dark-heading\" : \"light-heading\"}`} title={catList}>{catList}</h2>\r\n                                    <Slider {...settings}>\r\n                                        {ll.map(item => {\r\n                                            return (\r\n                                                <div key={item.id} className={`mt-3 mb-3 custom-card-items song-list-items ${isDark ? \"dark-card\" : \"light-card\"}`}\r\n                                                    onMouseEnter={() => setMouseId(item.id)}\r\n                                                    onMouseLeave={() => setMouseId(0)}\r\n                                                    onTouchStart={() => setMouseId(item.id)}                                                   \r\n                                                    onTouchEnd={() => setMouseId(item.id)}\r\n                                                >\r\n                                                    <div className=\"card-image-container\">\r\n                                                        \r\n                                                        <div className={`hide-hover-play-icon ${mouseId === item.id || item.id === currentSong.id ? \r\n                                                                                                    \"show\": null }`}\r\n                                                            title={`Play ${item.musicTitle}`}\r\n                                                        >\r\n                                                            {\r\n                                                                item.id === currentSong.id && playing ?\r\n                                                                <PauseIcon className=\"play-icon-image-overlay\" onClick={handleStateChange} /> :\r\n                                                                <PlayArrowIcon className=\"play-icon-image-overlay\" \r\n                                                                    onClick={(e) => item.id === currentSong.id ? handleStateChange(e): loadAudio(ll, item, e)}\r\n                                                                />  \r\n                                                            }\r\n                                                        </div>\r\n                                        \r\n                                                        <img \r\n                                                            src={apiLinks.getImage + item.musicImageKey} \r\n                                                            alt={item.musicTitle} \r\n                                                            className=\"card-image\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"card-text-container\">\r\n                                                        <div className=\"card-text\">\r\n                                                            <h5 className={`pt-3 song-name ${isDark ? \"hover-dark\" : \"hover-light\"}`} title={`Play ${item.musicTitle}`}>\r\n                                                                <span style={{cursor: \"pointer\"}} \r\n                                                                    onClick={(e) => loadAudio(ll, item, e)} >\r\n                                                                    {item.musicTitle}\r\n                                                                </span>\r\n                                                            </h5>\r\n                                                            <h6 title={`Watch ${item.albumTitle}`} className={`album-title ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                                                <Link to={`/album/${item.albumTitle}`} className={`album-title ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                                                    {item.albumTitle}\r\n                                                                </Link>\r\n                                                            </h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                    </Slider>\r\n                                </Container>\r\n                            );\r\n                        })\r\n                    : <React.Fragment />\r\n                    }\r\n                </Container>\r\n                <Container key=\"artist-container\" className=\"mt-5\" fluid>\r\n                    { list.artistList ? \r\n                        <Container className=\"slider-container\" fluid>\r\n                            <h2 className={`category-list-heading ${isDark ? \"dark-heading\" : \"light-heading\"}`} title=\"Artists\">Artists</h2>\r\n                            <Slider {...settings}>\r\n                            { Object.keys(list.artistList).map((artist, id) => {\r\n                                return (\r\n                                    <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                        <Link to={`/artist/${artist}`} className={`artist-name ${isDark ? \"hover-dark\" : \"hover-light\"}`}>\r\n                                            <div className=\"artist-card-image-container d-flex\">\r\n                                                <img \r\n                                                    src={apiLinks.getArtistImgFromName + artist} \r\n                                                    alt={artist} \r\n                                                    className={`artist-card-image ${isDark ? \"dark\" : \"light\"}`}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"card-text-container mt-0\">\r\n                                                <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                                    <h4 className={`pt-3 pb-3 artist-name ${isDark ? \"hover-dark\" : \"hover-light\"}`} title={artist}>\r\n                                                            {artist}\r\n                                                    </h4>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                            </Slider>\r\n                        </Container>\r\n                    : <React.Fragment /> }\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { IsDark } from '../App';\r\nimport Navigation from '../components/navigation/Navigation-bar/navigation';\r\n\r\nimport \"./Error.css\";\r\n\r\nconst Error = () => {\r\n  const isDark = useContext(IsDark);\r\n\r\n  return(\r\n      <React.Fragment>\r\n      <Navigation />\r\n      <div className='error-page'>\r\n          <h1 style={isDark ? { color: \"#eee\" } : { color: \"#000\" }}>Error: 404</h1>\r\n          <h3 style={isDark ? { color: \"#eee\" } : { color: \"#000\" }}> Page Not Found</h3>\r\n      </div>\r\n      </React.Fragment>\r\n  );  \r\n};\r\n\r\nexport default Error;","// for song list\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useContext } from \"react\";\r\nimport PlayCircle from \"@mui/icons-material/PlayCircle\";\r\nimport PauseCircle from \"@mui/icons-material/PauseCircle\";\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\n\r\nimport { CalculateTimeContext, SongList } from \"../../pages/Album\";\r\nimport { PlayerContext, PlayPause, Playing, LoadAudio, IsDark } from \"../../App\";\r\n\r\nimport \"./body.css\";\r\n\r\nconst Body = (props) => {\r\n    \r\n    const isDark = useContext(IsDark);\r\n    const paused = useContext(Playing);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentPlayer = useContext(PlayerContext);\r\n    const calculateTimeContext = useContext(CalculateTimeContext);\r\n\r\n    const [playId, setPlayId] = useState(0);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const updatePlayId = (value) => {\r\n        setPlayId(value);\r\n    };\r\n\r\n    const updatePlayPause = (event) => {\r\n        const e = {\r\n            ...event, \r\n            code: \"Space\",\r\n            preventDefault: () => {}\r\n        };\r\n\r\n        playPauseState(e);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container> \r\n                <div className=\"song-list\">\r\n                    {\r\n                        songList.map((song, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className={`table-row-${isDark ? \"dark\" : \"light\"}`}\r\n                                        key={song.id}\r\n                                        style={currentPlayer.id && currentPlayer.id === song.id ? {color: isDark ? \"#eee\" : \"#111\"}: null}\r\n                                        onMouseEnter={(e) => {updatePlayId(song.id)}}\r\n                                        onMouseLeave={(e) => {updatePlayId(0)}}\r\n                                        onClick={e => loadAudio(songList, song, e)}\r\n                                    >\r\n                                        <div className=\"srno-title\">\r\n                                            <div className=\"srno\">\r\n                                                {\r\n                                                    currentPlayer.id && currentPlayer.id === song.id ?\r\n                                                    <span\r\n                                                        onMouseEnter={() => setPlaying(true)}\r\n                                                        onMouseLeave={() => setPlaying(false)}\r\n                                                    > \r\n                                                        {\r\n                                                            !paused ?\r\n                                                                <PlayCircle \r\n                                                                    onClick = {e => updatePlayPause(e)}\r\n                                                                /> :\r\n                                                                playing ?\r\n                                                                    <PauseCircle \r\n                                                                        onClick = {e => updatePlayPause(e)}\r\n                                                                    />:\r\n                                                                    <EqualizerIcon />\r\n                                                        }\r\n                                                    </span>:\r\n                                                    playId === song.id ? \r\n                                                        <PlayCircle /> :\r\n                                                        index+1\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"title\">\r\n                                                <div className=\"music-title\">\r\n                                                    {song.musicTitle}\r\n                                                </div>\r\n                                                <div className=\"d-flex custom-artists\">\r\n                                                    {\r\n                                                        song.artists?.map((art, index) => {\r\n                                                            return(\r\n                                                                <div className=\"\" key={index}>\r\n                                                                    <span className=\"song-list-artist\">\r\n                                                                        {\r\n                                                                            art === \"Various Artists\" ? \r\n                                                                                art : \r\n                                                                                <Link to={`/artist/${art}`}>\r\n                                                                                        {art}\r\n                                                                                </Link>\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                    <span className=\"song-list-artist-separation\">\r\n                                                                        {song.artists.length - 1 > index ? \",\": \"\"}&nbsp;\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"duration\">\r\n                                                {song.duration ? calculateTimeContext(song.duration) : '--:--'}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        index < songList.length - 1 ? (\r\n                                            <div className=\"custom-bottom-border\" key={index} />\r\n                                        ) : <React.Fragment />\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;","import { Container } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useContext } from \"react\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\nimport { CalculateTimeContext, SongList, Artists, Duration } from \"../../pages/Album\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const artists = useContext(Artists);\r\n    const songList = useContext(SongList);\r\n    const totalDuration = useContext(Duration);\r\n    const calculateTotalDuration = useContext(CalculateTimeContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className=\"mt-3\">\r\n                <div className=\"album-container\">\r\n                    <div className={`album-image-container ${isDark ? \"dark\" : \"light\"}`}>\r\n                        <img \r\n                            className=\"album-image\"\r\n                            src={apiLinks.getImage + songList[0]?.musicImageKey} \r\n                            alt={songList[0]?.albumTitle} />\r\n                    </div>\r\n                    <div className=\"album-details\">\r\n                        <div className=\"album-heading\">\r\n                            Album\r\n                        </div>\r\n                        <div className=\"album-name\">\r\n                            {songList[0]?.albumTitle}\r\n                        </div>\r\n                        <div className=\"album-artists\">\r\n                            {\r\n                                artists.length > 2 ? \r\n                                    \"Various Artists\" : \r\n                                    artists?.map((artist, idx) => {\r\n                                        return (\r\n                                            <span key={idx}>\r\n                                                <Link className={`artist-${isDark ? \"dark\" : \"light\"}`} to={`/artist/${artist}`}>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                                {idx < (artists.length - 1) ? \" , \" : \" \"}\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                            } &nbsp; <CircleIcon style={{ fontSize: '.5rem' }} />&nbsp; { calculateTotalDuration(totalDuration) }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","// for related artists\r\nimport Slider from 'react-slick';\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { IsDark } from '../../App';\r\nimport { Artists } from \"../../pages/Album\";\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./footer.css\";\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n          breakpoint: 1200,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 991,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Footer = (props) => {\r\n\r\n    const isDark = useContext(IsDark);\r\n    let artistList = useContext(Artists);\r\n\r\n    artistList = artistList?.filter(artist => artist !== \"Various Artists\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container key=\"artist-container\" className=\"mt-5\">\r\n                { artistList.length ? \r\n                    <Container className=\"slider-container\">\r\n                        <h2 className={`category-list-heading ${isDark ? \"dark\" : \"light\"}`} title=\"Artists\">Album Artists</h2>\r\n                        <Slider {...settings}>\r\n                        { artistList.map((artist, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container\">\r\n                                        <img \r\n                                            src={apiLinks.getArtistImgFromName + artist} \r\n                                            alt={artist} \r\n                                            className=\"artist-card-image\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className=\"pt-3 pb-3 artist-name\" title={artist}>\r\n                                                <Link to={`/artist/${artist}`} className={`artist-name ${isDark ? \"dark\" : \"light\"}`}>\r\n                                                    {artist}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3\" fluid />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import { Bounce, toast } from 'react-toastify';\r\n\r\nexport const Success = (message, autoClose=3000) => {\r\n\r\n    toast.success(message, {\r\n        position: \"top-right\",\r\n        autoClose: autoClose,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnFocusLoss: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined\r\n    });\r\n};\r\n\r\nexport const Error = (message, autoClose=5000) => {\r\n\r\n    toast.error(message, {\r\n        position: \"top-right\",\r\n        autoClose: autoClose,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnFocusLoss: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        transition: Bounce\r\n    });\r\n};\r\n\r\n","import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport Body from \"../components/Album/body\";\r\nimport Header from \"../components/Album/header\";\r\nimport Footer from \"../components/Album/footer\";\r\nimport { apiLinks } from \"../connection.config\";\r\nimport { Error } from \"../components/Notification/Notification\";\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\nimport { PlayerContext, IsDark } from \"../App\";\r\n\r\nimport \"./album.css\";\r\n\r\nexport const Artists = React.createContext();\r\nexport const SongList = React.createContext();\r\nexport const Duration = React.createContext();\r\nexport const CalculateTimeContext = React.createContext();\r\n\r\nconst Album = (props) => {\r\n    const params = useParams();\r\n\r\n    const isDark = useContext(IsDark);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [songList, setSongList] = useState([]);\r\n    const [artists, setArtists] = useState([]); \r\n    const [totalDuration, setTotalDuration] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        const getAlbum = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAlbumDetails+params.albumName, {\r\n                    headers: {\r\n                        'content-type': \"application/json\"\r\n                    },\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const artist = [...new Set(response.data.message.map((songs) => songs.artists).flat())];\r\n                    const duration = response.data.message.reduce((partial_sum, a) => partial_sum + a.duration, 0);\r\n                    \r\n                    setArtists(artist);\r\n                    setTotalDuration(duration);\r\n                    setSongList(response.data.message);\r\n                    abortController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                // Error(err.message);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        getAlbum();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [params]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <div className={`page-content ${isDark ? \"dark\" : \"light\"}`}\r\n                style={currentSong.id ? {height: \"calc(100vh - 215px)\"} : {height: \"calc(100vh - 70px)\"}}> \r\n                <CalculateTimeContext.Provider value={calculateSongTime}>\r\n                    <SongList.Provider value={songList}>\r\n                        <Artists.Provider value={artists}>\r\n                            <Duration.Provider value={totalDuration}>\r\n                                <Header />\r\n                                <Body />\r\n                                <Footer />\r\n                            </Duration.Provider>\r\n                        </Artists.Provider>\r\n                    </SongList.Provider>\r\n                </CalculateTimeContext.Provider>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Album;\r\n","import React from 'react';\r\nimport { Row, Col, Label } from 'reactstrap';\r\nimport { TextField } from '@mui/material'\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\n\r\nconst TextInput = (props) => {\r\n\r\n    const label = {\r\n        inputProps: {\r\n            'aria-label': \"Favourite Check\"\r\n        }\r\n    };\r\n\r\n    const onCheckedChange = (event) => {\r\n        props.onCheckBoxChange(event.target.checked);\r\n    };\r\n\r\n    const onValueChange = (event) => {\r\n        props.onChange(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Row className='music-detail-fields'>\r\n            <Col className=\"mt-1 mb-1\" xs=\"5\">\r\n                <Label className=\"label-styling\" style={{justifyContent: \"center\"}} for={props.id}>\r\n                    {\r\n                        props.required ? \r\n                        <>\r\n                            {props.labelName} <span style={{color: \"#f00\", alignSelf: \"flex-start\"}}>*</span>\r\n                        </> : \r\n                        props.labelName\r\n                    }\r\n                </Label>\r\n            </Col>\r\n            <Col className=\"mt-1 mb-1\" xs={props.check ? \"6\" : \"7\"}>\r\n                <TextField \r\n                    value={props.value}\r\n                    onChange={onValueChange}\r\n                    className=\"music-input-detail\"\r\n                    id={`standard-required ${props.id}`}\r\n                    label={props.label}\r\n                    variant=\"standard\"\r\n                />\r\n            </Col>\r\n            {\r\n                props.check ?\r\n                <Col className='mt-1 mb-1' xs=\"1\">\r\n                    <Checkbox onChange={onCheckedChange} checked={props.checkedValue} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                </Col> :\r\n                <React.Fragment />\r\n            }\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst NewImageUpload = (props) => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"image-preview\">\r\n                <img \r\n                    className='image-preview-img' \r\n                    src={props.musicImgPath} \r\n                    alt={props.musicImgName} \r\n                />\r\n            </div>\r\n            <div className='image-upload-button'>\r\n                <div className='music-upload-space d-flex justify-content-center align-items-center'>\r\n                    <span className='music-image-title'>\r\n                        \" {props.musicImgName === \"\" ? \"Select Image\" : props.musicImgName} \"\r\n                    </span>\r\n                    {\r\n                        props.musicImgName === \"\" ? <React.Fragment /> : \r\n                        <Button title='Remove Image' close onClick={props.removeSelectedImage} />\r\n                    }\r\n                </div>\r\n                <div className='music-upload-space'>\r\n                    <input \r\n                        accept='image/*'\r\n                        type=\"file\" \r\n                        onChange={props.uploadMusicImage} \r\n                        ref={props.hiddenFileInput}\r\n                        style={{display: \"none\"}}\r\n                    />\r\n                    <Button \r\n                        onClick={props.handleClick}\r\n                        color='dark'\r\n                        outline={true}\r\n                    >\r\n                        Upload Image\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewImageUpload;","import React, {useRef, useState} from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport NewImageUpload from './newImageUpload';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\nimport { apiLinks } from '../../connection.config';\r\nimport * as serviceWorker from \"../../client/index\";\r\nimport { Error, Success } from '../Notification/Notification';\r\n\r\nconst AddNewModal = (props) => {\r\n\r\n    const hiddenFileInput = useRef(null);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [url, setUrl] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [checkBoxChecked, setCheckBoxChecked] = useState(false);\r\n\r\n    const [artistImg, setArtistImg] = useState({});\r\n    const [artistImgName, setArtistImgName] = useState('');\r\n    const [artistImgPath, setArtistPath] = useState('/assets/images/artist-design.png');\r\n  \r\n    const handleClick = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n        \r\n    const uploadArtistImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setArtistImg(event.target.files);\r\n            setArtistImgName(event.target.files[0].name);\r\n            setArtistPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n\r\n    const removeSelectedImage = () => {\r\n        setArtistImg({});\r\n        setArtistImgName('');\r\n        setArtistPath('/assets/images/artist-design.png');\r\n    };\r\n\r\n    const setData = (response) => {\r\n        if( (props.tabId === 2 && props.id === '1') ||\r\n            (props.tabId === 3 && props.id === '2') ||\r\n            (props.tabId === 4 && props.id === '3') ||\r\n            (props.tabId === 5 && props.id === '4') ||\r\n            (props.tabId === 6 && props.id === '5')){\r\n                if(props.tabId === 2){\r\n                    props.artistRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 3){\r\n                    props.genreRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 4){\r\n                    props.categoryRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 5){\r\n                    props.broadcastRows.push(...(response.data.rowData));\r\n                }\r\n                else if(props.tabId === 6){\r\n                    props.playlistRows.push(...(response.data.rowData));\r\n                }\r\n                else{\r\n                    Error(\"Unable to update search list by tabId\");\r\n                }\r\n            }\r\n    };\r\n\r\n    const addDetail = async () => {\r\n        let controller = new AbortController();\r\n\r\n        try{\r\n\r\n            setLoader(true);\r\n            const names = name.split(',').map(nam => nam.trim());\r\n            \r\n            const formData = new FormData();\r\n            formData.append('names', names);\r\n            formData.append(\"show\", checkBoxChecked);\r\n            let response = {};\r\n\r\n            if(props.id === '1'){\r\n                formData.append('artistImg', artistImg[0]);\r\n                response = await axios.post(apiLinks.addArtists, formData, {\r\n                    signal: controller.signal\r\n                });\r\n            }\r\n            else if(props.id === '2'){\r\n                response = await axios.post(apiLinks.addGenre, {\r\n                    types: names,\r\n                    show: checkBoxChecked,\r\n                }, {\r\n                    signal: controller.signal,\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === \"3\"){\r\n                response = await axios.post(apiLinks.addCategory, {\r\n                    types: names,\r\n                    show: checkBoxChecked,\r\n                }, {\r\n                    signal: controller.signal,\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === '4'){\r\n                formData.append(\"url\", url);\r\n                formData.append(\"body\", body);\r\n                formData.append(\"title\", name);\r\n                formData.append('image', artistImg[0]);\r\n\r\n                const today = new Date().toISOString();\r\n                formData.append(\"today\", today);\r\n                \r\n                response = await serviceWorker.Broadcast(formData);\r\n            }\r\n            else{\r\n                formData.append(\"name\", name);\r\n                formData.append('image', artistImg[0]);\r\n                response = await axios.post(apiLinks.createPlaylist, formData, {\r\n                    signal: controller.signal\r\n                });\r\n            }\r\n\r\n            if(Object.keys(response).length === 0 && response.constructor === Object){\r\n                const error = new Error();\r\n                error.message = \"Something went wrong, could add data now\";\r\n                throw error;\r\n            }\r\n            else{\r\n                if(response.data.code === 200){\r\n                    controller = null;\r\n                    Success(response.data.message);\r\n                    setData(response);\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err.message, err);\r\n        }\r\n        finally{\r\n            controller?.abort();\r\n            setLoader(false);\r\n            props.toggle(false);\r\n        }\r\n    };\r\n\r\n    const removeDetail = () => {\r\n        setName('');\r\n        setCheckBoxChecked(false);\r\n        removeSelectedImage();\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            \r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n\r\n            <Modal\r\n                isOpen={true}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='lg'\r\n                toggle={() => props.toggle(false)}\r\n            >\r\n                <ModalHeader toggle={() => props.toggle(false)}>\r\n                    <span className='modal-header-title'>\r\n                        {props.header}\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {props.id === '1' || props.id === \"4\" || props.id === \"5\" ? \r\n                        <NewImageUpload \r\n                            musicImgName={artistImgName}\r\n                            musicImgPath={artistImgPath}\r\n                            removeSelectedImage={removeSelectedImage}\r\n                            uploadMusicImage={uploadArtistImage}\r\n                            hiddenFileInput={hiddenFileInput}\r\n                            handleClick={handleClick}\r\n                        /> : \r\n                        <React.Fragment />\r\n                    }\r\n                    <TextInput \r\n                        id={props.id}\r\n                        required\r\n                        check={props.id === \"4\" ? false : true}\r\n                        labelName={props.id === \"5\" ? \"Add New Playlist\" : props.id === '4' ? \"Add BroadCast Title\" : \r\n                                    props.id === \"1\" ? \"Add New Name\" : \"Add New Type\"}\r\n                        label={props.id === \"5\" ? \"Add Playlist Name\" : props.id === '4' ? \"Add BroadCast Heading\" : \r\n                                    props.id === \"1\" ? \"Enter Artist Name\" : \"Enter Comma separated Types\"}\r\n                        value={name}\r\n                        onChange={setName}\r\n                        checkedValue={checkBoxChecked}\r\n                        onCheckBoxChange={setCheckBoxChecked}\r\n                    />\r\n                    {\r\n                        props.id === '4' ? \r\n                        <React.Fragment>\r\n                            <TextInput \r\n                                id={props.id}\r\n                                required\r\n                                check={false}\r\n                                labelName=\"Add Broadcast Body\"\r\n                                label=\"Add Broadcast Content\"\r\n                                value={body}\r\n                                onChange={setBody}\r\n                                checkedValue={checkBoxChecked}\r\n                                onCheckBoxChange={setCheckBoxChecked}\r\n                            />\r\n                            <TextInput \r\n                                id={props.id}\r\n                                required\r\n                                check={false}\r\n                                labelName=\"Add Broadcast Nav Link\"\r\n                                label=\"Add Relative Link\"\r\n                                value={url}\r\n                                onChange={setUrl}\r\n                                checkedValue={checkBoxChecked}\r\n                                onCheckBoxChange={setCheckBoxChecked}\r\n                            /> \r\n                        </React.Fragment>\r\n                        : \r\n                        <React.Fragment />\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={addDetail}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeDetail}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddNewModal;\r\n","import React from 'react';\r\nimport { Row, Col, Label } from 'reactstrap';\r\nimport { InputLabel, Select, OutlinedInput, MenuItem, \r\n        Checkbox, ListItemText, FormControl} from '@mui/material';\r\n\r\nconst CheckBoxInput = (props) => {\r\n    \r\n    return (\r\n        <FormControl sx={{width: '100%'}}>\r\n            <Row className='music-detail-fields'>\r\n                <Col className=\"mt-2 mb-3\" xs=\"5\">\r\n                    <Label className=\"label-styling-checkbox\" style={{ justifyContent: \"flex-end\" }}\r\n                        for={props.id}>\r\n                        {props.labelName}\r\n                    </Label>\r\n                </Col>\r\n                <Col className=\"mt-2 mb-3\" xs=\"7\">\r\n                    <InputLabel \r\n                        id={`demo-multiple-checkbox-label ${props.id}`}\r\n                        className=\"customized-form-label\"\r\n                    >\r\n                        {props.label}\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-multiple-checkbox-label\"\r\n                        id=\"demo-multiple-checkbox\"\r\n                        multiple\r\n                        className=\"music-input-detail\"\r\n                        value={props.type}\r\n                        onChange={props.handleChange}\r\n                        input={<OutlinedInput label=\"Tag\" />}\r\n                        renderValue={(selected) => {\r\n                            if(selected.length === 0){\r\n                                return <em>Select Artist</em>;\r\n                            }\r\n                            return selected.join(', ');\r\n                        }}\r\n                        MenuProps={props.MenuProps}\r\n                    >\r\n                    {props.names.map((name) => (\r\n                        <MenuItem key={Math.floor(Math.random() * 10000 + 1)} value={name.name || name.type || name}>\r\n                            <Checkbox checked={props.type.indexOf(name.name || name.type || name) > -1} />\r\n                            <ListItemText primary={name.name || name.type || name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default CheckBoxInput;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport CheckBoxInput from './checkBoxInput';\r\nimport NewImageUpload from './newImageUpload';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n    style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n    },\r\n    },\r\n};\r\n\r\nconst NewMusicAdd = (props) => {\r\n\r\n    const [genreList, setGenreList] = useState([]);\r\n    const [artistList, setArtistList] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n\r\n    const {genre, category, musicName, artist, musicImgPath, musicImgName, addMusicWidget, hiddenFileInput, musicDuration,\r\n        hiddenMusicInput, uploadMusic, handleClick, handleChange, saveUploadMusic, handleMusicClick, fav, setFav,\r\n        uploadMusicImage, handleGenreChange, removeMusicDetails, removeSelectedSong, removeSelectedImage,\r\n        updateAddMusicWidget, handleCategoryChange, musicTitle, albumTitle, setMusicTitle, setAlbumTitle} = props;\r\n\r\n    useEffect(() => {\r\n\r\n        let genreController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let categoryController = new AbortController();\r\n\r\n        const getGenreList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setGenreList(data);\r\n                    genreController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setGenreList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setGenreList([]);\r\n            }\r\n        };\r\n        \r\n        const getArtistList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setArtistList(data);\r\n                    artistController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setArtistList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setArtistList([]);\r\n            }\r\n        };\r\n\r\n        const getCategoryList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message\r\n                    setCategoryList(data);\r\n                    categoryController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setCategoryList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setCategoryList([]);\r\n            }\r\n        };\r\n\r\n        getGenreList();\r\n        getArtistList();\r\n        getCategoryList();\r\n\r\n        return () => {\r\n            genreController?.abort();\r\n            artistController?.abort();\r\n            categoryController?.abort();\r\n        };\r\n\r\n    }, []);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Modal\r\n                isOpen={addMusicWidget}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='xl'\r\n                toggle={updateAddMusicWidget}\r\n            >\r\n                <ModalHeader toggle={updateAddMusicWidget}>\r\n                    <span className='modal-header-title'>\r\n                        Add New Song\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <div className='music-details'>\r\n                                \r\n\r\n                                <TextInput \r\n                                    required\r\n                                    id=\"song-name\"\r\n                                    labelName=\"Song Name\"\r\n                                    label=\"Enter Song Name\"\r\n                                    check={true}\r\n                                    value={musicTitle}\r\n                                    onChange={setMusicTitle}\r\n                                    checkedValue={fav}\r\n                                    onCheckBoxChange={setFav}\r\n                                />\r\n                                <TextInput \r\n                                    id=\"album-name\"\r\n                                    labelName=\"Album Name\"\r\n                                    label=\"Enter Album Name\"\r\n                                    value={albumTitle}\r\n                                    onChange={setAlbumTitle}\r\n                                />\r\n\r\n                                <CheckBoxInput \r\n                                    id=\"artist-name\" labelName=\"Artist Name\"\r\n                                    label=\"Select Artist\" type={artist}\r\n                                    handleChange={handleChange} MenuProps={MenuProps}\r\n                                    names={artistList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"genre-name\" labelName=\"Genre Name\"\r\n                                    label=\"Select Genre\" type={genre}\r\n                                    handleChange={handleGenreChange} MenuProps={MenuProps}\r\n                                    names={genreList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"category-name\" labelName=\"Category Name\"\r\n                                    label=\"Select Category\" type={category}\r\n                                    handleChange={handleCategoryChange} MenuProps={MenuProps}\r\n                                    names={categoryList}\r\n                                />\r\n\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n\r\n                            <Row>\r\n                                <div className='music-upload-button'>\r\n                                    <div className='music-upload-detail d-flex justify-content-center align-items-center'>\r\n                                        <span className='music-image-title' style={{textAlign: \"center\"}}>\r\n                                            <div>\r\n                                                \" {musicName.trim().length === 0 ? \"Select File\" : musicName} \"\r\n                                            </div>\r\n                                            <div>\r\n                                                Duration: {musicDuration !== 0 ? calculateSongTime(musicDuration) : '00:00'}\r\n                                            </div>\r\n                                        </span>\r\n                                        {musicName.trim().length === 0 ? \r\n                                            <React.Fragment /> : \r\n                                            <Button close title='Remove song' onClick={removeSelectedSong}/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className='music-upload-detail'>\r\n                                        <input \r\n                                            type=\"file\" \r\n                                            accept='audio/*'\r\n                                            onChange={uploadMusic} \r\n                                            ref={hiddenMusicInput}\r\n                                            style={{display: \"none\"}}\r\n                                        />\r\n                                        <Button \r\n                                            onClick={handleMusicClick}\r\n                                            color='dark'\r\n                                            outline={true}\r\n                                        >\r\n                                            Upload Song\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Row>\r\n\r\n                            <NewImageUpload \r\n                                musicImgName={musicImgName}\r\n                                musicImgPath={musicImgPath}\r\n                                removeSelectedImage={removeSelectedImage}\r\n                                uploadMusicImage={uploadMusicImage}\r\n                                hiddenFileInput={hiddenFileInput}\r\n                                handleClick={handleClick}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={saveUploadMusic}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeMusicDetails}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NewMusicAdd;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'type', label: 'Genre Type', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst GenreTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n  \r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminGenreFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                              : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? (`${(rowsPerPage*page) + (index+1)}.`) : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editGenre(row.id, 'genre')} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default GenreTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'title', label: 'Title', minWidth: 100, align: \"left\" },\r\n  { id: 'body', label: 'Body', minWidth: 100, align: \"left\" },\r\n  { id: 'timestamp', label: 'Time', minWidth: 100, align: \"center\" },\r\n];\r\n\r\nconst BroadcastTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminCategoryFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default BroadcastTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'name', label: 'Artist Name', minWidth: 150, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst ArtistsTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminArtistFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editArtist(row.id, \"artist\")} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ArtistsTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: \"Sr. No.\", minWidth: 80, align: \"center\" },\r\n  { id: 'musicTitle', label: 'Music Name', minWidth: 170 },\r\n  { id: 'albumTitle', label: 'Album Name', minWidth: 130 },\r\n  { id: 'artists', label: 'Artists', minWidth: 70 },\r\n  { id: 'genre', label: 'Genre', minWidth: 70 },\r\n  { id: 'category', label: 'Category', minWidth: 70 },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nexport default function StickyHeadTable(props) {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminMusicFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className={`admin-table-content admin-table-heading ${isDark ? \"dark\" : \"light\"}`}\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell\r\n                  className={`admin-table-content admin-table-heading ${isDark ? \"dark\" : \"light\"}`}\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className={`admin-table-content admin-table-heading ${isDark ? \"dark\" : \"light\"}`}\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                        let value;\r\n                        if(column.id !== 'srno')\r\n                          value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div key={item} className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === \"srno\" ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.floor(Math.random() * 10000 + 1)} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editRow(row.id)} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.floor(Math.random() * 10000 + 1)} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error } from '../Notification/Notification';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'type', label: 'Category Type', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst CategoryTable = (props) => {\r\n\r\n  const { setRows } = props;\r\n\r\n  const isDark = useContext(IsDark);\r\n\r\n  const label = {\r\n    inputProps: {\r\n        'aria-label': \"Favourite Check\"\r\n    }\r\n  };\r\n\r\n  const rows = props.rows || [];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: isDark ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [props.rows]);\r\n\r\n  const updateFavState = async (checked, id) => {\r\n    try{\r\n      const response = await axios.put(apiLinks.updateAdminCategoryFav+id, {\r\n        state: !checked\r\n      }, {\r\n        headers: {\r\n          'content-type': \"application/json\"\r\n        }\r\n      });\r\n      if(response.data.code === 200){\r\n        const data = props.rows.filter(row => row.id === id);\r\n        data[0].show = !checked;\r\n        setRows(prev => prev.filter(row => {\r\n            if(row.id === id){\r\n              return data;\r\n            }\r\n            else{\r\n              return row;\r\n            }\r\n        }))\r\n        // Success(response.data.message);\r\n      }\r\n      else{\r\n        console.log(\"Error Occured\", response.data.message);\r\n        // Error(response.data.message);\r\n      }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      Error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    className=\"admin-table-content admin-table-heading\"\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                  > \r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align='center'\r\n                  key=\"edit\"\r\n                  style={{ maxWidth: 60 }}\r\n                >\r\n                  Edit\r\n                </TableCell>\r\n                <TableCell\r\n                  className=\"admin-table-content admin-table-heading\"\r\n                  align=\"center\"\r\n                  key=\"delete\"\r\n                  style={{ maxWidth: 100 }}\r\n                >\r\n                  Delete\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                      {columns.map((column, idx) => {\r\n                          let value;\r\n                          if(column.id !== 'srno')\r\n                              value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            className=\"admin-table-content\" key={idx} align={column.align}>\r\n                            {typeof value === 'object' ? \r\n                              value.map((item) => {\r\n                                return (\r\n                                  <div className=\"admin-table-array-setup\">\r\n                                    <ArrowRightIcon />\r\n                                    {item}\r\n                                  </div>\r\n                                );\r\n                              })\r\n                            : column.id === 'show' ? \r\n                              <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                            : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                        <Edit className=\"table-edit-delete-button\" onClick={() => props.editCategory(row.id, 'category')} />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                        <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className=\"custom-table-pagination\"\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default CategoryTable;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useState, useEffect, useContext, useRef } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { blue } from '@mui/material/colors';\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\nimport ViewListIcon from '@mui/icons-material/ViewList';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nimport Button from '@mui/material/Button';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from '../Notification/Notification';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\n\r\nconst columns = [\r\n  { id: 'srno', label: 'Sr. No.', minWidth: 80, align: \"center\" },\r\n  { id: 'playlist_name', label: 'Playlist Title', minWidth: 100, align: \"left\" },\r\n  { id: 'show', label: 'Fav', maxWidth: 50, align: \"center\" },\r\n];\r\n\r\nconst commands = [  {name: 'Edit Playlist Name', icon: <DriveFileRenameOutlineIcon />}, \r\n                    {name: 'Add / Remove Songs', icon: <ViewListIcon />}];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst SimpleDialog = (props) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleClose = () => {\r\n        onClose(-1);\r\n    };\r\n\r\n    const handleListItemClick = (value) => {\r\n        onClose(commands.findIndex(command => command.name === value.name));\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <DialogTitle>Select Edit Type</DialogTitle>\r\n            <List sx={{ pt: 0 }}>\r\n                {commands.map((command) => (\r\n                    <ListItem button onClick={() => handleListItemClick(command)} key={command.name}>\r\n                        <ListItemAvatar>\r\n                            <Avatar sx={{ bgcolor: blue[100], color: blue[600] }}>\r\n                                {command.icon}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={command.name} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst PlaylistTable = (props) => {\r\n    const descriptionElementRef = useRef(null);\r\n\r\n    const { setRows } = props;\r\n\r\n    const isDark = useContext(IsDark);\r\n\r\n    const label = {\r\n        inputProps: {\r\n            'aria-label': \"Favourite Check\"\r\n        }\r\n    };\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const rows = props.rows || [];\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [updateElement, setUpdateElement] = useState(0);\r\n\r\n    const [openMusicList, setOpenMusicList] = useState(false);\r\n    const [editMusicList, setEditMusicList] = useState({});\r\n    const [existingMusicList, setExistingMusicList] = useState([]);\r\n\r\n    const [openAddMusicList, setOpenAddMusicList] = useState(false);\r\n    const [addMusicList, setAddMusicList] = useState([]);\r\n    const [checked, setChecked] = useState([]);\r\n\r\n    const handleAddMusicOpen = async () => {\r\n        try{\r\n            setLoader(true);\r\n            const response = await axios.get(apiLinks.getMusicIdNameAlbum);\r\n            if(response.data.code === 200){\r\n                setChecked([...existingMusicList]);\r\n                setAddMusicList(response.data.message);\r\n            }\r\n            else{\r\n                setAddMusicList([]);\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error while getting music list\", err);\r\n            setAddMusicList([]);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n        setOpenAddMusicList(true);\r\n    };\r\n\r\n    const handleAddMusicClose = () => {\r\n        setAddMusicList([]);\r\n        setChecked([]);\r\n        setOpenAddMusicList(false);\r\n    };\r\n\r\n    const saveAddMusic = async () => {\r\n        let abortController = new AbortController();\r\n        try{\r\n            setLoader(true);\r\n            const songId = checked.map(item => item.id);\r\n            const response = await axios.put(apiLinks.updatePlaylistSongs+editMusicList.id, \r\n                {\r\n                    data: songId,\r\n                }, \r\n                {\r\n                    signal: abortController.signal,\r\n                }\r\n            );\r\n            if(response.data.code === 200){\r\n                abortController = null;\r\n                Success(response.data.message);\r\n                handleAddMusicClose();\r\n                handleSongListClose();\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error Occured while saving playlist data\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n\r\n        abortController?.abort();\r\n    };\r\n\r\n    const handleClickOpen = (id) => {\r\n        setUpdateElement(id);\r\n        setOpen(true);\r\n    };\r\n\r\n    const getSelectedPlaylistSongs = async (playlist) => {\r\n        let signalAborter = new AbortController();\r\n\r\n        try{\r\n            setLoader(true);\r\n            const response = await axios.get(apiLinks.getPlaylistById+playlist.id, {\r\n                signal: signalAborter.signal\r\n            });\r\n\r\n            if(response.data.code === 200){\r\n                setExistingMusicList(response.data.message);\r\n                signalAborter = null;\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n                setExistingMusicList([]);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error while fetching playlist song list\", err);\r\n            Error(err.message);\r\n            setExistingMusicList([]);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n        signalAborter?.abort();\r\n    };\r\n\r\n    const handleClose = (index) => {\r\n        if(index === -1){\r\n            setUpdateElement(0);\r\n        }\r\n        else if(index === 0){\r\n            props.editPlaylist(updateElement, \"playlist\");\r\n        }\r\n        else if(index === 1){\r\n            const list = rows.filter(row => row.id === updateElement);\r\n            setEditMusicList(list[0]);\r\n            getSelectedPlaylistSongs(list[0]);\r\n            setOpenMusicList(prev => !prev);\r\n        }\r\n        else{\r\n            Error(\"Invalid Dialog Option Selected\");\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSongListClose = () => {\r\n        setExistingMusicList([]);\r\n        setOpenMusicList(false);\r\n    };\r\n\r\n    const handleSongListSave = async () => {\r\n        let abortController = new AbortController();\r\n        try{\r\n            setLoader(true);\r\n            const songId = existingMusicList.map(item => item.id);\r\n            const response = await axios.put(apiLinks.updatePlaylistSongs+editMusicList.id, \r\n                {\r\n                    data: songId,\r\n                },\r\n                {\r\n                    signal: abortController.signal,\r\n                }\r\n            );\r\n            if(response.data.code === 200){\r\n                abortController = null;\r\n                Success(response.data.message);\r\n                handleSongListClose();\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error Occured while saving playlist data\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n        abortController?.abort();\r\n    };\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n        mode: isDark ? \"dark\" : \"light\"\r\n        }\r\n    });\r\n\r\n    const handleToggle = (value) => {\r\n        const currentIndex = checked.findIndex(check => check.id === value.id);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } \r\n        else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const deletePlaylistSong = (item) => {\r\n        const index = existingMusicList.findIndex(music => music.id === item.id);\r\n        if(index === -1){\r\n            Error(\"Invalid Item\");\r\n        }\r\n        else{\r\n            const newList = [...existingMusicList];\r\n            newList.splice(index, 1);\r\n            setExistingMusicList(newList);\r\n        }\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [props.rows]);\r\n\r\n    const updateFavState = async (checked, id) => {\r\n        try{\r\n        const response = await axios.put(apiLinks.updateAdminPlaylistFav+id, {\r\n            state: !checked\r\n        }, {\r\n            headers: {\r\n            'content-type': \"application/json\"\r\n            }\r\n        });\r\n        if(response.data.code === 200){\r\n            const data = props.rows.filter(row => row.id === id);\r\n            data[0].show = !checked;\r\n            setRows(prev => prev.filter(row => {\r\n                if(row.id === id){\r\n                return data;\r\n                }\r\n                else{\r\n                return row;\r\n                }\r\n            }))\r\n            // Success(response.data.message);\r\n        }\r\n        else{\r\n            console.log(\"Error Occured\", response.data.message);\r\n            // Error(response.data.message);\r\n        }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            Error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n        \r\n        <SimpleDialog\r\n            open={open}\r\n            onClose={handleClose}\r\n        />\r\n\r\n        <Dialog\r\n            fullScreen\r\n            open={openMusicList}\r\n            onClose={handleSongListClose}\r\n            TransitionComponent={Transition}\r\n        >\r\n            <AppBar sx={{ position: 'relative' }}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={handleSongListClose}\r\n                        aria-label=\"close\"\r\n                    >\r\n                    <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                        Add / Remove Songs\r\n                    </Typography>\r\n                    <Button autoFocus color=\"inherit\" onClick={handleAddMusicOpen}>\r\n                        Add\r\n                    </Button>\r\n                    <Button autoFocus color=\"inherit\" onClick={handleSongListSave}>\r\n                        Save\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <List dense={false}>\r\n                {\r\n                    existingMusicList.length !== 0 ? \r\n                        existingMusicList.map(item => {\r\n                            return (\r\n                                <ListItem \r\n                                    key={item.id}\r\n                                    secondaryAction={\r\n                                        <IconButton edge=\"end\" aria-label=\"delete\" \r\n                                            onClick={() => deletePlaylistSong(item)}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                >\r\n                                    <ListItemAvatar>\r\n                                        <Avatar\r\n                                            alt={item.musicTitle}\r\n                                            src={apiLinks.getImage+item.musicImageKey}\r\n                                        />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={item.musicTitle}\r\n                                        secondary={item.albumTitle}\r\n                                    />\r\n                                </ListItem>\r\n                            )\r\n                        }) :\r\n                        <DialogContentText\r\n                            id=\"scroll-dialog-description\"\r\n                            ref={descriptionElementRef}\r\n                            tabIndex={-1}\r\n                        >\r\n                            <span style={{ textAlign: \"center\", display: \"block\", fontSize: \"1.5rem\" }}>\r\n                                'Songs are not available'\r\n                            </span>\r\n                        </DialogContentText>\r\n                }\r\n            </List>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n            open={openAddMusicList}\r\n            onClose={handleAddMusicClose}\r\n            scroll={'paper'}\r\n            aria-labelledby=\"scroll-dialog-title\"\r\n            aria-describedby=\"scroll-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"scroll-dialog-title\">Add Songs to \"{editMusicList['playlist_name']}\"</DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                    {\r\n                        addMusicList.length !== 0 ? \r\n                        <List dense sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                            {addMusicList.map((value) => {\r\n                                const labelId = `checkbox-list-secondary-label-${value.id}`;\r\n                                return (\r\n                                    <ListItem\r\n                                        key={value.id}\r\n                                        secondaryAction={\r\n                                            <Checkbox\r\n                                                edge=\"end\"\r\n                                                onChange={() => handleToggle(value)}\r\n                                                checked={checked.findIndex(music => music.id === value.id) !== -1}\r\n                                                inputProps={{ 'aria-labelledby': labelId }}\r\n                                            />\r\n                                        }\r\n                                        disablePadding\r\n                                    >\r\n                                        <ListItemButton>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar\r\n                                                alt={value.musicTitle}\r\n                                                src={apiLinks.getImage+value.musicImageKey}\r\n                                            />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText id={labelId} primary={value.musicTitle} secondary={value.albumTitle} />\r\n                                        </ListItemButton>\r\n                                    </ListItem>\r\n                                );\r\n                            })}\r\n                        </List> :\r\n                        <DialogContentText\r\n                            id=\"scroll-dialog-description\"\r\n                            ref={descriptionElementRef}\r\n                            tabIndex={-1}\r\n                        >\r\n                            <span style={{ textAlign: \"center\", display: \"block\" }}>\r\n                                'Songs are not available'\r\n                            </span>\r\n                        </DialogContentText>\r\n                    }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleAddMusicClose}>Cancel</Button>\r\n                <Button onClick={saveAddMusic}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        {\r\n            loader ?\r\n            <SpinnerGrow /> :\r\n            <React.Fragment />\r\n        }\r\n\r\n        <ThemeProvider theme={theme}>\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }} className=\"bg-fade\">\r\n            <TableContainer>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                <TableRow>\r\n\r\n                    {columns.map((column) => (\r\n                    <TableCell\r\n                        className=\"admin-table-content admin-table-heading\"\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\r\n                    > \r\n                        {column.label}\r\n                    </TableCell>\r\n                    ))}\r\n\r\n                    <TableCell\r\n                        className=\"admin-table-content admin-table-heading\"\r\n                        align='center'\r\n                        key=\"edit\"\r\n                        style={{ maxWidth: 60 }}\r\n                    >\r\n                        Edit\r\n                    </TableCell>\r\n\r\n                    <TableCell\r\n                        className=\"admin-table-content admin-table-heading\"\r\n                        align=\"center\"\r\n                        key=\"delete\"\r\n                        style={{ maxWidth: 100 }}\r\n                    >\r\n                        Delete\r\n                    </TableCell>\r\n\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {rows\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row, index) => {\r\n                    return (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                        {columns.map((column, idx) => {\r\n                            let value;\r\n                            if(column.id !== 'srno')\r\n                                value = row[column.id];\r\n                            return (\r\n                            <TableCell\r\n                                className=\"admin-table-content\" key={idx} align={column.align}>\r\n                                {typeof value === 'object' ? \r\n                                value.map((item) => {\r\n                                    return (\r\n                                    <div className=\"admin-table-array-setup\">\r\n                                        <ArrowRightIcon />\r\n                                        {item}\r\n                                    </div>\r\n                                    );\r\n                                })\r\n                                : column.id === 'show' ? \r\n                                <Checkbox checked={row[column.id]} onClick={(e) => updateFavState(row[column.id], row.id)} {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n                                : column.id === 'srno' ? `${((rowsPerPage*page) + (index+1))}.` : value}\r\n                            </TableCell>\r\n                            );\r\n                        })}\r\n                        <TableCell\r\n                            className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 60 }}>\r\n                            <Edit className=\"table-edit-delete-button\" onClick={() => handleClickOpen(row.id)} />\r\n                        </TableCell>\r\n                        <TableCell\r\n                            className=\"admin-table-content\" key={Math.random()} align=\"center\" style={{ maxWidth: 100 }}>\r\n                            <Delete className=\"table-edit-delete-button\" onClick={() => props.toggleWarning(row.id)} />\r\n                        </TableCell>\r\n                        </TableRow>\r\n                    );\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n            className=\"custom-table-pagination\"\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n        </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlaylistTable;\r\n","import React from 'react';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\nexport const DeleteWarning = (props) => {\r\n\r\n    return (\r\n        <Modal \r\n            centered={true}\r\n            scrollable={false}\r\n            backdrop\r\n            isOpen={true}\r\n            toggle={() => props.toggle()}\r\n        >   \r\n            <ModalHeader \r\n                toggle={() => props.toggle()}\r\n            >\r\n                Warning\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                Are you sure to delete \"{props.musicTitle}\" ?\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    outline\r\n                    onClick={() => props.deleteRow()}\r\n                    color=\"success\"\r\n                >\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                        Confirm <DoneIcon /> \r\n                    </div>\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};","import React from 'react';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\n\r\nimport { apiLinks } from '../../connection.config';\r\n\r\nconst EditImageUpload = (props) => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"image-preview\">\r\n                <img \r\n                    className='image-preview-img' \r\n                    src={props.imageKey && (apiLinks.getImage + props.imageKey)} \r\n                    alt={props.musicImgName} \r\n                />\r\n            </div>\r\n            <div className='image-upload-button'>\r\n                <div className='music-upload-space'>\r\n                    <span className='music-image-title'>\r\n                        <ImageIcon /> &ensp; \" {props.imageKey === \"\" ? \"Select Image\" : props.imageKey} \"\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditImageUpload;","import axios from 'axios';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport PlayCircleIcon from '@mui/icons-material/PlayCircle';\r\nimport PauseCircleIcon from '@mui/icons-material/PauseCircle';\r\nimport StopCircleIcon from '@mui/icons-material/StopCircle';\r\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\r\n\r\nimport TextInput from './textInput';\r\nimport CheckBoxInput from './checkBoxInput';\r\nimport EditImageUpload from './editImageUpload';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from \"../Notification/Notification\";\r\nimport { SpinnerRotate } from \"../spinner/spinner-grow\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n    style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n    },\r\n    },\r\n};\r\n\r\n// let audioRef;\r\n\r\nconst EditExistingMusic = (props) => {\r\n    \r\n    const audioRef = useRef();\r\n    // const rangeRef = useRef();\r\n    // const animationRef = useRef();\r\n\r\n    // const [endTime, setEndTime] = useState(0);\r\n    // const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    const [load, setLoad] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [currentPaused, setCurrentPaused] = useState(false);\r\n\r\n    const [musicKey, setMusicKey] = useState(\"\");\r\n    const [musicImgKey, setMusicImgKey] = useState(\"\");\r\n\r\n    const {genre, category, artist, musicTitle, albumTitle, editMusicWidget, editId,\r\n            handleChange,  setMusicTitle, setLoader, updateRow, fav, setFav,\r\n            setAlbumTitle, handleGenreChange, handleCategoryChange, \r\n            updateEditMusicWidget } = props;\r\n\r\n    const [genreList, setGenreList] = useState([]);\r\n    const [artistList, setArtistList] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    \r\n    const closeWidget = () => {\r\n        // cancelAnimationFrame(animationRef.current);\r\n        updateEditMusicWidget();\r\n    };\r\n\r\n    // const calculateTime = (time) => {\r\n    //     if(time !== Infinity){\r\n    //         const minutes = Math.floor(time/60);\r\n    //         const returnMinutes = minutes >= 10 ? `${minutes}` : `0${minutes}`;\r\n    \r\n    //         const seconds = Math.floor(time%60);\r\n    //         const returnSeconds = seconds >= 10 ? `${seconds}` : `0${seconds}`;\r\n    \r\n    //         return `${returnMinutes}:${returnSeconds}`;\r\n    //     }\r\n    // };\r\n\r\n    const stopSong = () => {\r\n        \r\n        audioRef.current.pause();\r\n        audioRef.current.currentTime = 0;\r\n        \r\n        setPlaying(prev => !prev);\r\n        if(currentPaused)\r\n            setCurrentPaused(prev => !prev);\r\n    };\r\n\r\n    const pauseSong = () => {\r\n        if(currentPaused)\r\n            audioRef.current.play();\r\n        else\r\n            audioRef.current.pause();\r\n        setCurrentPaused(prev => !prev);\r\n    };\r\n\r\n    const updateSongState = async () => {\r\n        setPlaying(prev => !prev);\r\n        if(playing === false){\r\n            try{\r\n                setLoad(true);\r\n                // src={musicKey && (apiLinks.getAudio + musicKey)}\r\n                // audioRef.current.src = apiLinks.getAudio + musicKey;\r\n                audioRef.current.play();\r\n                audioRef.current.onended = () => {\r\n                    setCurrentPaused(prev => !prev);\r\n                    setPlaying(prev => !prev);\r\n                }\r\n                // animationRef.current = requestAnimationFrame(whilePlaying);\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured while fetching audio\", err);\r\n                Error(err.message);\r\n            }\r\n            finally{\r\n\r\n                if(audioRef.current){\r\n                    audioRef.current.oncanplaythrough  = () => {\r\n                        console.log(audioRef.current.duration);\r\n                        \r\n                        // const secs = Math.floor(audioRef.current.duration);\r\n                        // rangeRef.current.max = secs;\r\n                        // setEndTime(secs);\r\n                        setLoad(false);\r\n                    }\r\n\r\n                    if(!(audioRef.current.paused) && audioRef.current.readyState > 0)\r\n                        setLoad(false);\r\n                }\r\n\r\n            }\r\n        }\r\n        else{\r\n            audioRef.current.pause();\r\n            // cancelAnimationFrame(animationRef.current);\r\n        }\r\n\r\n    };\r\n\r\n    const saveEditFile = async () => {\r\n\r\n        try{\r\n            setLoader(true);\r\n            \r\n            const today = new Date().toISOString();\r\n            const formData = {\r\n                \"musicTitle\": musicTitle,\r\n                \"albumTitle\": albumTitle,\r\n                \"artist\": JSON.stringify(artist),\r\n                \"genre\": JSON.stringify(genre),\r\n                \"category\": JSON.stringify(category),\r\n                \"date\": today,\r\n                \"show\": fav\r\n            };\r\n\r\n            const response = await axios.put(apiLinks.updateAdminData+editId, formData, {\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                }\r\n            });\r\n            \r\n            if(response.data.code === 200){\r\n                updateRow(response.data.data);\r\n                Success(response.data.message);\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n\r\n            // console.log(response.data);\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error Occured while updating data\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n            closeWidget();\r\n        }\r\n\r\n    };\r\n\r\n    // const changePlayerCurrentTime = () => {\r\n    //     rangeRef.current.style.setProperty('--seek-before-width', `${(Number(rangeRef.current.value) / endTime) * 100}%`);\r\n    //     setCurrentTime(rangeRef.current.value);\r\n    // };\r\n\r\n    // const changeRange = async (event) => {\r\n    //     try{\r\n    //         rangeRef.current.value = event.target.value;     \r\n    //         audioRef.current.src = apiLinks.getAudio + musicKey;\r\n    //         audioRef.current.play();\r\n    //         audioRef.current.addEventListener('canplay', () => {\r\n    //             audioRef.current.currentTime = parseInt(event.target.value);\r\n    //         });\r\n    //         changePlayerCurrentTime();\r\n    //     }\r\n    //     catch(err){\r\n    //         console.log(\"An Error Occured\", err.message);\r\n    //     }\r\n    // };\r\n\r\n    // const whilePlaying = () => {\r\n        // rangeRef.current.value = audioRef.current.currentTime;\r\n        // changePlayerCurrentTime();\r\n        // animationRef.current = requestAnimationFrame(whilePlaying);\r\n\r\n    // };\r\n\r\n    useEffect(() => {\r\n\r\n        let imgFileController = new AbortController();\r\n        let audioFileController = new AbortController();\r\n\r\n        const getImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getImageKey+editId, {\r\n                    signal: imgFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.musicImageKey);\r\n                    imgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        getImageFileKey();\r\n\r\n        const getAudioFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAudioKey+editId, {\r\n                    signal: audioFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicKey(response.data.message.musicKey);\r\n                    audioFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        getAudioFileKey();\r\n\r\n        return () => {\r\n            imgFileController?.abort();\r\n            audioFileController?.abort();\r\n        }\r\n\r\n    }, [editId]);\r\n\r\n    useEffect(() => {\r\n\r\n        let genreController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let categoryController = new AbortController();\r\n\r\n        const getGenreList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.type);\r\n                    setGenreList(data);\r\n                    genreController =  null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setGenreList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setGenreList([]);\r\n            }\r\n        };\r\n        \r\n        const getArtistList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.name);\r\n                    setArtistList(data);\r\n                    artistController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setArtistList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setArtistList([]);\r\n            }\r\n        };\r\n\r\n        const getCategoryList = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    const data = response.data.message.map(item => item.type);\r\n                    setCategoryList(data);\r\n                    categoryController = null;\r\n                }\r\n                else{ \r\n                    Error(response.data.message);\r\n                    setCategoryList([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setCategoryList([]);\r\n            }\r\n        };\r\n\r\n        getGenreList();\r\n        getArtistList();\r\n        getCategoryList();\r\n\r\n        return () => {\r\n            genreController?.abort();\r\n            artistController?.abort();\r\n            categoryController?.abort();\r\n        };\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Modal\r\n                isOpen={editMusicWidget}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='xl'\r\n                toggle={closeWidget}\r\n            >\r\n                <ModalHeader toggle={closeWidget}>\r\n                    <span className='modal-header-title'>\r\n                        Edit Existing Song\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <div className='music-details'>\r\n                                \r\n                                <TextInput \r\n                                    required\r\n                                    id=\"song-name\"\r\n                                    labelName=\"Song Name\"\r\n                                    label=\"Enter Song Name\"\r\n                                    value={musicTitle}\r\n                                    onChange={setMusicTitle}\r\n                                    // check={true}\r\n                                    checkedValue={fav}\r\n                                    onCheckBoxChange={setFav}\r\n                                />\r\n                                <TextInput \r\n                                    id=\"album-name\"\r\n                                    labelName=\"Album Name\"\r\n                                    label=\"Enter Album Name\"\r\n                                    value={albumTitle}\r\n                                    onChange={setAlbumTitle}\r\n                                />\r\n\r\n                                <CheckBoxInput \r\n                                    id=\"artist-name\" labelName=\"Artist Name\"\r\n                                    label=\"Select Artist\" type={artist}\r\n                                    handleChange={handleChange} MenuProps={MenuProps}\r\n                                    names={artistList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"genre-name\" labelName=\"Genre Name\"\r\n                                    label=\"Select Genre\" type={genre}\r\n                                    handleChange={handleGenreChange} MenuProps={MenuProps}\r\n                                    names={genreList}\r\n                                />\r\n                                <CheckBoxInput \r\n                                    id=\"category-name\" labelName=\"Category Name\"\r\n                                    label=\"Select Category\" type={category}\r\n                                    handleChange={handleCategoryChange} MenuProps={MenuProps}\r\n                                    names={categoryList}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n\r\n                            <Row>\r\n                                <div className='music-upload-button'>\r\n                                    <div className='music-upload-detail'>\r\n                                        <span className='music-image-title' style={{textAlign: \"center\"}}>\r\n                                            <LibraryMusicIcon /> &ensp; \" {props.musicTitle+\".mp3\"} \"\r\n                                            <span \r\n                                                className='pl-3 existing-music-play-container' \r\n                                            >\r\n                                                {\r\n                                                    playing ?\r\n                                                        (\r\n                                                            load ? \r\n                                                                <SpinnerRotate \r\n                                                                    size=\"sm\"\r\n                                                                    color=\"dark\"\r\n                                                                /> : \r\n                                                                <>\r\n                                                                    {\r\n                                                                        currentPaused ? \r\n                                                                        <PlayCircleIcon title=\"Resume Playing\" onClick={pauseSong} /> :\r\n                                                                        <PauseCircleIcon title=\"Pause Playing\" onClick={pauseSong} />\r\n                                                                    }\r\n                                                                    <StopCircleIcon title=\"Stop Playing\" onClick={stopSong} />\r\n                                                                </> \r\n                                                        )\r\n                                                        :\r\n                                                        <PlayCircleIcon title=\"Play this Song\" onClick={updateSongState} />\r\n                                                }\r\n                                            </span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className='audio-duration'>\r\n                                        <audio ref={audioRef} \r\n                                            src={musicKey && (apiLinks.getAudio + musicKey)}\r\n                                        />\r\n                                        {/* <span className='durationTimer'>{calculateTime(currentTime)}</span>\r\n                                        <input \r\n                                            type=\"range\" \r\n                                            ref={rangeRef} \r\n                                            defaultValue={0}\r\n                                            // onChange={changeRange} \r\n                                            className='admin-audio-progressBar'\r\n                                        />\r\n                                        <span className='durationTimer'>{!isNaN(endTime) && calculateTime(endTime)}</span> */}\r\n                                    </div>\r\n                                </div>\r\n                            </Row>\r\n\r\n                            <EditImageUpload \r\n                                imageKey = {musicImgKey}\r\n                                musicImgName={musicTitle}\r\n                            />\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={saveEditFile}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditExistingMusic;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport TextInput from './textInput';\r\nimport EditImageUpload from './editImageUpload';\r\nimport SpinnerGrow from '../spinner/spinner-grow';\r\nimport { apiLinks } from '../../connection.config';\r\nimport { Error, Success } from '../Notification/Notification';\r\n\r\nconst EditExistingModal = (props) => {\r\n\r\n    const { editId, fav, setFav } = props;\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [name, setName] = useState(props.value || '');\r\n    const [musicImgKey, setMusicImgKey] = useState(\"\");\r\n\r\n    const setData = () => {\r\n\r\n        const data = {\r\n            id: props.editId,\r\n            type: name,\r\n            name: name,\r\n            show: fav,\r\n            'playlist_name': name,\r\n        };\r\n\r\n        const editedRow = props.rows.filter(item => item.id !== props.editId);\r\n        props.setRows([data, ...editedRow]);\r\n\r\n    };\r\n\r\n    const addDetail = async () => {\r\n        try{\r\n            setLoader(true);\r\n            const names = name;\r\n            \r\n            const formData = {\r\n                'type': names,\r\n                'name': names,\r\n                'show': fav\r\n            };\r\n\r\n            let response = {};\r\n\r\n            if(props.id === '1'){\r\n                response = await axios.put(apiLinks.updateAdminArtist+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === '2'){\r\n                response = await axios.put(apiLinks.updateAdminGenre+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else if(props.id === '3'){\r\n                response = await axios.put(apiLinks.updateAdminCategory+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                response = await axios.put(apiLinks.updateAdminPlaylist+props.editId, formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n            }\r\n\r\n            if(Object.keys(response).length === 0 && response.constructor === Object){\r\n                const error = new Error();\r\n                error.message = \"Something went wrong, could add data now\";\r\n                throw error;\r\n            }\r\n            else{\r\n                if(response.data.code === 200){\r\n                    Success(response.data.message);\r\n                    setData();   \r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n                props.toggle(false);\r\n            }\r\n        \r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const removeDetail = () => {\r\n        props.toggle(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let artistImgFileController = new AbortController();\r\n        let playlistImgFileController = new AbortController();\r\n\r\n        const getArtistImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getArtistImgKey+editId, {\r\n                    signal: artistImgFileController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.artistImgKey);\r\n                    artistImgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n        \r\n        const getPlaylistImageFileKey = async () => {\r\n            try{\r\n                const response = await axios.get(apiLinks.getPlaylistImgKey+editId, {\r\n                    signal: playlistImgFileController.signal,\r\n                });\r\n                if(response.data.code === 200){\r\n                    setMusicImgKey(response.data.message.image);\r\n                    playlistImgFileController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(\"Error Occured\", err.message);\r\n                Error(err.message);\r\n            }\r\n        };\r\n\r\n        if(props.id === \"1\"){\r\n            getArtistImageFileKey();\r\n        }\r\n\r\n        if(props.id === \"4\"){\r\n            getPlaylistImageFileKey();\r\n        }\r\n        \r\n        return () => {\r\n            artistImgFileController?.abort();\r\n            playlistImgFileController?.abort();\r\n        }\r\n\r\n    }, [editId, props.id]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            \r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n\r\n            <Modal\r\n                isOpen={true}\r\n                centered={true}\r\n                scrollable={true}\r\n                backdrop\r\n                size='lg'\r\n                toggle={() => props.toggle(false)}\r\n            >\r\n                <ModalHeader toggle={() => props.toggle(false)}>\r\n                    <span className='modal-header-title'>\r\n                        {props.header}\r\n                    </span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {props.id === '1' || props.id === '4' ? \r\n                        <EditImageUpload \r\n                            imageKey = {musicImgKey}\r\n                            musicImgName={`${name}`}\r\n                        /> : \r\n                        <React.Fragment />\r\n                    }\r\n                    <TextInput \r\n                        id={props.id}\r\n                        required\r\n                        labelName={props.id === '4' ? \"Edit Playlist Name\" : '1' ? \"Edit Name\" : \"Edit Type\"}\r\n                        label={props.id === '4' ? \"Enter Playlist Name\" : '1' ? \"Enter Artist Name\" : \"Enter Type\"}\r\n                        value={name}\r\n                        onChange={setName}\r\n                        // check={true}\r\n                        checkedValue={fav}\r\n                        onCheckBoxChange={setFav}\r\n                    />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"success\"\r\n                        onClick={addDetail}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={removeDetail}>\r\n                        Discard\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EditExistingModal;\r\n","import axios from 'axios';\r\nimport Menu from '@mui/material/Menu';\r\nimport Badge from '@mui/material/Badge';\r\nimport Switch from '@mui/material/Switch';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport { Navbar, NavItem, Nav, NavbarToggler, NavbarBrand, NavLink,\r\n        Offcanvas, OffcanvasHeader, OffcanvasBody, Container } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faMusic, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Subscribe } from \"../../../client\";\r\nimport { IsDark, SetIsDark } from \"../../../App\";\r\nimport { apiLinks } from \"../../../connection.config.js\";\r\n\r\nimport \"./admin-navigation.css\";\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n    width: 62,\r\n    height: 34,\r\n    padding: 7,\r\n    '& .MuiSwitch-switchBase': {\r\n      margin: 1,\r\n      padding: 0,\r\n      transform: 'translateX(6px)',\r\n      '&.Mui-checked': {\r\n        color: '#fff',\r\n        transform: 'translateX(22px)',\r\n        '& .MuiSwitch-thumb:before': {\r\n          backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n            '#fff',\r\n          )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n        },\r\n        '& + .MuiSwitch-track': {\r\n          opacity: 1,\r\n          backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n        },\r\n      },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\r\n      width: 32,\r\n      height: 32,\r\n      '&:before': {\r\n        content: \"''\",\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        left: 0,\r\n        top: 0,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          '#fff',\r\n        )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n      },\r\n    },\r\n    '& .MuiSwitch-track': {\r\n      opacity: 1,\r\n      backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n      borderRadius: 20 / 2,\r\n    },\r\n}));\r\n\r\nconst AdminNavigation = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    const isDark = useContext(IsDark);\r\n    const setIsDark = useContext(SetIsDark);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [notificationData, setNotificationData] = useState([]);\r\n\r\n    const updateNavClick = () => {\r\n        setIsOpen(prev => !prev);\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const getNotificationData = async () => {\r\n        if(window?.localStorage?.getItem(\"endpoint\")){\r\n            const endpoint = window.localStorage.getItem(\"endpoint\");\r\n            const response = await axios.get(apiLinks.getBroadcastNotifications, {\r\n                params: {\r\n                    endpoint: endpoint\r\n                }\r\n            });\r\n            if(response.data.code === 200){\r\n                setNotificationData(response.data.message);\r\n            }\r\n            else{\r\n                setNotificationData([]);\r\n            }\r\n        }\r\n        else{\r\n            Notification.requestPermission().then(permission => {\r\n                if(permission === \"granted\"){\r\n                    Subscribe();\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleClick = async (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        await getNotificationData();\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNotificationData();\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"admin-Navigation-container\">\r\n                <Navbar\r\n                    color={isDark ? \"dark\" : \"light\"}\r\n                    dark={isDark}\r\n                    light={!isDark}\r\n                    expand=\"true\"\r\n                    sticky=\"true\"\r\n                    className=\"one-row\"\r\n                >\r\n                    <NavbarBrand onClick={() => navigate('/')} className=\"me-auto\">\r\n                        <div className=\"navbarHead\">\r\n                            SANGEET\r\n                        </div>\r\n                    </NavbarBrand>\r\n                    <MaterialUISwitch checked={isDark} onClick={setIsDark} />\r\n\r\n                    <Tooltip title=\"Notifications\">\r\n                        <IconButton\r\n                            sx={{\r\n                                marginRight: \"15px\"\r\n                            }}\r\n                            onClick={handleClick}\r\n                            size=\"small\"\r\n                            aria-controls={open ? 'account-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                        >\r\n                            <Badge badgeContent={notificationData.length || '0'} className=\"notification-count\" >\r\n                                <NotificationsIcon sx={{ fontSize: 30, color: isDark ? \"rgb(0, 255, 0)\" : \"rgb(0, 0, 0)\" }} />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        id=\"account-menu\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        onClick={handleClose}\r\n                        PaperProps={{\r\n                            elevation: 0,\r\n                            className: `notification-message-container ${isDark ? \"dark\" : \"light\"}`,\r\n                            sx: {\r\n                                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                                mt: 1.5,\r\n                                '& .MuiAvatar-root': {\r\n                                    width: 32,\r\n                                    height: 32,\r\n                                    ml: -0.5,\r\n                                    mr: 1,\r\n                                },\r\n                                '&:before': {\r\n                                    content: '\"\"',\r\n                                    display: 'block',\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    right: 0,\r\n                                    width: 10,\r\n                                    height: 10,\r\n                                    bgcolor: `${isDark ? \"#0A0F18\" : \"#eee\"}`,\r\n                                    transform: 'translateY(-50%) rotate(45deg)',\r\n                                    zIndex: 0,\r\n                                },\r\n                            },\r\n                        }}\r\n                        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                    >\r\n                        {\r\n                            notificationData.length > 0 ?\r\n                                notificationData.map(notification => \r\n                                    <MenuItem key={notification.id} onClick={() => navigate(notification.url)}>\r\n                                        <div>\r\n                                            <div className=\"notification-row mb-2\">\r\n                                                <div className=\"notification-image-container\">\r\n                                                    <img className=\"notification-image\"\r\n                                                        src={apiLinks.getImage + notification.image} alt={notification.title} />\r\n                                                </div>\r\n                                                <div className=\"notification-text-container\">\r\n                                                    <div className=\"notification-title\">\r\n                                                        {notification.title}\r\n                                                    </div>\r\n                                                    <div className=\"notification-body\">\r\n                                                        {notification.body}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Divider />\r\n                                        </div>\r\n                                    </MenuItem>\r\n                                ) : \r\n                                <div className=\"no-notifications-container\">\r\n                                    <h5 className=\"no-notifications\">\r\n                                        No Notifications Available\r\n                                    </h5>\r\n                                </div>\r\n                        }\r\n                    </Menu>\r\n\r\n                    <NavbarToggler className=\"me-2\" onClick={updateNavClick} />\r\n                    \r\n                    <Offcanvas isOpen={isOpen} className=\"offcanvas-tag\" scrollable={false}\r\n                        toggle={updateNavClick} direction=\"end\">\r\n                        <OffcanvasHeader toggle={updateNavClick} className=\"custom-close-icon-canvas-header\"/>\r\n                        <OffcanvasBody className=\"navbar-menu-links\">\r\n                            <Nav className=\"ms-auto\" navbar>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate('/')}>\r\n                                        <FontAwesomeIcon icon={faHome} /> \r\n                                            <span className=\"extra-spacing\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faMusic} /> \r\n                                            <span className=\"extra-spacing\" /> Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                {/* <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\">\r\n                                        <FontAwesomeIcon icon={faBell} /> \r\n                                            <span className=\"extra-spacing\" /> Notifications\r\n                                    </NavLink>\r\n                                </NavItem> */}\r\n                                <NavItem className=\"navbar-item\">\r\n                                    <NavLink className=\"navbar-item-link\" onClick={() => navigate('/admin')}>\r\n                                        <FontAwesomeIcon icon={faSignInAlt} /> \r\n                                            <span className=\"extra-spacing\" /> Login / SignUp \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </OffcanvasBody>\r\n                    </Offcanvas>\r\n                </Navbar>\r\n            </div>\r\n            <Container className=\"pt-5 pb-5\"/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminNavigation;","import axios from 'axios';\r\nimport React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport {Container, Nav, NavItem, NavLink, TabContent, TabPane, Row, Col} from 'reactstrap';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { Backdrop } from '@mui/material';\r\nimport SpeedDial from '@mui/material/SpeedDial';\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport DomainIcon from '@mui/icons-material/Domain';\r\nimport PlaylistAddIcon from '@mui/icons-material/PlaylistAdd';\r\nimport CellTowerIcon from '@mui/icons-material/CellTower';\r\n\r\nimport AddNewModal from '../components/Admin/addNewModal';\r\nimport NewMusicAdd from '../components/Admin/newMusicAdd';\r\n\r\nimport GenreTable from '../components/Tables/Genre-table';\r\nimport BroadcastTable from '../components/Tables/broadcast';\r\nimport ArtistsTable from '../components/Tables/artists-table';\r\nimport StickyHeadTable from \"../components/Tables/music-table\";\r\nimport CategoryTable from '../components/Tables/category-table';\r\nimport PlaylistTable from '../components/Tables/playlist-table';\r\n\r\nimport { IsDark, PlayerContext } from \"../App\";\r\nimport { apiLinks } from '../connection.config';\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport { DeleteWarning } from '../components/Warning/Warning';\r\nimport EditExistingMusic from '../components/Admin/editExistingMusic';\r\nimport EditExistingModal from '../components/Admin/editExistingModal';\r\nimport { Success, Error } from '../components/Notification/Notification';\r\nimport AdminNavigation from '../components/navigation/Navigation-bar/admin-navigation';\r\n\r\n\r\nimport \"./admin.css\";\r\n\r\nlet genreRows = [], artistRows = [], categoryRows = [], \r\n    musicRows = [], broadcastRows = [], playlistRows = [];\r\n\r\nconst Admin = () => {\r\n    const isDark = useContext(IsDark);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n    const hiddenFileInput = useRef(null);\r\n    const hiddenMusicInput = useRef(null);\r\n    const audioDurationRef = useRef(null);\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [tabId, setTabId] = useState(1);\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    \r\n    const [rows, setRows] = useState([]);\r\n\r\n    const [catGenValue, setCatGenValue] = useState('');\r\n    const [editId, setEditId] = useState(0);\r\n    const [modalId, setModalId] = useState('0');\r\n    const [header, setHeader] = useState(\"\");\r\n    const [warning, setWarning] = useState(false);\r\n    const [deleteId, setDeleteId] = useState(0);\r\n    const [deleteItemName, setDeleteItemName] = useState('');\r\n\r\n    const [genre, setGenre] = useState([]);\r\n    const [artist, setArtist] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n\r\n    const [showBroadCast, setShowBroadCast] = useState(false);\r\n    const [addMusicWidget, setAddMusicWidget] = useState(false);\r\n    const [createPlaylist, setCreatePlaylist] = useState(false);\r\n    const [addGenreWidget, setAddGenreWidget] = useState(false);\r\n    const [editMusicWidget, setEditMusicWidget] = useState(false);\r\n    const [addArtistWidget, setAddArtistWidget] = useState(false);\r\n    const [addCategoryWidget, setAddCategoryWidget] = useState(false);\r\n    const [editExistingWidget, setEditExistingWidget] = useState(false);\r\n    \r\n    const [fav, setFav] = useState(false);\r\n    const [music, setMusic] = useState({});\r\n    const [musicName, setMusicName] = useState('');\r\n    const [musicDuration, setMusicDuration] = useState(0);\r\n\r\n    const [musicTitle, setMusicTitle] = useState('');\r\n    const [albumTitle, setAlbumTitle] = useState('');\r\n    \r\n    const [musicImg, setMusicImg] = useState({});\r\n    const [musicImgName, setMusicImgName] = useState(\"\");\r\n    const [musicImgPath, setMusicImgPath] = useState('/assets/images/default-music-upload-image.png');\r\n\r\n    const updateTabId = (id) => {\r\n        setTabId(id);\r\n        window?.localStorage?.setItem(\"tabId\", id);\r\n    };\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    \r\n    const updateAddMusicWidget = () => {\r\n        removeMusicDetails();\r\n        setAddMusicWidget(prev => !prev);\r\n    };\r\n\r\n    const broadCast = () => setShowBroadCast(prev => !prev);\r\n    const updateCreatePlaylist = () => setCreatePlaylist(prev => !prev);\r\n    const updateAddGenreWidget = () => setAddGenreWidget(prev => !prev);\r\n    const updateEditMusicWidget = () => setEditMusicWidget(prev => !prev);\r\n    const updateAddArtistWidget = () => setAddArtistWidget(prev => !prev);\r\n    const updateAddCategoryWidget = () => setAddCategoryWidget(prev => !prev);\r\n\r\n    const defaultProps = {\r\n        options: rows,\r\n        getOptionLabel: (option) => option.musicTitle || option.name || option.type || option.title || option.playlist_name,\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n        if(window?.localStorage){\r\n            const id = window?.localStorage?.getItem(\"tabId\");\r\n            if(id && 0 < id < 7){\r\n                setTabId(parseInt(id));\r\n            }\r\n        }\r\n\r\n        let musicController = new AbortController();\r\n        let artistController = new AbortController();\r\n        let genreController = new AbortController();\r\n        let categoryController = new AbortController();\r\n        let broadCastController = new AbortController();\r\n        let playlistController = new AbortController();\r\n        \r\n        const getMusicData = async () => {\r\n    \r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllAudio, {\r\n                    signal: musicController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  musicRows = response.data.message;\r\n                  musicController = null;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                // Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getArtistsData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllArtists, {\r\n                    signal: artistController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  artistController = null;\r\n                  artistRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getGenreData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllGenre, {\r\n                    signal: genreController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  genreController = null;\r\n                  genreRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n    \r\n        const getCategoryData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllCategory, {\r\n                    signal: categoryController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                  setRows(response.data.message);\r\n                  categoryRows = response.data.message;\r\n                }\r\n                else{\r\n                  Error(response.data.message);\r\n                  setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        const getBroadCastData = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getBroadcast, {\r\n                    signal: broadCastController.signal,\r\n                });\r\n                if(response.data?.code === 200){\r\n                    setRows(response.data.message);\r\n                    broadcastRows = response.data.message;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                    setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        const getPlaylistData = async () => {\r\n            \r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getAllPlaylist, {\r\n                    signal: playlistController.signal,\r\n                });\r\n                if(response.data?.code === 200){\r\n                    setRows(response.data.message);\r\n                    playlistRows = response.data.message;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                    setRows([]);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                Error(err.message);\r\n                setRows([]);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        if(tabId === 1) \r\n            getMusicData();\r\n        else if(tabId === 2) \r\n            getArtistsData();\r\n        else if(tabId === 3) \r\n            getGenreData();\r\n        else if(tabId === 4)\r\n            getCategoryData();\r\n        else if(tabId === 5)\r\n            getBroadCastData();\r\n        else\r\n            getPlaylistData();\r\n\r\n        return () => {\r\n            musicController?.abort();\r\n            artistController?.abort();\r\n            genreController?.abort();\r\n            categoryController?.abort();\r\n            setLoader(false);\r\n        }\r\n    \r\n    }, [tabId]);\r\n\r\n    const getSearchedAutoCompleteRow = (value) => {\r\n        if(value && value.id){\r\n            let searchedData = [];\r\n            if(tabId === 1){\r\n                searchedData = musicRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 2){\r\n                searchedData = artistRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 3){\r\n                searchedData = genreRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 4){\r\n                searchedData = categoryRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 5){\r\n                searchedData = broadcastRows.filter(row => row.id === value.id);\r\n            }\r\n            else if(tabId === 6){\r\n                searchedData = playlistRows.filter(row => row.id === value.id);\r\n            }\r\n            setRows(searchedData);\r\n        }\r\n        else{\r\n            if(tabId === 1){\r\n                setRows(musicRows);\r\n            }\r\n            else if(tabId === 2){\r\n                setRows(artistRows)\r\n            }\r\n            else if(tabId === 3){\r\n                setRows(genreRows);\r\n            }\r\n            else if(tabId === 4){\r\n                setRows(categoryRows);\r\n            }\r\n            else if(tabId === 5){\r\n                setRows(broadcastRows);\r\n            }\r\n            else if(tabId === 6){\r\n                setRows(playlistRows);\r\n            }\r\n        }\r\n    };\r\n\r\n    const getSearchedRow = (event) => {\r\n        if(event.target.value.length){\r\n            const data = event.target.value;\r\n            let searchedData = [];\r\n            if(tabId === 1){\r\n                searchedData = musicRows.filter(row => row.musicTitle.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 2){\r\n                searchedData = artistRows.filter(row => row.name.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 3){\r\n                searchedData = genreRows.filter(row => row.type.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 4){\r\n                searchedData = categoryRows.filter(row => row.type.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 5){\r\n                searchedData = broadcastRows.filter(row => row.title.toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            else if(tabId === 6){\r\n                searchedData = playlistRows.filter(row => row['playlist_name'].toLowerCase().includes(data.toLowerCase()));\r\n            }\r\n            setRows(searchedData);\r\n        }\r\n        else{\r\n            if(tabId === 1){\r\n                setRows(musicRows);\r\n            }\r\n            else if(tabId === 2){\r\n                setRows(artistRows)\r\n            }\r\n            else if(tabId === 3){\r\n                setRows(genreRows);\r\n            }\r\n            else if(tabId === 4){\r\n                setRows(categoryRows);\r\n            }\r\n            else if(tabId === 5){\r\n                setRows(broadcastRows);\r\n            }\r\n            else if(tabId === 6){\r\n                setRows(playlistRows);\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateRow = (data) => {\r\n        const rowData = rows.map(row => {\r\n            if(row.id === data.id){\r\n                return data;\r\n            }\r\n            else{\r\n                return row;\r\n            }\r\n        });\r\n\r\n        setRows(rowData);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        \r\n        setArtist(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleGenreChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setGenre(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleCategoryChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setCategory(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n    \r\n    const handleClick = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n\r\n    const handleMusicClick = () => {\r\n        hiddenMusicInput.current.click();\r\n    };\r\n    \r\n    const uploadMusicImage = (event) => {\r\n        if(event.target.files[0]){\r\n            setMusicImg(event.target.files);\r\n            setMusicImgName(event.target.files[0].name);\r\n            setMusicImgPath(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n    };\r\n    \r\n    const uploadMusic = (event) => {\r\n        if(event.target.files[0]){\r\n            window.URL = window.URL || window.webkitURL;\r\n            audioDurationRef.current = document.createElement(\"audio\");\r\n            audioDurationRef.current.preload = 'metadata';\r\n\r\n            audioDurationRef.current.onloadedmetadata = () => {\r\n                window.URL.revokeObjectURL(audioDurationRef.current.src);\r\n                const duration = Math.floor(audioDurationRef.current.duration);\r\n                setMusicDuration(duration);\r\n            };\r\n\r\n            audioDurationRef.current.src = URL.createObjectURL(event.target.files[0]);\r\n\r\n            setMusic(event.target.files);\r\n            setMusicName(event.target.files[0].name);\r\n        }\r\n    };\r\n    \r\n    const removeSelectedSong = () => {\r\n        setMusic({});\r\n        setMusicName(\"\");\r\n        audioDurationRef?.current?.remove();\r\n        audioDurationRef.current = null;\r\n        setMusicDuration(0);\r\n    };\r\n    \r\n    const removeSelectedImage = () => {\r\n        setMusicImg({});\r\n        setMusicImgName('');\r\n        setMusicImgPath('/assets/images/default-music-upload-image.png');\r\n    };\r\n    \r\n    const removeMusicDetails = () => {\r\n        setFav(false);\r\n\r\n        setGenre([]);\r\n        setArtist([]);\r\n        setCategory([]);\r\n\r\n        removeSelectedSong();\r\n        \r\n        setMusicTitle(\"\");\r\n        setAlbumTitle(\"\");\r\n\r\n        removeSelectedImage();\r\n    };\r\n\r\n    const saveUploadMusic = async () => {\r\n        setLoader(true);\r\n        const today = new Date().toISOString();\r\n\r\n        const formData = new FormData();\r\n        formData.append('musicImageFile', musicImg[0]);\r\n        formData.append('musicFile', music[0]);\r\n        formData.append('musicTitle', musicTitle);\r\n        formData.append('albumTitle', albumTitle);\r\n        formData.append(\"artist\", artist);\r\n        formData.append(\"category\", category);\r\n        formData.append(\"genre\", genre);\r\n        formData.append(\"date\", today);\r\n        formData.append(\"show\", fav);\r\n        formData.append(\"duration\", musicDuration);\r\n\r\n        try{\r\n            const response = await axios.post(apiLinks.postSong, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            if(response.data.code === 200){\r\n                if(tabId === 1){\r\n                    musicRows.push(...(response.data.rowData));\r\n                    // setRows(prevData => [...prevData, ...(response.data.rowData)]);\r\n                }\r\n                else{\r\n                    updateTabId(1);\r\n                }\r\n                \r\n                removeMusicDetails();\r\n                setAddMusicWidget(false);\r\n                Success(\"Uploaded Successfully\");\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"Error Occured - \", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const editRow = (id) => {\r\n        const editableRow = rows.filter(entry => entry.id === id);\r\n        // console.log(editableRow);\r\n\r\n        setFav(editableRow[0].show);\r\n        setEditId(id);\r\n        setGenre(editableRow[0].genre);\r\n        setArtist(editableRow[0].artists);\r\n        setCategory(editableRow[0].category);\r\n        setMusicTitle(editableRow[0].musicTitle);\r\n        setAlbumTitle(editableRow[0].albumTitle);\r\n        setEditMusicWidget(true);\r\n    };\r\n\r\n    const editArtistGenreCategoryPlaylist = (id, domain=\"\") => {\r\n\r\n        const editTableRow = rows.filter(entry => entry.id === id);\r\n\r\n        if(editTableRow.length){\r\n            setFav(editTableRow[0].show);\r\n            setEditId(id);\r\n            setEditExistingWidget(prev => !prev);\r\n            setCatGenValue(editTableRow[0].name || editTableRow[0].type || editTableRow[0].playlist_name);\r\n\r\n            if(domain === \"artist\"){\r\n                setHeader('Edit Artist');\r\n                setModalId('1');\r\n            }\r\n            else if(domain === 'genre'){\r\n                setHeader(\"Edit Genre\");\r\n                setModalId('2');\r\n            }\r\n            else if(domain === 'category'){\r\n                setHeader(\"Edit Category\");\r\n                setModalId('3');\r\n            }\r\n            else if(domain === 'playlist'){\r\n                setHeader(\"Edit Playlist\");\r\n                setModalId('4');\r\n            }\r\n            else{\r\n                Error(\"Domain Not Valid for Edit\");\r\n            }\r\n        }\r\n        else{\r\n            Error(\"No such row id found\");\r\n        }\r\n    };\r\n\r\n    const toggleWarning = (id = 0) => {\r\n        const name = rows.filter(row => row.id === id);\r\n\r\n        if(id && tabId === 1){\r\n            setDeleteItemName(name[0].musicTitle);\r\n        }\r\n        else if(id && tabId === 2){\r\n            setDeleteItemName(name[0].name);\r\n        }\r\n        else if(id && tabId === 3){\r\n            setDeleteItemName(name[0].type);\r\n        }\r\n        \r\n        else if(id && tabId === 4){\r\n            setDeleteItemName(name[0].type);\r\n        }\r\n        else if(id && tabId === 5){\r\n            setDeleteItemName(name[0].title);\r\n        }\r\n        else if(id && tabId === 6){\r\n            setDeleteItemName(name[0]['playlist_name'])\r\n        }\r\n\r\n        setDeleteId(id);\r\n        setWarning(prev => !prev);\r\n    };\r\n\r\n    const deleteRow = async () => {\r\n        const id = deleteId;\r\n\r\n        try{\r\n            setLoader(true);\r\n            let response = {};\r\n            if(tabId === 1){\r\n                response = await axios.delete(apiLinks.deleteMusic+id);\r\n            }\r\n            else if(tabId === 2){\r\n                response = await axios.delete(apiLinks.deleteArtist+id);\r\n            }\r\n            else if(tabId === 3){\r\n                response = await axios.delete(apiLinks.deleteGenre+id);\r\n            }\r\n            else if(tabId === 4){\r\n                response = await axios.delete(apiLinks.deleteCategory+id);\r\n            }\r\n            else if(tabId === 5){\r\n                response = await axios.delete(apiLinks.deleteBroadcast+id);\r\n            }\r\n            else if(tabId === 6){\r\n                response = await axios.delete(apiLinks.deletePlaylist+id);\r\n            }\r\n\r\n            if(response?.data?.code === 200){\r\n                // if(tabId === 1){\r\n                //     musicRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                // else if(tabId === 2){\r\n                //     artistRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                // else if(tabId === 3){\r\n                //     genreRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                // else if(tabId === 4){\r\n                //     categoryRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                // else if(tabId === 5){\r\n                //     broadcastRows = rows.filter(row => row.id !== id);\r\n                // }\r\n                setRows(prev => prev.filter(row => row.id !== id));\r\n                Success(response.data.message);\r\n            }\r\n            else{\r\n                Error(response.data.message);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(\"An Error occured while deleting\", err);\r\n            Error(err.message);\r\n        }\r\n        finally{\r\n            setLoader(false);\r\n            toggleWarning();\r\n        }\r\n    };\r\n    \r\n    const actions = [\r\n        { icon: <CellTowerIcon />, name: \"BroadCast\", click: broadCast }, \r\n        { icon: <DomainIcon />, name: 'Add Genre', click: updateAddGenreWidget },\r\n        { icon: <MusicNoteIcon />, name: 'Add Song', click: updateAddMusicWidget },\r\n        { icon: <PersonAddIcon />, name: 'Add Artist', click: updateAddArtistWidget },\r\n        { icon: <CategoryIcon />, name: 'Add Category', click: updateAddCategoryWidget },\r\n        { icon: <PlaylistAddIcon />, name: \"Create Playlist\", click: updateCreatePlaylist },\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='admin-page'>\r\n                {loader ? \r\n                    <SpinnerGrow color=\"success\" />: \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    warning ?\r\n                    <DeleteWarning \r\n                        musicTitle={deleteItemName}\r\n                        toggle={toggleWarning}\r\n                        deleteRow={deleteRow}\r\n                    />: \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    editMusicWidget ? \r\n                    <EditExistingMusic\r\n                        fav={fav}\r\n                        genre={genre}\r\n                        artist={artist}\r\n                        editId={editId}\r\n                        loader={loader}\r\n                        category={category}\r\n                        musicTitle={musicTitle}\r\n                        albumTitle={albumTitle}\r\n                        editMusicWidget={editMusicWidget}\r\n\r\n                        setFav={setFav}\r\n                        updateRow={updateRow}\r\n                        setLoader={setLoader}\r\n                        handleChange={handleChange}\r\n                        setMusicTitle={setMusicTitle}\r\n                        setAlbumTitle={setAlbumTitle}\r\n                        handleGenreChange={handleGenreChange}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        updateEditMusicWidget={updateEditMusicWidget}\r\n\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    addMusicWidget ? \r\n                    <NewMusicAdd \r\n                        fav={fav}\r\n                        genre={genre}\r\n                        artist={artist}\r\n                        category={category}\r\n                        musicName={musicName}\r\n                        musicTitle={musicTitle}\r\n                        albumTitle={albumTitle}\r\n                        musicImgPath={musicImgPath}\r\n                        musicImgName={musicImgName}\r\n                        musicDuration={musicDuration}\r\n                        addMusicWidget={addMusicWidget}\r\n                        hiddenFileInput={hiddenFileInput}\r\n                        hiddenMusicInput={hiddenMusicInput}\r\n\r\n                        setFav={setFav}\r\n                        uploadMusic={uploadMusic}\r\n                        handleClick={handleClick}\r\n                        handleChange={handleChange}\r\n                        setMusicTitle={setMusicTitle}\r\n                        setAlbumTitle={setAlbumTitle}\r\n                        saveUploadMusic={saveUploadMusic}\r\n                        handleMusicClick={handleMusicClick}\r\n                        uploadMusicImage={uploadMusicImage}\r\n                        handleGenreChange={handleGenreChange}\r\n                        removeMusicDetails={removeMusicDetails}\r\n                        removeSelectedSong={removeSelectedSong}\r\n                        removeSelectedImage={removeSelectedImage}\r\n                        updateAddMusicWidget={updateAddMusicWidget}\r\n                        handleCategoryChange={handleCategoryChange}\r\n\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {editExistingWidget ? \r\n                    <EditExistingModal \r\n                        fav={fav}\r\n                        rows={rows}\r\n                        id={modalId}\r\n                        editId={editId}\r\n                        header={header}\r\n                        value={catGenValue}\r\n\r\n                        setFav={setFav}\r\n                        setRows={setRows}\r\n                        toggle={setEditExistingWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n\r\n                {addArtistWidget ? \r\n                    <AddNewModal \r\n                        id='1'\r\n                        tabId={tabId}\r\n                        header=\"Add New Artist\"\r\n                        artistRows={artistRows}\r\n                        toggle={setAddArtistWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n                \r\n                {addGenreWidget ? \r\n                    <AddNewModal \r\n                        id='2'\r\n                        tabId={tabId}\r\n                        genreRows={genreRows}\r\n                        header=\"Add New Genre\"\r\n                        toggle={setAddGenreWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n                \r\n                {addCategoryWidget ? \r\n                    <AddNewModal \r\n                        id='3'\r\n                        tabId={tabId}\r\n                        header=\"Add New Category\"\r\n                        categoryRows={categoryRows}\r\n                        toggle={setAddCategoryWidget}\r\n                    /> :\r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    showBroadCast ? \r\n                    <AddNewModal \r\n                        id='4'\r\n                        tabId={tabId}\r\n                        header=\"BroadCast News\"\r\n                        toggle={setShowBroadCast}\r\n                        broadcastRows={broadcastRows}\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                {\r\n                    createPlaylist ? \r\n                    <AddNewModal \r\n                        id='5'\r\n                        tabId={tabId}\r\n                        header=\"Add New Playlist\"\r\n                        toggle={setCreatePlaylist}\r\n                        playlistRows={playlistRows}\r\n                    /> : \r\n                    <React.Fragment />\r\n                }\r\n\r\n                <AdminNavigation />\r\n\r\n                {/* <Container fluid>\r\n                     */}\r\n                <Box className='add-button-speed-dial' sx={{ height: 300, transform: 'translateZ(0px)', \r\n                        flexGrow: 1, bottom: `${currentSong.id ? \"8rem\" : \".5rem\"}` }}>\r\n                    <Backdrop open={open} />\r\n                    <SpeedDial\r\n                        ariaLabel=\"SpeedDial tooltip example\"\r\n                        sx={{ position: 'absolute', bottom: 16, right: 16 }}\r\n                        icon={<SpeedDialIcon />}\r\n                        onClose={handleClose}\r\n                        onOpen={handleOpen}\r\n                        open={open}\r\n                        className=\"speed-dial-custom\"\r\n                    >\r\n                        {actions.map((action, index) => (\r\n                            <SpeedDialAction\r\n                                key={action.name}\r\n                                icon={action.icon}\r\n                                tooltipTitle={action.name}\r\n                                tooltipOpen\r\n                                onClick={action.click}\r\n                            />\r\n                        ))}\r\n                    </SpeedDial>\r\n                </Box>\r\n                <Container className={`page-content ${isDark ? \"dark\" : \"light\"} mb-3`}\r\n                    style={currentSong.id ? {height: \"calc(100vh - 230px)\"} : {height: \"calc(100vh - 120px)\"}}\r\n                >\r\n                    <div>\r\n                        <div className=\"d-flex navtabs-autocomplete\">\r\n                            <Nav tabs className=\"align-bottom-flex\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 1 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(1)}\r\n                                    >\r\n                                        Music Data\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 2 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(2)}\r\n                                    >\r\n                                        Artists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 3 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(3)}\r\n                                    >\r\n                                        Genre\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 4 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(4)}\r\n                                    >\r\n                                        Category\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 5 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(5)}\r\n                                    >\r\n                                        BroadCasts\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={`${tabId === 6 && \"active\"} admin-nav-table-link`}\r\n                                        onClick={() => updateTabId(6)}\r\n                                    >\r\n                                        Playlists\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Autocomplete\r\n                                {...defaultProps}\r\n                                id={`auto-complete`}\r\n                                className={`autoComplete ${isDark ? \"dark\" : \"light\"}`}\r\n                                onChange={(evt, val) => getSearchedAutoCompleteRow(val)}\r\n                                autoComplete\r\n                                includeInputInList\r\n                                renderInput={(params) => (\r\n                                <TextField {...params} label={  tabId === 1 ? \"Search Music\" : \r\n                                                                tabId === 2 ? \"Search Artist\" : \r\n                                                                tabId === 3 ? \"Search Genre\" : \r\n                                                                tabId === 4 ? \"Search Category\":\r\n                                                                tabId === 5 ? \"Search Title\" : \r\n                                                                \"Search Playlist\"} \r\n                                    className=\"input-div\" variant=\"standard\" \r\n                                    onChange={getSearchedRow}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <TabContent activeTab={tabId}>\r\n                            <TabPane tabId={1}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <StickyHeadTable \r\n                                            id=\"table\"\r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            editRow={editRow}\r\n                                            toggleWarning={toggleWarning}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={2}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ArtistsTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editArtist={editArtistGenreCategoryPlaylist}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={3}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <GenreTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editGenre={editArtistGenreCategoryPlaylist}\r\n                                        /> \r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane> \r\n                            <TabPane tabId={4}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <CategoryTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editCategory={editArtistGenreCategoryPlaylist}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane>\r\n                            <TabPane tabId={5}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <BroadcastTable \r\n                                            rows = {rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane>\r\n                            <TabPane tabId={6}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <PlaylistTable \r\n                                            rows={rows}\r\n                                            setRows={setRows}\r\n                                            toggleWarning={toggleWarning}\r\n                                            editPlaylist={editArtistGenreCategoryPlaylist}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </TabPane>  \r\n                        </TabContent>\r\n                    </div>\r\n                </Container>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n","// for song list\r\nimport { Container } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useContext } from \"react\";\r\nimport PlayCircle from \"@mui/icons-material/PlayCircle\";\r\nimport PauseCircle from \"@mui/icons-material/PauseCircle\";\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\n\r\nimport { CalculateTimeContext, SongList } from \"../../pages/Artist\";\r\nimport { PlayerContext, PlayPause, Playing, LoadAudio, IsDark } from \"../../App\";\r\n\r\nimport \"./body.css\";\r\n\r\nconst Body = (props) => {\r\n    \r\n    const isDark = useContext(IsDark);\r\n    const paused = useContext(Playing);\r\n    const songList = useContext(SongList);\r\n    const loadAudio = useContext(LoadAudio);\r\n    const playPauseState = useContext(PlayPause);\r\n    const currentPlayer = useContext(PlayerContext);\r\n    const calculateTimeContext = useContext(CalculateTimeContext);\r\n\r\n    const [playId, setPlayId] = useState(0);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const updatePlayId = (value) => {\r\n        setPlayId(value);\r\n    };\r\n\r\n    const updatePlayPause = (event) => {\r\n        const e = {\r\n            ...event, \r\n            code: \"Space\",\r\n            preventDefault: () => {}\r\n        };\r\n\r\n        playPauseState(e);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container> \r\n                <div className=\"song-list\">\r\n                    {\r\n                        songList.map((song, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className={`table-row ${isDark ? \"dark\" : \"light\"}`}\r\n                                        key={song.id}\r\n                                        style={currentPlayer.id && currentPlayer.id === song.id ? {color: \"#eee\"}: null}\r\n                                        onMouseEnter={(e) => {updatePlayId(song.id)}}\r\n                                        onMouseLeave={(e) => {updatePlayId(0)}}\r\n                                        onClick={e => loadAudio(songList, song, e)}\r\n                                    >\r\n                                        <div className=\"srno-title\">\r\n                                            <div className=\"srno\">\r\n                                                {\r\n                                                    currentPlayer.id && currentPlayer.id === song.id ?\r\n                                                    <span\r\n                                                        onMouseEnter={() => setPlaying(true)}\r\n                                                        onMouseLeave={() => setPlaying(false)}\r\n                                                    > \r\n                                                        {\r\n                                                            !paused ?\r\n                                                                <PlayCircle \r\n                                                                    onClick = {e => updatePlayPause(e)}\r\n                                                                /> :\r\n                                                                playing ?\r\n                                                                    <PauseCircle \r\n                                                                        onClick = {e => updatePlayPause(e)}\r\n                                                                    />:\r\n                                                                    <EqualizerIcon />\r\n                                                        }\r\n                                                    </span>:\r\n                                                    playId === song.id ? \r\n                                                        <PlayCircle /> :\r\n                                                        index+1\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"title\">\r\n                                                <div className=\"music-title\">\r\n                                                    {song.musicTitle}\r\n                                                </div>\r\n                                                <div className=\"d-flex custom-artists\">\r\n                                                    {\r\n                                                        song.artists?.map((art, index) => {\r\n                                                            return props.artist !== art ?(\r\n                                                                <div className=\"\" key={index}>\r\n                                                                    <span className=\"song-list-artist\">\r\n                                                                        <Link to={`/artist/${art}`}>\r\n                                                                                {art}\r\n                                                                        </Link>\r\n                                                                    </span>\r\n                                                                    <span className=\"song-list-artist-separation\">\r\n                                                                        {song.artists.length - 1 > index ? \",\": \"\"}&nbsp;\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            ) : <React.Fragment key={index} />\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"duration\">\r\n                                                {song.duration ? calculateTimeContext(song.duration) : '--:--'}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        index < songList.length - 1 ? (\r\n                                            <div className=\"custom-bottom-border\" key={index} />\r\n                                        ) : <React.Fragment />\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;","import { Container } from \"reactstrap\";\r\nimport React, { useContext } from \"react\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\n\r\nimport { IsDark } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\nimport { CalculateTimeContext, Duration } from \"../../pages/Artist\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const totalDuration = useContext(Duration);\r\n    const calculateTotalDuration = useContext(CalculateTimeContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className=\"mt-3\">\r\n                <div className=\"album-container\">\r\n                    <div className={`album-image-container ${isDark ? \"dark\" : \"light\"}`}>\r\n                        <img \r\n                            className=\"album-image\"\r\n                            src={apiLinks.getArtistImgFromName + props.artist} \r\n                            alt={props.artist} />\r\n                    </div>\r\n                    <div className=\"album-details\">\r\n                        <div className=\"album-heading\">\r\n                            Artist\r\n                        </div>\r\n                        <div className=\"album-name\">\r\n                            {props.artist}\r\n                        </div>\r\n                        <div className=\"album-duration\">\r\n                            Duration&nbsp;<CircleIcon style={{ fontSize: '.5rem' }} />&nbsp;{ calculateTotalDuration(totalDuration) }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","// for related artists\r\nimport Slider from 'react-slick';\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { IsDark } from '../../App';\r\nimport { AlbumList } from '../../pages/Artist';\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./footer.css\";\r\n\r\nconst settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    draggable: true,\r\n    lazyLoad: \"ondemand\",\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n    easing: \"linear\",\r\n    responsive: [\r\n        {\r\n          breakpoint: 1200,\r\n          settings: {\r\n            slidesToShow: 5,\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 991,\r\n            settings: {\r\n              slidesToShow: 4,\r\n            }\r\n          },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n            breakpoint: 300,\r\n            settings: {\r\n              slidesToShow: 1\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nconst Footer = (props) => {\r\n\r\n    const isDark = useContext(IsDark);\r\n    const albumList = useContext(AlbumList);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Container key=\"artist-container\" className=\"mt-5\">\r\n                { albumList.length ? \r\n                    <Container className=\"slider-container\">\r\n                        <h2 className={`category-list-heading ${isDark ? \"dark\" : \"light\"}`} title=\"Artists\">Artist's Album</h2>\r\n                        <Slider {...settings}>\r\n                        { albumList.map((album, id) => {\r\n                            return (\r\n                                <div key={id} className=\"mt-3 mb-3 custom-card-items\">\r\n                                    <div className=\"artist-card-image-container\">\r\n                                        <img \r\n                                            src={apiLinks.getImage + album.musicImageKey} \r\n                                            alt={album.albumTitle} \r\n                                            className=\"artist-card-image\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-text-container\">\r\n                                        <div className=\"card-text\" style={{textAlign: \"center\"}}>\r\n                                            <h4 className=\"pt-3 pb-3 artist-name\" title={album.albumTitle}>\r\n                                                <Link to={`/album/${album.albumTitle}`} className={`artist-name ${isDark ? \"dark\" : \"light\"}`}>\r\n                                                    {album.albumTitle}\r\n                                                </Link>\r\n                                            </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        </Slider>\r\n                    </Container>\r\n                 : <React.Fragment /> }\r\n            </Container>\r\n            <Container className=\"pt-3\" fluid />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport Body from \"../components/Artist/body\";\r\nimport Header from \"../components/Artist/header\";\r\nimport Footer from \"../components/Artist/footer\";\r\nimport { apiLinks } from \"../connection.config\";\r\nimport { Error } from \"../components/Notification/Notification\";\r\nimport SpinnerGrow from \"../components/spinner/spinner-grow\";\r\nimport Navigation from \"../components/navigation/Navigation-bar/navigation\";\r\nimport { PlayerContext, IsDark } from \"../App\";\r\n\r\nimport \"./artist.css\";\r\n\r\nexport const SongList = React.createContext();\r\nexport const Duration = React.createContext();\r\nexport const AlbumList = React.createContext();\r\nexport const CalculateTimeContext = React.createContext();\r\n\r\nconst Artist = (props) => {\r\n    const isDark = useContext(IsDark);\r\n    const currentSong = useContext(PlayerContext);\r\n\r\n    const params = useParams();\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [songList, setSongList] = useState([]);\r\n    const [albumList, setAlbumList] = useState([]);\r\n    const [totalDuration, setTotalDuration] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        const getArtistDetails = async () => {\r\n            try{\r\n                setLoader(true);\r\n                const response = await axios.get(apiLinks.getArtistDetails + params.artistName, {\r\n                    headers: {\r\n                        'content-type': \"application/json\"\r\n                    },\r\n                    signal: abortController.signal\r\n                });\r\n                if(response.data.code === 200){\r\n                    // console.log(response.data.message);\r\n                    const duration = response.data.message.reduce((partial_sum, a) => partial_sum + a.duration, 0);\r\n                    const album = [];\r\n                    response.data.message.map(item => album.includes(item.albumTitle) ? null : album.push(item));\r\n\r\n                    setAlbumList(album);\r\n                    setTotalDuration(duration);\r\n                    setSongList(response.data.message);\r\n                    abortController = null;\r\n                }\r\n                else{\r\n                    Error(response.data.message);\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                // Error(err.message);\r\n            }\r\n            finally{\r\n                setLoader(false);\r\n            }\r\n        };\r\n\r\n        getArtistDetails();\r\n\r\n        return () => {\r\n            if(abortController){\r\n                abortController?.abort();\r\n                setLoader(false);\r\n            }\r\n        }\r\n\r\n    }, [params]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {loader ? \r\n                <SpinnerGrow color=\"success\" />: \r\n                <React.Fragment />\r\n            }\r\n            <Navigation />\r\n            <div className={`page-content ${isDark ? \"dark\" : \"light\"}`}\r\n                style={currentSong.id ? {height: \"calc(100vh - 215px)\"} : {height: \"calc(100vh - 70px)\"}}> \r\n                <CalculateTimeContext.Provider value={calculateSongTime}>\r\n                    <SongList.Provider value={songList}>\r\n                        <Duration.Provider value={totalDuration}>\r\n                            <AlbumList.Provider value={albumList}>\r\n                                <Header artist={params.artistName} />\r\n                                <Body artist={params.artistName} />\r\n                                <Footer artist={params.artistName} />\r\n                            </AlbumList.Provider>\r\n                        </Duration.Provider>\r\n                    </SongList.Provider>\r\n                </CalculateTimeContext.Provider>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Artist;\r\n","import React, { useState, useRef, useEffect, useCallback, \r\n        forwardRef, useImperativeHandle, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\r\nimport { SpinnerRotate } from \"../spinner/spinner-grow\";\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious';\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\r\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\r\nimport VolumeDownIcon from '@mui/icons-material/VolumeDown';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nimport { LoadAudio, IsDark } from \"../../App\";\r\nimport { apiLinks } from \"../../connection.config\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst MusicPlayer = forwardRef((props, ref) => {\r\n    const theme = useTheme();\r\n\r\n    const audioRef = useRef(null);\r\n    const borderRef = useRef(null);\r\n    const volumeRef = useRef(null);\r\n\r\n    const isDark = useContext(IsDark);\r\n    const loadAudio = useContext(LoadAudio);\r\n\r\n    const { playing, setPlaying } = props;\r\n\r\n    const [style, setStyle] = useState({display: 'none'});\r\n\r\n    // const [playing, setPlaying] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [playlist, setPlaylist] = useState([]);\r\n    const [currentSong, setCurrentSong] = useState({});\r\n    const [currentSongIdx, setCurrentSongIdx] = useState(0);\r\n\r\n    const [volume, setVolume] = useState(1.0);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [endTime, setEndTime] = useState(0);\r\n\r\n    const calculateSongTime = (time) => {\r\n        // console.log(time);\r\n        if(time !== Infinity){\r\n            const minutes = Math.floor(time / 60);\r\n            const seconds = Math.floor(time % 60);\r\n            return `${minutes < 10 ? '0' + String(minutes) : String(minutes)}:${seconds < 10 ? '0' + String(seconds) : String(seconds)}`;\r\n        } \r\n        return time;\r\n    };\r\n\r\n    const updateBorderRef = useCallback(() => {\r\n        setCurrentTime(audioRef.current.currentTime);\r\n    }, []);\r\n\r\n    const playPauseSong = () => {\r\n        if(playing){\r\n            audioRef.current.pause();\r\n        }\r\n        else{\r\n            audioRef.current.play();\r\n        }\r\n        setPlaying(prev => !prev);\r\n    };\r\n\r\n    const prevSong = useCallback(() => {\r\n        if(currentSongIdx > 0){\r\n            props.setCurrentSong(playlist[currentSongIdx - 1]);\r\n        }\r\n    }, [props, currentSongIdx, playlist]);\r\n\r\n    const nextSong = useCallback(() => {\r\n        if(currentSongIdx < (playlist.length - 1)){\r\n            audioRef.current.pause(); \r\n            props.setCurrentSong(playlist[currentSongIdx + 1]);\r\n        }\r\n    }, [currentSongIdx, playlist, props]);\r\n\r\n    const volumeInc = () => {\r\n        if(volume < 1){\r\n            const vol = parseFloat(volume.toFixed(1)) + 0.1;\r\n            volumeRef.current.value = vol;\r\n            audioRef.current.volume = vol;\r\n            setVolume(vol);\r\n        }\r\n    };\r\n\r\n    const volumeDec = () => {\r\n        if(volume > 0){\r\n            const vol = parseFloat(volume.toFixed(1)) - 0.1;\r\n            volumeRef.current.value = vol;\r\n            audioRef.current.volume = vol;\r\n            setVolume(vol);\r\n        }\r\n    };\r\n\r\n    const handleMute = (vol) => {\r\n        setVolume(vol);\r\n        audioRef.current.volume = vol;\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        handlePlayPause(){\r\n            playPauseSong();\r\n        },\r\n        handleNextSong(){\r\n            nextSong();\r\n        },\r\n        handlePrevSong(){\r\n            prevSong();\r\n        },\r\n        handleVolumeInc(){\r\n            volumeInc();\r\n        },\r\n        handleVolumeDec(){\r\n            volumeDec();\r\n        },\r\n        }),\r\n    )\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n\r\n        const loadMusic = async () => {\r\n            try{\r\n                setLoading(true);\r\n                audioRef.current.src = await (apiLinks.getAudio + props.currentSong.musicKey);\r\n                const playPromise = audioRef.current.play();\r\n                audioRef.current.volume = volume;\r\n\r\n                setEndTime(props.currentSong.duration);\r\n\r\n                if (playPromise !== undefined) {\r\n                    playPromise.then(_ => {\r\n                      abortController = null;\r\n                    })\r\n                    .catch(error => {\r\n                      setPlaying(false);\r\n                    });\r\n                }\r\n\r\n                const currentSongIndex = props.playlist?.findIndex(obj => obj.id === props.currentSong?.id);\r\n                setCurrentSongIdx(currentSongIndex);\r\n\r\n                audioRef.current.onended = () => {\r\n                    if(currentSongIndex < props.playlist?.length - 1){\r\n                        loadAudio(props.playlist, props.playlist[currentSongIndex + 1], null);\r\n                    }\r\n                    else{\r\n                        loadAudio([], {}, null);\r\n                    }\r\n                    setPlaying(false);\r\n                };\r\n            }\r\n            catch(err){\r\n                console.log(\"An Error occured while loading music\", err);\r\n                // Error(err.message);\r\n            }\r\n            finally{\r\n                audioRef.current.oncanplaythrough = () => {\r\n                    setLoading(false);\r\n                    setPlaying(true);\r\n                };\r\n                \r\n                if(!(audioRef.current.paused) && audioRef.current.readyState > 0)\r\n                setLoading(false);\r\n            }\r\n        };\r\n        \r\n        if(props.currentSong?.musicTitle !== currentSong.musicTitle){\r\n            setPlaylist(props.playlist);\r\n            setCurrentSong(props.currentSong);\r\n            loadMusic();\r\n        }\r\n\r\n        return () => {\r\n            abortController?.abort();\r\n        }\r\n        \r\n    }, \r\n    [   props.currentSong, props.playlist, props, currentSongIdx, playlist, ref, volume, setPlaying, \r\n        props?.currentSong?.musicTitle, currentSong?.musicTitle, nextSong, updateBorderRef, loadAudio\r\n    ]);\r\n\r\n    return(\r\n        <>\r\n            <div className={`mt-2 bottom-navigation-container ${isDark ? \"player-dark\" : \"player-light\"}`}>\r\n                {/* <div ref={borderRef} className=\"top-one-row\"/> */}\r\n                <Slider\r\n                    ref={borderRef}\r\n                    aria-label=\"time-indicator\"\r\n                    size=\"small\"\r\n                    default={0}\r\n                    step={1}\r\n                    max={endTime}\r\n                    value={currentTime}\r\n                    onChange={(e) => {\r\n                        audioRef.current.currentTime = parseFloat(e.target.value);\r\n                        setCurrentTime(e.target.value);\r\n                    }}\r\n                    sx={{\r\n                        color: 'rgb(64, 226, 0)',\r\n                        height: 4,\r\n                        padding: '0 !important',\r\n                        '& .MuiSlider-thumb': {\r\n                        width: 15,\r\n                        height: 15,\r\n                        transition: '0.3s cubic-bezier(.47,1.64,.41,.8)',\r\n                        '&:before': {\r\n                            boxShadow: '0 2px 12px 0 rgba(0,0,0,0.4)',\r\n                        },\r\n                        '&:hover, &.Mui-focusVisible': {\r\n                            boxShadow: `0px 0px 0px 8px ${\r\n                            theme.palette.mode === 'dark'\r\n                                ? 'rgb(255 255 255 / 16%)'\r\n                                : 'rgb(0 0 0 / 16%)'\r\n                            }`,\r\n                        },\r\n                        '&.Mui-active': {\r\n                            width: 25,\r\n                            height: 25,\r\n                        },\r\n                        },\r\n                        '& .MuiSlider-rail': {\r\n                        opacity: 0.28,\r\n                        },\r\n                    }}\r\n                />\r\n                <div className=\"custom-bottom-navigation\" >\r\n                    <div className={`timeline start ${isDark ? \"dark-time\" : \"light-time\"}`}>{calculateSongTime(currentTime)}</div>\r\n                    <div className={`timeline end ${isDark ? \"dark-time\" : \"light-time\"}`}>{endTime !== Infinity ? calculateSongTime(endTime): '--:--'}</div>\r\n                    <div className=\"musicDetails\">\r\n                        <div className=\"image-box\">\r\n                            <div className=\"navbarHead-img-container\">\r\n                                <img \r\n                                    className={`navbarHead-img ${!currentSong.musicImageKey && \"hover-img\"}`} \r\n                                    src={currentSong.musicImageKey ? apiLinks.getImage + currentSong.musicImageKey : \"/assets/svg/dvd.svg\"} \r\n                                    alt=\"player-img\" \r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"music-detail-box\">\r\n                            <h5 className=\"music-title\">\r\n                                {currentSong.musicTitle}\r\n                            </h5>\r\n                            <h6 className=\"music-album\">\r\n                                <Link className={`${isDark ? \"dark-link-hover\" : \"light-link-hover\"}`} to={`/album/${currentSong.albumTitle}`}>\r\n                                    {currentSong.albumTitle}\r\n                                </Link>\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"custom-button-group-container\">\r\n                        <div className={`custom-button-group ${isDark ? \"dark\" : \"light\"}`}>\r\n                            <SkipPreviousIcon \r\n                                onClick={currentSongIdx > 0 ? prevSong : null}\r\n                                className={currentSongIdx === 0 ? `disabled-svg ${isDark ? \"dark\" : \"light\"}`: ''}\r\n                                style={currentSongIdx > 0 ? \r\n                                    { cursor: 'pointer'} : { cursor: 'not-allowed' }} \r\n                            />\r\n                            {\r\n                                loading ?\r\n                                    <SpinnerRotate \r\n                                        size=\"\"\r\n                                        color=\"success\"\r\n                                    /> :\r\n                                    playing ?\r\n                                        <PauseIcon title=\"Pause Song\" onClick={playPauseSong} /> : \r\n                                        <PlayArrowIcon title=\"Play Song\" onClick={playPauseSong} />\r\n                            }\r\n                            <SkipNextIcon \r\n                                onClick={currentSongIdx < (playlist.length - 1) ? nextSong: null}\r\n                                className={currentSongIdx === (playlist.length - 1) ? `disabled-svg ${isDark ? \"dark\" : \"light\"}`: ''}\r\n                                style={\r\n                                        currentSongIdx < (playlist.length - 1) ? \r\n                                            { cursor: 'pointer'} : { cursor: 'not-allowed' }} \r\n                            />\r\n                            <span \r\n                                className=\"volume-range-slider\"\r\n\r\n                                onClick={e => {\r\n                                    setStyle(prev => {\r\n                                        return {\r\n                                            display: prev.display === 'block' ? 'none' : 'block'\r\n                                        }\r\n                                    })\r\n                                }}\r\n                            >\r\n                                {\r\n                                    volume > 0.5 ?\r\n                                        <VolumeUpIcon className=\"volume-svg\" /> :\r\n                                        volume > 0 ?\r\n                                            <VolumeDownIcon className=\"volume-svg\" /> :\r\n                                            <VolumeOffIcon className=\"volume-svg\" />\r\n                                }\r\n                                <input style={style} min={0} max={1} step={0.1} onChange={e => handleMute(parseFloat(e.target.value))}\r\n                                    type=\"range\" orient=\"vertical\" className=\"volume-slider\" ref={volumeRef} defaultValue={volume} />\r\n                            </span>\r\n                        </div>\r\n                        <audio ref={audioRef} preload=\"auto\" onTimeUpdate={updateBorderRef} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <Container className=\"mt-3 pt-5 pb-5\"/> */}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default MusicPlayer;","import React, { useState, useRef, useEffect } from 'react';\nimport { Flip, ToastContainer } from 'react-toastify';\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nimport Home from './pages/Home.js';\nimport Error from './pages/Error.js';\nimport Album from './pages/Album.js';\nimport Admin from './pages/admin.js';\nimport Artist from \"./pages/Artist.js\";\nimport { Subscribe, Unsubscribe } from './client/index';\nimport * as serviceWorker from './client/serviceWorker.js';\nimport MusicPlayer from \"./components/MusicPlayer/index.js\";\n\nimport './App.css';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const IsDark = React.createContext();\nexport const SetIsDark = React.createContext();\nexport const Playing = React.createContext();\nexport const LoadAudio = React.createContext();\nexport const PlayPause = React.createContext();\nexport const PlayerContext = React.createContext();\n\nfunction App() {\n  library.add(faHome);\n  \n  const player = useRef(null);\n\n  const [isDark, setIsDark] = useState(true);\n  const [playlist, setPlaylist] = useState([]);\n  const [playing, setPlaying] = useState(false);\n  const [currentSong, setCurrentSong] = useState({});\n\n  const loadAudio = (ll, item, e) => {\n    if(e)\n        e.preventDefault();\n    setPlaylist(ll);\n    setCurrentSong(item);\n    // console.log(ll, item);\n  };\n\n  const handleKeyPress = (e) => {\n    switch(e.code){\n        case 'Space':  \n            if(player.current)\n              e.preventDefault();\n              player?.current?.handlePlayPause();\n            break;\n        case 'ArrowLeft':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handlePrevSong();\n            break;\n        case 'ArrowRight':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleNextSong();\n            break;\n        case 'ArrowUp':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleVolumeInc();\n            break;\n        case 'ArrowDown':\n            if(player.current)\n              e.preventDefault();\n              player?.current?.handleVolumeDec();\n            break;\n        default:\n            break;\n    }\n    return false;\n  };\n\n  const updateDark = () => {\n    window?.localStorage?.setItem(\"mode\", !isDark);\n    setIsDark(prev => !prev);\n  };\n\n  useEffect(() => {\n    if(Object.keys(currentSong).length > 0){\n      document.title = currentSong.musicTitle;\n    }\n    else{\n      document.title = \"Sangeet - Ad Free Music App\"\n    }\n  }, [currentSong]);\n\n  useEffect(() => {\n\n    if(\"Notification\" in window){\n      if(Notification.permission === \"default\"){\n          Notification.requestPermission().then((permission) => {\n              if(permission === \"granted\"){\n                  Subscribe();\n              }\n              else{\n                Unsubscribe();\n              }\n          })\n      }\n      else if(Notification.permission === \"granted\"){\n          Subscribe();\n          // console.log(\"already subscribed\");\n      }\n      else{\n        Unsubscribe();\n      }\n    }\n    else{\n        console.log(\"Notification is not supported\");\n    }\n    \n    setIsDark(window?.localStorage?.getItem(\"mode\") === 'true' ? true : false);\n    \n    window?.addEventListener('keydown', handleKeyPress, false);\n\n    return () => {\n      document.removeEventListener('keypress', handleKeyPress);\n    };\n  }, []);\n  \n  return (\n    <React.Fragment>\n      <PlayerContext.Provider value={currentSong}>\n        <PlayPause.Provider value={handleKeyPress}>\n          <Playing.Provider value={playing}>\n            <LoadAudio.Provider value={loadAudio}>\n              <IsDark.Provider value={isDark}>\n                <SetIsDark.Provider value={updateDark}>\n                  <div className={`app-bg ${isDark ? \"dark\" : \"light\"}`}>\n                    <Router>\n                      <Routes>\n\n                        <Route exact path=\"/\" element={<Home />} />\n                        <Route path=\"/album/:albumName\" element={<Album />} />\n                        <Route path=\"/artist/:artistName\" element={<Artist />} />\n                        <Route path=\"/admin/\" element={<Admin />} />\n                        <Route path=\"*\" element={<Error />} />\n\n                      </Routes>\n                      {\n                          playlist.length ? \n                              <MusicPlayer \n                                  ref={player}\n                                  currentSong={currentSong}\n                                  playlist={playlist}\n                                  setCurrentSong={setCurrentSong}\n                                  playing={playing}\n                                  setPlaying={setPlaying}\n                              />\n                              : <React.Fragment />\n                      }\n                    </Router>\n                  </div>\n                  <ToastContainer \n                      position='top-right'\n                      autoClose={3000}\n                      hideProgressBar={false}\n                      newestOnTop={true}\n                      closeOnClick={true}\n                      rtl={false}\n                      pauseOnFocusLoss\n                      draggable\n                      pauseOnHover\n                      theme=\"dark\"\n                      transition={Flip}\n                  />\n                </SetIsDark.Provider>\n              </IsDark.Provider>\n            </LoadAudio.Provider>\n          </Playing.Provider>\n        </PlayPause.Provider>\n      </PlayerContext.Provider>\n    </React.Fragment>\n  );\n}\n\nserviceWorker.register();\n\nexport default App;\n","export function register(){\r\n    if('serviceWorker' in navigator){\r\n        const url = \"http://localhost:3000/sw.js\";\r\n        // const url = \"http://3.109.59.110:5000/\"\r\n        navigator.serviceWorker.register(url, {\r\n            scope: '/',\r\n        })\r\n        .then(function(registration) {\r\n            registration.addEventListener('updatefound', function() {\r\n              // If updatefound is fired, it means that there's\r\n              // a new service worker being installed.\r\n              const installingWorker = registration.installing;\r\n              console.log('A new service worker is being installed:',\r\n                installingWorker);\r\n            });\r\n\r\n            registration.addEventListener('pushsubscriptionchange', function(event) {\r\n                console.log(\"Pushsubscriptionchange\", event);\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.log('Service worker registration failed:', error);\r\n        });\r\n    }\r\n    else {\r\n        console.log('Service workers are not supported.');\r\n    }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}